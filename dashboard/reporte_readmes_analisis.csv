repositorio,tipo_proyecto,nombre_proyecto,es_util,longitud_readme,tiene_titulo,num_subtitulos,tiene_imagenes,tiene_code_blocks,tiene_tablas,readme_limpio
UPT-FAING-EPIS/proyecto_curso-intranet-universidad-matricula,proyecto_curso,intranet-universidad-matricula,True,149,False,0,False,False,False,"](https://classroom.github.com/a/7qywsEwv)
](https://classroom.github.com/online_ide?assignment_repo_id=10528167&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_curso-intranet_Usuarios,proyecto_curso,intranet_Usuarios,True,149,False,0,False,False,False,"](https://classroom.github.com/a/7qywsEwv)
](https://classroom.github.com/online_ide?assignment_repo_id=10528204&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_curso-intranet-cursos,proyecto_curso,intranet-cursos,True,4476,False,20,False,True,True,"](https://classroom.github.com/a/7qywsEwv)
# API REST Cursos 

## Descripción
Este es un proyecto de API REST para la entidad Curso, que permite realizar operaciones CRUD (Crear, Leer y Actualizar ) en una base de datos.

## Paquetes necesarios

| Package | Version |
|---------|---------|
| asgiref | 3.6.0   |
| Django  | 4.2     |
| mysqlclient | 2.1.1 |
| pip     | 23.1.1  |
| PyMySQL | 1.0.3   |
| setuptools | 67.6.1 |
| sqlparse | 0.4.4   |
| tzdata  | 2023.3  |
| wheel   | 0.40.0  |

## URLs

### `GET /`
Obtiene una lista de todos los cursos.

### `GET /<str:CodigoCurso>`
Obtiene los datos de los cursos en específico.

### `POST /`
Crea un nuevo curso.

### `PUT /<str:CodigoCurso>`
Actualiza los datos de los cursos existente.

## Vistas

### APICursosViews

Vista que maneja las operaciones CRUD para la entidad Curso.

#### Métodos

## GET

Obtiene una lista de todos los Cursos o los datos de un Curso específico si se proporciona el Codigo del Curso como parámetro en la URL.

Parámetros:
- `CodigoCurso` (str): Codigo del Curso.

Respuestas:
- 200 OK: Si se proporciona el Codigo del Curso, devuelve uno o mas datos de ese curso en formato JSON.
- 404 Not Found: Si se proporciona un Codigo del Curso que no existe.

Ejemplo de petición:

```
GET / HTTP/1.1
Host: example.com
Content-Type: application/json
```

Respuesta:

```
HTTP/1.1 200 OK
Content-Type: application/json
{
  ""Cursos"": [
    {
      ""CodigoCurso"": ""EG-181"",
      ""NombreCurso"": ""COMUNICACIÓN I"",
      ""THCurso"": 5,
      ""PreRequisitoCurso"": ""Ninguno"",
      ""CicloCurso"": ""I"",
      ""CodigoProfesor_id"": 1,
      ""FkEstado_id"": 1
    },
    {
      ""CodigoCurso"": ""EG-182"",
      ""NombreCurso"": ""MATEMATICA BASICA"",
      ""THCurso"": 6,
      ""PreRequisitoCurso"": ""Ninguno"",
      ""CicloCurso"": ""I"",
      ""CodigoProfesor_id"": 2,
      ""FkEstado_id"": 1
    },
    ]
}
```

Ejemplo de petición con ID de Curso en específico:

```
GET /1 HTTP/1.1
Host: example.com
Content-Type: application/json
```

Respuesta:

```
HTTP/1.1 200 OK
Content-Type: application/json
{
  ""Cursos"": {
    ""CodigoCurso"": ""SI-085"",
    ""NombreCurso"": ""TALLER DE EMPRENDIMIENTO Y LIDERAZGO"",
    ""THCurso"": 4,
    ""PreRequisitoCurso"": ""Ninguno"",
    ""CicloCurso"": ""X"",
    ""CodigoProfesor_id"": 8,
    ""FkEstado_id"": 1
  }
}
```

Continuando la documentación:

## POST

El método `POST` crea un nuevo Curso con los datos proporcionados en el cuerpo de la solicitud. 

##### Parámetros

Los siguientes parámetros deben ser proporcionados en el cuerpo de la solicitud en formato JSON:

- `CodigoCurso` (string): Codigo del curso
- `NombreCurso` (string): Nombre del curso.
- `THCurso` (int): Horas Totales del curso
- `PreRequisitoCurso` (string): Prerequisito para llevar el curso.
- `CodigoProfesor` (int): Codigo del profesor.
- `FkEstado` (int): Estado del Curso.

##### Ejemplo de solicitud

```
POST / HTTP/1.1
Host: example.com
Content-Type: application/json
Content-Length: 102
{
      ""CodigoCurso"": ""SI-1001"",
      ""NombreCurso"": ""DDD"",
      ""THCurso"": 4,
      ""PreRequisitoCurso"": ""Ninguno"",
      ""CicloCurso"": ""Electivo"",
      ""CodigoProfesor"": 2,
      ""FkEstado_id"": 1
}
```

##### Respuesta

- `200 OK`: Si se crea el curso correctamente.

##### Ejemplo de respuesta

```
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 19
{
    ""message"": ""Success""
}
```
## PUT
El método `PUT` se utiliza para actualizar los datos de un Curso existente en la base de datos.

### Parámetros

- `CodigoCurso` (str): El Codigo del Curso que se desea actualizar.

En el cuerpo de la solicitud se deben proporcionar los siguientes parámetros:

- `NombreCurso` (string): Nombre del curso.
- `THCurso` (int): Horas Totales del curso
- `PreRequisitoCurso` (string): Prerequisito para llevar el curso.
- `CodigoProfesor` (int): Codigo del profesor.
- `FkEstado` (int): Estado del Curso.

### Respuestas

- `200 OK`: Si se actualizan los datos del Curso correctamente.
- `404 Not Found`: Si el Curso con el Codigo proporcionado no existe.

### Ejemplo

A continuación se presenta un ejemplo de solicitud `PUT` para actualizar los datos de un Curso:

```
PUT /APICursos/SI-SI-085 HTTP/1.1
Host: example.com
Content-Type: application/json
Authorization: Token xxxxxxxxxxxxxxxxxxxxxxxx
{
    ""CodigoCurso"": ""SI-085"",
    ""NombreCurso"": ""TALLER DE EMPRENDIMIENTO Y LIDERAZGO"",
    ""THCurso"": 4,
    ""PreRequisitoCurso"": ""Ninguno"",
    ""CicloCurso"": ""X"",
    ""CodigoProfesor_id"": 8,
    ""FkEstado_id"": 1
}
```"
UPT-FAING-EPIS/proyecto_curso-gestion-biblioteca-bilbo,proyecto_curso,gestion-biblioteca-bilbo,True,149,False,0,False,False,False,"](https://classroom.github.com/a/7eeg8pOW)
](https://classroom.github.com/online_ide?assignment_repo_id=10528436&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_curso-tienda-de-zapatillas-kalpten,proyecto_curso,tienda-de-zapatillas-kalpten,True,367,False,2,True,False,False,"](https://classroom.github.com/a/7eeg8pOW)
](https://classroom.github.com/online_ide?assignment_repo_id=10528455&assignment_repo_type=AssignmentRepo)
# PRUEBA
## PRUEBA2
### PRUEBA3
![Screenshot of a comment on a GitHub issue showing an image, added in the Markdown, of an Octocat smiling and raising a tentacle.](https://myoctocat.com/assets/images/base-octocat.svg)"
UPT-FAING-EPIS/proyecto_curso-laboratorio-automotriz-laditec,proyecto_curso,laboratorio-automotriz-laditec,True,2415,True,3,True,False,False,"# Análisis y Mejoramiento del sistema intranet de la empresa LADITEC

Curso: Calidad y Pruebas de Software

Docente: Ing. Patrick Cuadros

Integrantes:

- Condori Loayza, Helbert Andres (2020067571)
- Aranda Reyes, Diego Andre (2019063855)
- Mamani Lima, Erick Mauricio (2020066321)
- Rivera Mendoza, Jhonny (2020067144)


### Resumen del Proyecto

El proyecto se enfoca en reducir la deuda técnica y las vulnerabilidades del sistema intranet de LADITEC. Se utilizará SonarQube para identificar áreas problemáticas, se corregirán con un equipo de desarrolladores y se mantendrá la calidad del código. El objetivo es eliminar los problemas y mejorar el sistema de manera completa.
# DIAGRAMA DE CASOS DE USO
![image](https://github.com/UPT-FAING-EPIS/proyecto_curso-laboratorio-automotriz-laditec/assets/102829461/987adf2a-e21c-4567-b76e-700a4638917e)
# DIAGRAMA DE CLASES
![image](https://github.com/UPT-FAING-EPIS/proyecto_curso-laboratorio-automotriz-laditec/assets/102829461/3a46d862-e882-4c9b-a7ed-e52656804843)

### Desplegar:
Se ha trabajado con MAVEN por lo que se debe ejecutar en el directorio del proyecto:
mvn clean install


### workflow:

name: Testing

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn -f HACLaditec/pom.xml clean test
      - name: Generate Jacoco Coverage Report
        run: mvn -f HACLaditec/pom.xml jacoco:report
      - name: Generate Allure Report
        run: mvn -f HACLaditec/pom.xml allure:report
      - name: Copy Allure Results to Report Directory
        run: cp -r HACLaditec/allure-results HACLaditec/target/site/allure-maven-plugin/
      - name: Upload Allure Report
        uses: actions/upload-artifact@v2
        with:
          name: allure-report
          path: HACLaditec/target/site/allure-maven-plugin/

![Captura de pantalla 2023-07-07 131806](https://github.com/UPT-FAING-EPIS/proyecto_curso-laboratorio-automotriz-laditec/assets/102819429/53dd5d02-fd76-46d3-89fa-2a8cc6c1092d)

# Reporte:


![e6404d05-f3df-4c47-9f9f-6453d5a79088](https://github.com/UPT-FAING-EPIS/proyecto_curso-laboratorio-automotriz-laditec/assets/102819429/28af759d-ad42-4623-9aad-7af3b7a6d4e2)"
UPT-FAING-EPIS/proyecto_curso-Almacen,proyecto_curso,Almacen,True,149,False,0,False,False,False,"](https://classroom.github.com/a/7eeg8pOW)
](https://classroom.github.com/online_ide?assignment_repo_id=10528748&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_curso_app_banca-api_usuario,proyecto_curso_app_banca,api_usuario,True,3381,False,7,True,True,False,"](https://classroom.github.com/a/hobgdplm)
<p align=""center"">
  <a href=""http://nestjs.com/"" target=""blank""><img src=""https://nestjs.com/img/logo-small.svg"" width=""200"" alt=""Nest Logo"" /></a>
</p>

[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456
[circleci-url]: https://circleci.com/gh/nestjs/nest

  <p align=""center"">A progressive <a href=""http://nodejs.org"" target=""_blank"">Node.js</a> framework for building efficient and scalable server-side applications.</p>
    <p align=""center"">
<a href=""https://www.npmjs.com/~nestjscore"" target=""_blank""><img src=""https://img.shields.io/npm/v/@nestjs/core.svg"" alt=""NPM Version"" /></a>
<a href=""https://www.npmjs.com/~nestjscore"" target=""_blank""><img src=""https://img.shields.io/npm/l/@nestjs/core.svg"" alt=""Package License"" /></a>
<a href=""https://www.npmjs.com/~nestjscore"" target=""_blank""><img src=""https://img.shields.io/npm/dm/@nestjs/common.svg"" alt=""NPM Downloads"" /></a>
<a href=""https://circleci.com/gh/nestjs/nest"" target=""_blank""><img src=""https://img.shields.io/circleci/build/github/nestjs/nest/master"" alt=""CircleCI"" /></a>
<a href=""https://coveralls.io/github/nestjs/nest?branch=master"" target=""_blank""><img src=""https://coveralls.io/repos/github/nestjs/nest/badge.svg?branch=master#9"" alt=""Coverage"" /></a>
<a href=""https://discord.gg/G7Qnnhy"" target=""_blank""><img src=""https://img.shields.io/badge/discord-online-brightgreen.svg"" alt=""Discord""/></a>
<a href=""https://opencollective.com/nest#backer"" target=""_blank""><img src=""https://opencollective.com/nest/backers/badge.svg"" alt=""Backers on Open Collective"" /></a>
<a href=""https://opencollective.com/nest#sponsor"" target=""_blank""><img src=""https://opencollective.com/nest/sponsors/badge.svg"" alt=""Sponsors on Open Collective"" /></a>
  <a href=""https://paypal.me/kamilmysliwiec"" target=""_blank""><img src=""https://img.shields.io/badge/Donate-PayPal-ff3f59.svg""/></a>
    <a href=""https://opencollective.com/nest#sponsor""  target=""_blank""><img src=""https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg"" alt=""Support us""></a>
  <a href=""https://twitter.com/nestframework"" target=""_blank""><img src=""https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow""></a>
</p>
  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)
  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->

## Description

[Nest](https://github.com/nestjs/nest) framework TypeScript starter repository.

## Installation

```bash
$ npm install
```

## Running the app

```bash
# development
$ npm run start

# watch mode
$ npm run start:dev

# production mode
$ npm run start:prod
```

## Test

```bash
# unit tests
$ npm run test

# e2e tests
$ npm run test:e2e

# test coverage
$ npm run test:cov
```

## Support

Nest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please [read more here](https://docs.nestjs.com/support).

## Stay in touch

- Author - [Kamil Myśliwiec](https://kamilmysliwiec.com)
- Website - [https://nestjs.com](https://nestjs.com/)
- Twitter - [@nestframework](https://twitter.com/nestframework)

## License

Nest is [MIT licensed](LICENSE)."
UPT-FAING-EPIS/proyecto_curso_app_banca-api_productos,proyecto_curso_app_banca,api_productos,True,149,False,0,False,False,False,"](https://classroom.github.com/a/hobgdplm)
](https://classroom.github.com/online_ide?assignment_repo_id=10877152&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_curso_app_banca-api_notificaciones,proyecto_curso_app_banca,api_notificaciones,True,280,False,0,True,False,False,"](https://classroom.github.com/a/hobgdplm)
](https://classroom.github.com/online_ide?assignment_repo_id=10877157&assignment_repo_type=AssignmentRepo)
![notificacion de la deuda](https://user-images.githubusercontent.com/82143374/236651044-6e29de4e-20d1-4f7f-9e6e-50bfe82a00d9.png)"
UPT-FAING-EPIS/proyecto_curso_app_banca-api_servicios,proyecto_curso_app_banca,api_servicios,True,309,False,0,False,False,False,"](https://classroom.github.com/a/hobgdplm)
](https://classroom.github.com/online_ide?assignment_repo_id=10877193&assignment_repo_type=AssignmentRepo)
-------------------------------
UTILIZAMOS PYTHON - DJANGO
-------------------------------
UTILIZAREMOS LA BASE DE DATOS: MYSQL
-------------------------------"
UPT-FAING-EPIS/proyecto_curso_app_banca-api_operacion,proyecto_curso_app_banca,api_operacion,True,149,False,0,False,False,False,"](https://classroom.github.com/a/hobgdplm)
](https://classroom.github.com/online_ide?assignment_repo_id=10877231&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_unidad_ii-intranet-asistencias,proyecto_unidad_ii,intranet-asistencias,True,149,False,0,False,False,False,"](https://classroom.github.com/a/Auq5ESal)
](https://classroom.github.com/online_ide?assignment_repo_id=11134945&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_unidad_ii-intranet-cursos,proyecto_unidad_ii,intranet-cursos,True,149,False,0,False,False,False,"](https://classroom.github.com/a/Auq5ESal)
](https://classroom.github.com/online_ide?assignment_repo_id=11144818&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_unidad_ii-intranet-universidad-matricula,proyecto_unidad_ii,intranet-universidad-matricula,True,149,False,0,False,False,False,"](https://classroom.github.com/a/Auq5ESal)
](https://classroom.github.com/online_ide?assignment_repo_id=11297335&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto_unidad_ii-intranet_humboldt,proyecto_unidad_ii,intranet_humboldt,True,149,False,0,False,False,False,"](https://classroom.github.com/a/Auq5ESal)
](https://classroom.github.com/online_ide?assignment_repo_id=11320294&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto-unidad-iii-pds-api_notificaciones,proyecto,unidad-iii-pds-api_notificaciones,True,241,True,0,False,False,False,"# API Notifications
npm install express axios body-parser mongoose mysql amqplib nodemailer


acceder a la API de rabbitmq
https://www.cloudamqp.com/docs/api.html
https://api.cloudamqp.com/console/7f0eab36-b574-4672-88ee-971b8c7537b5/details"
UPT-FAING-EPIS/proyecto-unidad-iii-pds-api_servicios,proyecto,unidad-iii-pds-api_servicios,True,106162,False,23,False,True,False,"](https://classroom.github.com/a/hobgdplm)
](https://classroom.github.com/online_ide?assignment_repo_id=10877193&assignment_repo_type=AssignmentRepo)

# SERVICIO BANCARIO

## OBJETIVOS
  * Crear un API para servicio Bancario (Agua, Luz, Educacion, Intenet y Telefonia)
  * Implementar 5 patrones de diseño
  * Implementar un Intefaz para cada servicio

## REQUERIMIENTOS
  * Conocimientos: 
    - Conocimientos básicos de Python (usando el framework de Django).
    - Conocimientos básicos de React.
    - Conociminetos básicos sobre patrones de diseño
  * Hardware:
    - Virtualization activada en el BIOS..
    - CPU SLAT-capable feature.
    - Al menos 4GB de RAM.
  * Software:
    - Windows 10 64bit: Pro, Enterprise o Education (1607 Anniversary Update, Build 14393 o Superior)
    - Docker Desktop 
    - Powershell versión 7.x
    - Visual Studio Code
    - Python
    - Framework Django
    - Framework React
    - Rabbitmq  

## CONSIDERACIONES INICIALES
  * Clonar el repositorio mediante git para tener los recursos necesarios

## DESARROLLO

### PARTE I: Creción de un API en Python (Django) para cada servicio

Primero ejecutamos el archivo requirements.txt para instalar los paquetes necesarios.
```
pip install -r requirements.txt
```
#### 1. Crear una API para el servicio de Agua

1.1. Para comenzar, implementaremos la funcionalidad de pago de facturas de agua a través de nuestra API. Utilizaremos el framework Django REST para desarrollar nuestras vistas y modelos. A continuación, se muestra un ejemplo de la implementación de la API de servicio de agua:
> views.py
```python

from rest_framework.generics import ListCreateAPIView
from api_recibos_agua import serializers, scraping, models
from rest_framework.response import Response
from rest_framework import status
from rest_framework.views import APIView
from api_recibos_agua import models

class DeudaViews(APIView):

    def get(self, request, *args, **kwargs):
        codigo_cliente = request.GET.get('codigo_cliente')
        if not codigo_cliente:
            return Response({""error"": ""El parámetro 'codigo_cliente' es obligatorio.""}, status=status.HTTP_400_BAD_REQUEST)

        correo = ""apiagua@gmail.com""
        dni = ""87654321""
        url = ""https://pagovisa.epstacna.com.pe:8443""

        deuda = scraping.obtener_deuda(url, codigo_cliente, correo, dni)

        if deuda is not None:
            recibo_agua = models.ReciboAgua(
                cliente=codigo_cliente,
                fecha_emision="""",
                fecha_vencimiento="""",
                monto=deuda,
                pagado=False
            )
            recibo_agua.save()

            return Response({""deuda"": deuda})
        else:
            return Response({""error"": ""No se encontró información de deuda para el cliente.""})

    def post(self, request, *args, **kwargs):
        return Response({""error"": ""Método no permitido.""}, status=status.HTTP_405_METHOD_NOT_ALLOWED)

    def put(self, request, *args, **kwargs):
        return Response({""error"": ""Método no permitido.""}, status=status.HTTP_405_METHOD_NOT_ALLOWED)

    def delete(self, request, *args, **kwargs):
        return Response({""error"": ""Método no permitido.""}, status=status.HTTP_405_METHOD_NOT_ALLOWED)


class PagosViews(ListCreateAPIView):
    queryset = models.ReciboAgua.objects.all()
    serializer_class = serializers.ReciboAguaSerializer
```
1.2. En nuestra aplicación de servicio bancario, necesitamos un modelo de datos que represente los recibos de agua de nuestros clientes. Para ello, crearemos un archivo models.py y definiremos el siguiente modelo:
> models.py
```python
from django.db import models

class ReciboAgua(models.Model):
    cliente = models.CharField(max_length=200)
    fecha_emision = models.DateField()
    fecha_vencimiento = models.DateField()
    monto = models.DecimalField(max_digits=8, decimal_places=2)
    pagado = models.BooleanField(default=False)

    def __str__(self):
        return self.cliente
```
1.3. A continuación, necesitamos configurar las URL de nuestra API para que los usuarios puedan acceder a los diferentes recursos. Para ello, crearemos un archivo urls.py y agregaremos las siguientes rutas:
> urls.py
```python
from django.urls import path, include
from rest_framework import routers
from drf_yasg.views import get_schema_view
from drf_yasg import openapi
from api_recibos_agua import views

urlpatterns = [
    path('deuda/', views.DeudaViews.as_view(), name='get_deuda'),  
    path('pagos/', views.PagosViews.as_view(), name='pagos_alumno'),
]
```
1.4. Los serializadores nos permiten convertir los objetos de Django en formatos legibles por la API, como JSON. En nuestro caso, crearemos un archivo serializers.py y definiremos el siguiente serializador:
> serializers.py
```python
from rest_framework import serializers
from .models import ReciboAgua

class ReciboAguaSerializer(serializers.ModelSerializer):
    class Meta:
        model = ReciboAgua
        fields = '__all__'
```

#### 2. Creación de la API de servicio de teléfono

2.1. Continuando con nuestro proyecto de servicio bancario, agregaremos la funcionalidad de pago de facturas de teléfono a través de nuestra API. Utilizaremos el framework Django REST y aprovecharemos las características de las vistas basadas en modelos. A continuación, se muestra la implementación de la API de servicio de teléfono:

> views.py
```python
from rest_framework.viewsets import ModelViewSet
from rest_framework import status
from rest_framework.decorators import action
from post.models import Cliente, RegistroLlamadas, Plan, Factura
from post.api.serializers import ClienteSerializer, RegistroLlamadasSerializer, PlanSerializer, FacturaSerializer
from datetime import date, timedelta
from Patrones.observers import PatterObserverPagos, RabbitObserver
from Patrones.factory import DeudInterPagoFactory

pattern_observer = PatterObserverPagos()

class ClienteViewSet(ModelViewSet):
    queryset = Cliente.objects.all()
    serializer_class = ClienteSerializer

    @action(detail=True, methods=['put'])
    def cancelar_servicio(self, request, pk=None):
        cliente = self.get_object()
        cliente.servicio_activo = False
        cliente.save()
        serializer = self.serializer_class(cliente)
        return Response({'status': 'OK', 'message': 'Servicio cancelado correctamente.'})

    def update(self, request, pk=None):
        cliente = self.get_object()
        serializer = ClienteSerializer(cliente, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        else:
            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

class RegistroLlamadasViewSet(ModelViewSet):
    queryset = RegistroLlamadas.objects.all()
    serializer_class = RegistroLlamadasSerializer

class PlanViewSet(ModelViewSet):
    queryset = Plan.objects.all()
    serializer_class = PlanSerializer

    def update(self, request, pk=None):
        plan = self.get_object()
        serializer = PlanSerializer(plan, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        else:
            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

class FacturaViewSet(ModelViewSet):
    queryset = Factura.objects.all()
    serializer_class = FacturaSerializer

    def update(self, request, pk=None):
        factura = self.get_object()
        serializer = FacturaSerializer(factura, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        else:
            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    def destroy(self, request, pk=None):
        factura = self.get_object()
        factura.delete()
        return Response({'status': 'OK', 'message': 'Factura eliminada correctamente.'})

    lookup_field = 'CodigoDeudInter'

    @action(detail=False, methods=['post'])
    def activar_plan(self, request):
        cliente_id = request.data.get('cliente_id')
        plan_id = request.data.get('plan_id')
        monto_pago = request.data.get('monto_pago')

        try:
            cliente = Cliente.objects.get(pk=cliente_id)
            plan = Plan.objects.get(pk=plan_id)
        except (Cliente.DoesNotExist, Plan.DoesNotExist):
            return Response({'mensaje': 'Cliente o plan no encontrado.'}, status=status.HTTP_400_BAD_REQUEST)

        if monto_pago != plan.costo_mensual:
            return Response({'mensaje': 'El monto del pago no coincide con el costo mensual del plan.'}, status=status
```
2.2. Comenzaremos diseñando nuestra base de datos utilizando los modelos de Django. En estos modelos, hemos definido las clases Cliente, RegistroLlamadas, Plan y Factura, que representan las entidades principales de nuestro servicio bancario. Cada clase define varios campos que almacenarán la información relevante para cada entidad. Además, hemos definido los métodos __str__ para representar los objetos de manera legible.
> models.py
```python
from django.db import models
import datetime

class Cliente(models.Model):
    nombre = models.CharField(max_length=100)
    direccion = models.CharField(max_length=200, default='Desconocido')
    telefono = models.CharField(max_length=20)
    cuenta_bancaria = models.CharField(max_length=20)
    servicio_activo = models.BooleanField(default=True) 

    def __str__(self):
        return self.nombre

class RegistroLlamadas(models.Model):
    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)
    fecha_hora = models.DateTimeField(auto_now_add=True)
    duracion = models.PositiveIntegerField()

class Plan(models.Model):
    nombre = models.CharField(max_length=100)
    costo_mensual = models.DecimalField(max_digits=10, decimal_places=2)
    minutos_incluidos = models.IntegerField()
    datos_incluidos = models.IntegerField()

    def __str__(self):
        return self.nombre

class Factura(models.Model):
    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)
    plan = models.ForeignKey(Plan, on_delete=models.CASCADE)
    monto = models.DecimalField(max_digits=10, decimal_places=2)
    fecha_emision = models.DateField()
    fecha_vencimiento = models.DateField(default=datetime.date.today() + datetime.timedelta(days=30))
    pagado = models.BooleanField(default=False)
    estado = models.BooleanField(default=True)

    def __str__(self):
        return f""Factura para {self.cliente} en {self.fecha_emision}""

```
2.3. Para poder acceder a nuestra API, necesitamos configurar las URL correspondientes. Aquí hemos creado un enrutador DefaultRouter que nos permitirá acceder a las vistas correspondientes a través de las URLs definidas. Registramos las vistas de RegistroLlamadasViewSet, ClienteViewSet, PlanViewSet y FacturaViewSet en el enrutador para que estén disponibles a través de las rutas especificadas.
> urls.py
```python
from django.urls import path, include
from rest_framework import routers
from rest_framework.routers import DefaultRouter
from .api.views import RegistroLlamadasViewSet, ClienteViewSet, PlanViewSet, FacturaViewSet

router_posts = DefaultRouter()
router_posts.register('registrollamadas', RegistroLlamadasViewSet)
router_posts.register('clientes', ClienteViewSet)
router_posts.register('planes', PlanViewSet)
router_posts.register('facturas', FacturaViewSet)

urlpatterns = [
    path('', include(router_posts.urls)),
]
```
2.4. Los serializadores nos permiten convertir los objetos de Django en formatos como JSON, que son más adecuados para la comunicación a través de una API. Aquí hemos definido los serializadores para cada modelo, especificando el modelo correspondiente y los campos que deseamos incluir en la serialización. El uso de fields = '__all__' nos permite incluir todos los campos del modelo en el serializador.

> serializers.py
```python
from django.urls import path, include
from rest_framework import routers
from rest_framework.routers import DefaultRouter
from .api.views import RegistroLlamadasViewSet, ClienteViewSet, PlanViewSet, FacturaViewSet

router_posts = DefaultRouter()
router_posts.register('registrollamadas', RegistroLlamadasViewSet)
router_posts.register('clientes', ClienteViewSet)
router_posts.register('planes', PlanViewSet)
router_posts.register('facturas', FacturaViewSet)

urlpatterns = [
    path('', include(router_posts.urls)),
]
```


#### 3. Creación de la API de servicio de educación

3.1. En nuestro proyecto de servicio bancario, también incluiremos la funcionalidad de pago de deudas de educación a través de nuestra API. Utilizaremos el framework Django REST y aprovecharemos las vistas basadas en conjuntos. A continuación, se muestra un ejemplo de la implementación de la API de servicio de educación:

> views.py
```python
from rest_framework.exceptions import NotFound
from rest_framework import status, viewsets, permissions
from rest_framework.response import Response
from rest_framework.views import APIView
from .models import tbAlumno, tbDeudasAlumno, tbPagosAlumno
from .serializers import tbDeudasAlumnoSerializer, tbPagosAlumnoSerializer

class DeudasAlumnoViews(viewsets.ModelViewSet):
    queryset = tbDeudasAlumno.objects.all()
    serializer_class = tbDeudasAlumnoSerializer
    permission_classes = [permissions.AllowAny]

    def search_by_dni(self, dni):
        queryset = self.queryset.filter(fkCodigoAlumno=dni)
        serializer = self.serializer_class(queryset, many=True)
        return Response(serializer.data)

class PagosAlumnoViews(viewsets.ModelViewSet):
    queryset = tbPagosAlumno.objects.all()
    serializer_class = tbPagosAlumnoSerializer
    permission_classes = [permissions.AllowAny]


class BuscarDeudores(APIView):
    def get(self, request, fk_codigo_alumno):
        alumno = tbAlumno.objects.filter(CodigoAlumno=fk_codigo_alumno).first()

        if not alumno:
            raise NotFound('Alumno no encontrado')

        deudas = tbDeudasAlumno.objects.filter(fkCodigoAlumno__CodigoAlumno=fk_codigo_alumno)
        serializer = tbDeudasAlumnoSerializer(deudas, many=True)

        response_data = []
        for deuda in serializer.data:
            if deuda['Estado'] == 0:
                deuda['Situacion'] = 'Pendiente'
            else:
                deuda['Situacion'] = 'Pagado'
            response_data.append(deuda)

        return Response(response_data)
```
3.2.	Acontinuaciom, hemos definido cuatro clases de modelo: tbAlumno, tbCuenta, tbDeudasAlumno y tbPagosAlumno. Estas clases representan entidades como alumnos, cuentas, deudas y pagos en nuestro servicio bancario. En el archivo models.py de la aplicación api, agregue las siguientes clases:
> models.py
```python
from django.db import models
from datetime import date

class tbAlumno(models.Model):
    CodigoAlumno = models.CharField(max_length=255, primary_key=True)
    Nombre = models.CharField(max_length=255)
    Apellido = models.CharField(max_length=255)
    Email = models.CharField(max_length=255)

    class Meta:
        db_table = ""tbAlumno""
        
class tbCuenta(models.Model):
    CodigoCuenta = models.CharField(max_length=255, primary_key=True)
    fkCodigoAlumno = models.ForeignKey(tbAlumno, on_delete=models.CASCADE)
    Monto = models.DecimalField(max_digits=10, decimal_places=2)
    Divisa = models.CharField(max_length=255)

    class Meta:
        db_table = ""tbCuenta""
        
class tbDeudasAlumno(models.Model):
    CodigoDeuda = models.AutoField(primary_key=True)
    fkCodigoAlumno = models.ForeignKey(tbAlumno, on_delete=models.CASCADE)
    CantidadDeuda = models.DecimalField(max_digits=10, decimal_places=2)
    FechaVencimiento = models.DateField()
    Estado = models.BooleanField(default=False)
    
    class Meta:
        db_table = ""tbDeudasAlumno""

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.observers = []

    def add_observer(self, observer):
        self.observers.append(observer)

    def notify_observers(self):
        for observer in self.observers:
            observer.update(self)
            
class tbPagosAlumno(models.Model):
    CodigoPago = models.AutoField(primary_key=True)
    FKCodigoDeuda = models.ForeignKey(tbDeudasAlumno, on_delete=models.CASCADE)
    MontoPago = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    FechaPago = models.DateField(default=date.today)

    class Meta:
        db_table = ""tbPagosAlumno""

```
3.3.	Para acceder a nuestra API y realizar diversas acciones bancarias, debemos configurar las URL adecuadamente. En el archivo urls.py de la aplicación api, agregue el siguiente código:

> urls.py
```python
from django.urls import path, include
from rest_framework import routers
from .views import DeudasAlumnoViews, BuscarDeudores, PagosAlumnoViews
from .pagardecorator import RealizarPagoViews
from .pagodebito import PagoDebitoViews

router = routers.DefaultRouter()
router.register('deudas', DeudasAlumnoViews)
router.register('pagos', PagosAlumnoViews)

urlpatterns = [
    path('', include(router.urls)),
    path('pagar/', RealizarPagoViews.as_view(), name='realizar_pago'),
    path('pagarDebito/', PagoDebitoViews.as_view(), name='realizar_pago2'),
    path('listardeudores/<str:fk_codigo_alumno>/', BuscarDeudores.as_view(), name='listar_deudores'),
]
```
3.4.	En el código, hemos definido tres clases de serializadores para nuestros modelos: tbAlumnoSerializer, tbDeudasAlumnoSerializer y tbPagosAlumnoSerializer. Estos serializadores especifican qué campos del modelo deben ser incluidos en la respuesta JSON de nuestra API:

> serializers.py
```python
from rest_framework import serializers
from .models import tbAlumno, tbDeudasAlumno, tbPagosAlumno

class tbAlumnoSerializer(serializers.ModelSerializer):
    class Meta:
        model = tbAlumno
        fields = '__all__'

class tbDeudasAlumnoSerializer(serializers.ModelSerializer):
    fkCodigoAlumno = serializers.PrimaryKeyRelatedField(queryset=tbAlumno.objects.all())

    class Meta:
        model = tbDeudasAlumno
        fields = '__all__'

class tbPagosAlumnoSerializer(serializers.ModelSerializer):
    FKCodigoDeuda = serializers.PrimaryKeyRelatedField(queryset=tbDeudasAlumno.objects.all())

    class Meta:
        model = tbPagosAlumno
        fields = '__all__'
```

#### 4. Creación de la API de servicio de internet

4.1. Finalmente, agregaremos la funcionalidad de pago de facturas de internet a través de nuestra API de servicio bancario. Utilizaremos el framework Django REST y aprovecharemos las vistas basadas en clases genéricas. A continuación, se muestra un ejemplo de la implementación de la API de servicio de internet:

> views.py
```python
from rest_framework import generics, viewsets
from rest_framework.response import Response
from .models import CuentDeudInter
from .serializers import DeudInterSerializer, DeudInterSerializer2
from datetime import datetime
from decimal import Decimal
from Patrones.factory import DeudInterPagoFactory

class DeudInterListView(viewsets.ModelViewSet):
    serializer_class = DeudInterSerializer
    queryset = CuentDeudInter.objects.all()

class DeudInterPagoView(generics.RetrieveUpdateAPIView):
    queryset = CuentDeudInter.objects.all()
    serializer_class = DeudInterSerializer2

    lookup_field = 'CodigoDeudInter'
    http_method_names = ['get', 'patch']

    def patch(self, request, *args, **kwargs):
        pago = Decimal(request.data.get('MonPago'))

        if not pago:
            return Response({'error': 'Falta el valor en Monto Pago'}, status=status.HTTP_400_BAD_REQUEST)

        deud_inter = self.get_object()
        command = DeudInterPagoFactory.create(""ServicioInternet"", pago)
        result = command.pagar(deud_inter)

        if result['status'] == 200:
            serializer = self.get_serializer(deud_inter)
            response_data = {
                'mensaje': result['mensaje'], 'data': serializer.data
            }
        else:
            response_data = {'mensaje': result['mensaje']}

        return Response(response_data, status=result['status'])
```
4.2.	En este modelo, hemos definido los campos necesarios para representar una cuenta deudora de un servicio bancario. El campo CodigoDeudInter es una clave primaria que identifica de manera única cada cuenta. Además, tenemos campos como Nombre, Apellido, MonDeuda, MonPago, FechVenc y Estado para almacenar información relevante. En el archivo ""models.py"", incluimos el siguiente código:
> models.py
```python
from django.db import models

class CuentDeudInter(models.Model):
    CodigoDeudInter = models.IntegerField(primary_key=True)
    Nombre = models.CharField(max_length=255)
    Apellido = models.CharField(max_length=255)
    MonDeuda = models.DecimalField(max_digits=10, decimal_places=2)
    MonPago = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    FechVenc = models.DateField()
    Estado = models.BooleanField(default=True)

    class Meta:
        db_table = ""tbCuentaDeudInter""
```
4.3.	La configuración de las URL nos permite definir cómo se accede a nuestra API a través de diferentes endpoints. En el archivo ""urls.py"", agregamos el siguiente código:
> urls.py
```python
from django.urls import path, include
from .views import DeudInterListView, DeudInterPagoView
from rest_framework import routers

router = routers.DefaultRouter()
router.register(r'Deudores', DeudInterListView, 'Deudores')

urlpatterns = [
    path('', include(router.urls)),
    path('pagoInter/<int:CodigoDeudInter>/', DeudInterPagoView.as_view(), name='Internet-detail')
]
```
4.4.	En este código, hemos definido dos serializadores. El serializador DeudInterSerializer se utiliza para mostrar todos los campos del modelo CuentDeudInter, mientras que DeudInterSerializer2 muestra solo algunos campos específicos. Además, hemos establecido los campos Estado y MonPago como solo lectura.
> urls.py
```python
from rest_framework import serializers
from .models import CuentDeudInter

class DeudInterSerializer(serializers.ModelSerializer):
    class Meta:
        model = CuentDeudInter
        fields = '__all__'
        read_only_fields = ('Estado', 'MonPago')

class DeudInterSerializer2(serializers.ModelSerializer):
    class Meta:
        model = CuentDeudInter
        fields = ('CodigoDeudInter', 'MonDeuda', 'MonPago')
        read_only_fields = ['MonDeuda']
```

#### 5. Creación de la API de servicio de luz

5.1. Para completar nuestro proyecto de servicio bancario, implementaremos la funcionalidad de pago de facturas de luz a través de nuestra API. Utilizaremos el framework Django REST y aprovecharemos las vistas basadas en clases genéricas. A continuación, se muestra un ejemplo de la implementación de la API de servicio de luz:

> views.py
```python
from rest_framework import generics
from rest_framework.response import Response
from .models import TbDeuda, TbPagos
from .serializers import DeudaSerializer, PagosSerializer
from rest_framework.generics import RetrieveAPIView, UpdateAPIView, DestroyAPIView
from Patrones.factory import DeudInterPagoFactory
from datetime import datetime

class DeudaDTO:
    def __init__(self, codigo_deuda, fk_codigocliente, fecha_vencimiento_pago, monto, estado):
        self.codigo_deuda = codigo_deuda
        self.fk_codigocliente = fk_codigocliente
        self.fecha_vencimiento_pago = fecha_vencimiento_pago.strftime('%Y-%m-%d')
        self.monto = monto
        self.estado =estado

    def to_dict(self):
        return {
            'codigo_deuda': self.codigo_deuda,
            'fk_codigocliente': self.fk_codigocliente,
            'fecha_vencimiento_pago': self.fecha_vencimiento_pago,
            'monto': self.monto,
            'estado': self.estado
        }


class PagoDTO:
    def __init__(self, codigo_pago, codigo_deuda, pago, fecha_pago):
        self.codigo_pago = codigo_pago
        self.codigo_deuda = codigo_deuda
        self.monto_pago = pago
        self.fecha_pago = fecha_pago.strftime('%Y-%m-%d')

    def to_dict(self):
        return {
            'codigo_pago': self.codigo_pago,
            'codigo_deuda': self.codigo_deuda,
            'monto_pago': self.monto_pago,
            'fecha_pago': self.fecha_pago
        }


class DeudaDetailView(generics.RetrieveUpdateDestroyAPIView):
    queryset = TbDeuda.objects.all()
    serializer_class = DeudaSerializer

    def retrieve(self, request, *args, **kwargs):
        instance = self.get_object()
        deuda_dto = self.to_deuda_dto(instance)
        return Response(deuda_dto.to_dict())

    def update(self, request, *args, **kwargs):
        partial = kwargs.pop('partial', False)
        instance = self.get_object()
        serializer = self.get_serializer(instance, data=request.data, partial=partial)
        serializer.is_valid(raise_exception=True)
        self.perform_update(serializer)

        deuda_dto = self.to_deuda_dto(instance)
        return Response(deuda_dto.to_dict())

    def destroy(self, request, *args, **kwargs):
        instance = self.get_object()
        self.perform_destroy(instance)
        return Response({'mensaje': 'Deuda eliminada correctamente'})

    def to_deuda_dto(self, deuda):
        return DeudaDTO(
            codigo_deuda=deuda.CodigoDeuda,
            fk_codigocliente=deuda.FkCodigoCliente_id,
            fecha_vencimiento_pago=deuda.FechaVencimientoPago,
            monto=deuda.Monto,
            estado=deuda.Estado
        )


class PagoDetailView(generics.RetrieveUpdateDestroyAPIView):
    queryset = TbPagos.objects.all()
    serializer_class = PagosSerializer

    def retrieve(self, request, *args, **kwargs):
        instance = self.get_object()
        pago_dto = self.to_pago_dto(instance)
        return Response(pago_dto.to_dict())

    def update(self, request, *args, **kwargs):
        partial = kwargs.pop('partial', False)
        instance = self.get_object()
        serializer = self.get_serializer(instance, data=request.data, partial=partial)
        serializer.is_valid(raise_exception=True)
        self.perform_update(serializer)

        pago_dto = self.to_pago_dto(instance)
        return Response(pago_dto.to_dict())

    def destroy(self, request, *args, **kwargs):
        instance = self.get_object()
        self.perform_destroy(instance)
        return Response({'mensaje': 'Pago eliminado correctamente'})

    def to_pago_dto(self, pago):
        return PagoDTO(
            codigo_pago=pago.CodigoPago,
            codigo_deuda=pago.CodigoDeuda_id,
            pago=pago.Pago,
            fecha_pago=pago.FechaPago
        )


class DeudaListView(generics.ListCreateAPIView):
    queryset = TbDeuda.objects.all()
    serializer_class = DeudaSerializer


class PagoListView(generics.ListCreateAPIView):
    queryset = TbPagos.objects.all()
    serializer_class = PagosSerializer

    def post(self, request, *args, **kwargs):
        codigo_deuda = request.data.get('CodigoDeuda', None)
        codigo_pago = request.data.get('CodigoPago', None)

        if codigo_deuda is None:
            return Response({'error': 'El campo CodigoDeuda es requerido.'}, status=400)

        deuda = TbDeuda.objects.filter(CodigoDeuda=codigo_deuda).first()

        if deuda is None:
            return Response({'error': f'La deuda con CodigoDeuda={codigo_deuda} no existe.'}, status=400)

        monto_pago = float(request.data.get('Pago', 0))
        fecha_pago_str = request.data.get('FechaPago', datetime.now())
        fecha_pago = datetime.strptime(fecha_pago_str, '%Y-%m-%d').date()

        if deuda.FechaVencimientoPago != fecha_pago:
            deuda.Monto += 80
            deuda.save()
            return Response({'mensaje': 'La fecha de pago y vencimiento no coinciden. Se agregaron S/80 a la deuda.'})

        if monto_pago != deuda.Monto:
            return Response({'error': 'El monto de pago no coincide con la deuda. Se interrumpe la operación.'},
                            status=400)

        pago = TbPagos(CodigoPago=codigo_pago, CodigoDeuda=deuda, Pago=monto_pago, FechaPago=fecha_pago)
        pago.save()
        deuda.Estado = 'pagado'
        deuda.save()

        command = DeudInterPagoFactory.create(""ServicioLuz"", pago.Pago)

        result = command.pagar(deuda)

        serializer = self.get_serializer(pago)
        response_data = {'mensaje': result['mensaje'], 'data': serializer.data}
        return Response(response_data, status=result['status'])
```
5.2. En este código, hemos definido tres modelos: TbClientes, TbDeuda y TbPagos. Estos modelos representan los clientes, las deudas y los pagos respectivamente. Cada modelo contiene una serie de campos que se utilizarán para almacenar la información relevante. Abre el archivo models.py y agrega las siguientes clases:

> models.py
```python
from django.db import models

class TbClientes(models.Model):
    CodigoCliente = models.CharField(max_length=255, primary_key=True)
    Nombre = models.CharField(max_length=255)
    Apellido = models.CharField(max_length=255)
    Direccion = models.CharField(max_length=255)
    Ciudad = models.CharField(max_length=255)
    Telefono = models.IntegerField()

    class Meta:
        db_table = ""TbClientes""

class TbDeuda(models.Model):
    CodigoDeuda = models.CharField(max_length=255, primary_key=True)
    FkCodigoCliente = models.ForeignKey(TbClientes, on_delete=models.CASCADE)
    FechaVencimientoPago = models.DateField()
    Monto = models.DecimalField(max_digits=10, decimal_places=2)
    Estado = models.CharField(max_length=255)

    class Meta:
        db_table = ""TbDeuda""


class TbPagos(models.Model):
    CodigoPago = models.CharField(max_length=255, primary_key=True)
    CodigoDeuda = models.ForeignKey(TbDeuda, on_delete=models.CASCADE)
    Pago = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    FechaPago = models.DateField()

    class Meta:
        db_table = ""TbPagos""
```
5.3.	Para acceder a los datos a través de una API, necesitamos definir las vistas correspondientes y las rutas URL asociadas. Abre el archivo urls.py y reemplaza su contenido con el siguiente código:
> urls.py
```python
from django.db import models

class TbClientes(models.Model):
    CodigoCliente = models.CharField(max_length=255, primary_key=True)
    Nombre = models.CharField(max_length=255)
    Apellido = models.CharField(max_length=255)
    Direccion = models.CharField(max_length=255)
    Ciudad = models.CharField(max_length=255)
    Telefono = models.IntegerField()

    class Meta:
        db_table = ""TbClientes""

class TbDeuda(models.Model):
    CodigoDeuda = models.CharField(max_length=255, primary_key=True)
    FkCodigoCliente = models.ForeignKey(TbClientes, on_delete=models.CASCADE)
    FechaVencimientoPago = models.DateField()
    Monto = models.DecimalField(max_digits=10, decimal_places=2)
    Estado = models.CharField(max_length=255)

    class Meta:
        db_table = ""TbDeuda""


class TbPagos(models.Model):
    CodigoPago = models.CharField(max_length=255, primary_key=True)
    CodigoDeuda = models.ForeignKey(TbDeuda, on_delete=models.CASCADE)
    Pago = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    FechaPago = models.DateField()

    class Meta:
        db_table = ""TbPagos""
```
5.4.	Las vistas son responsables de manejar las solicitudes y las respuestas HTTP en nuestra API. Los serializadores, por otro lado, se encargan de convertir los objetos de Django en representaciones legibles para la API. Abre el archivo serializers.py y agrega el siguiente código:
> serializers.py
```python
from django.db import models

class TbClientes(models.Model):
    CodigoCliente = models.CharField(max_length=255, primary_key=True)
    Nombre = models.CharField(max_length=255)
    Apellido = models.CharField(max_length=255)
    Direccion = models.CharField(max_length=255)
    Ciudad = models.CharField(max_length=255)
    Telefono = models.IntegerField()

    class Meta:
        db_table = ""TbClientes""

class TbDeuda(models.Model):
    CodigoDeuda = models.CharField(max_length=255, primary_key=True)
    FkCodigoCliente = models.ForeignKey(TbClientes, on_delete=models.CASCADE)
    FechaVencimientoPago = models.DateField()
    Monto = models.DecimalField(max_digits=10, decimal_places=2)
    Estado = models.CharField(max_length=255)

    class Meta:
        db_table = ""TbDeuda""


class TbPagos(models.Model):
    CodigoPago = models.CharField(max_length=255, primary_key=True)
    CodigoDeuda = models.ForeignKey(TbDeuda, on_delete=models.CASCADE)
    Pago = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    FechaPago = models.DateField()

    class Meta:
        db_table = ""TbPagos""
```
### PARTE II: Implementacion de 5 Patrones de Diseño 
#### 1. Patron de diseño Factory
1.1.	Para implementar nuestros servicios bancarios utilizando patrones de diseño Factory, comenzamos definiendo una interfaz IServicio que contiene un método común llamado pagar(). Cada tipo de servicio (internet, agua, teléfono, educación y luz) implementará esta interfaz y proporcionará su propia lógica de pago. A continuación, presentamos algunas de las implementaciones de los servicios bancarios utilizando el patrón Factory:

> Servicio de Internet
```python
class ServicioInternet(IServicio):
    def __init__(self, pago):
        self._pago=pago
        
    def pagar(self, deud_inter):
        observerPago = PatterObserverPagos()
        Rabbitobserver = RabbitObserver()

        observerPago.attach_observer(Rabbitobserver)
        
        strategy = DiscountPaymentStrategy()
        
        if datetime.date.today() > deud_inter.FechVenc:
            strategy = InterestPaymentStrategy()

        deud_inter_pago = strategy.calculate_payment(deud_inter.MonDeuda,deud_inter.FechVenc )

        deud_inter.MonDeuda = Decimal(deud_inter_pago) - Decimal(self._pago)
        
        if(deud_inter.MonDeuda!=0):
            return {'mensaje': 'El Pago no es el debido', 'status': 400}

        observerPago.notify_observers(""Pago Realizado"",""ServicioInternet"")

        deud_inter.save()
        
        if datetime.date.today() > deud_inter.FechVenc:
            return {'mensaje': f'Pago Realizado, con Interes de 20% siendo un total de: {deud_inter_pago}', 'status': 200}
        else:
            return {'mensaje': 'Pago Realizado Total', 'status': 200}
```
> Servicio de Educación
```python
class ServicioEducacion(IServicio):
    def __init__(self, pago):
        _pago=pago
    def pagar(self, deuda, cuenta):
        if deuda.Estado:
            return Response({'mensaje': 'La deuda ya ha sido pagada.'}, status=status.HTTP_400_BAD_REQUEST)

        monto_deuda = Decimal(deuda.CantidadDeuda)

        if self._pago != monto_deuda:
            return Response({'mensaje': 'El monto de pago no coincide con la cantidad de deuda.'}, status=status.HTTP_400_BAD_REQUEST)

        divisa_cuenta = cuenta.Divisa

        monto_pago_money = Money(self._pago, ""PEN"")
        monto_pago_convertido = monto_pago_money.convert(divisa_cuenta)

        if monto_pago_convertido.amount > cuenta.Monto:
            return Response({'mensaje': 'No hay montos suficientes en la cuenta.'}, status=status.HTTP_400_BAD_REQUEST)

        # Seleccionar la estrategia de cálculo de pago según la fecha de vencimiento
        strategy = DiscountPaymentStrategy()
        if datetime.date.today() > deuda.FechaVencimiento:
            strategy = InterestPaymentStrategy()

        monto_pago_final = strategy.calculate_payment(monto_pago_convertido.amount, deuda.FechaVencimiento)

        # Aplicar el descuento a la cuenta
        cuenta.Monto = cuenta.Monto - monto_pago_final
        cuenta.save()

        deuda.Estado = True
        deuda.save()

        observerPagos = PatterObserverPagos()
        
        observer = RabbitObserver()
        observerPagos.attach_observer(observer)
        observerPagos.notify_observers('Pago realizado exitosamente. Monto final: {}'.format(monto_pago_final),""ServicioEducacion"")
        return Response({'mensaje': 'Pago realizado exitosamente. Monto final: {}'.format(monto_pago_final)}, status=status.HTTP_200_OK)
```
> Servicio de Luz
```python
class ServicioLuz(IServicio):
    def __init__(self, pago):
        self._pago = Decimal(pago)  # Convertir el pago a Decimal

    def pagar(self, deud_luz):
        observerPago = PatterObserverPagos()
        rabbit_observer = RabbitObserver()

        observerPago.attach_observer(rabbit_observer)

        strategy = DiscountPaymentStrategy()

        if datetime.date.today() > deud_luz.FechaVencimientoPago:
            strategy = InterestPaymentStrategy()

        deud_luz_pago = strategy.calculate_payment(deud_luz.Monto, deud_luz.FechaVencimientoPago)

        deud_luz.Monto = Decimal(deud_luz_pago) - self._pago  # Utilizar self._pago directamente

        if deud_luz.Monto != 0:
            return {'mensaje': 'El pago no es el debido', 'status': 400}

        observerPago.notify_observers(""Pago Realizado"", ""ServicioLuz"")

        deud_luz.save()

        if datetime.date.today() > deud_luz.FechaVencimientoPago:
            return {'mensaje': f'Pago Realizado, con interés de 20% siendo un total de: {deud_luz_pago}',
                    'status': 200}
        else:
            return {'mensaje': 'Pago Realizado Total', 'status': 200}
```
> Servicio de Telefonía
```python
class ServicioTelefonia(IServicio):
    def __init__(self, cliente_id, plan_id, monto_pago):
        self.cliente_id = cliente_id
        self.plan_id = plan_id
        self.monto_pago = Decimal(monto_pago)

    def pagar(self):
        cliente = Cliente.objects.get(pk=self.cliente_id)
        plan = Plan.objects.get(pk=self.plan_id)

        if self.monto_pago != plan.costo_mensual:
            return {'mensaje': 'El monto del pago no coincide con el costo mensual del plan.',
                    'status': status.HTTP_400_BAD_REQUEST}

        fecha_emision = date.today()
        fecha_vencimiento = fecha_emision + timedelta(days=30)

        factura = Factura.objects.create(
            cliente=cliente,
            plan=plan,
            monto=self.monto_pago,
            fecha_emision=fecha_emision,
            fecha_vencimiento=fecha_vencimiento,
            pagado=True,
            estado=True
        )
        observerPagos= PatterObserverPagos()

        observer = RabbitObserver()
        observerPagos.attach_observer(observer)
        observerPagos.notify_observers('Nueva factura creada', 'factura Pagada')

        return {'mensaje': 'Plan activado y factura creada correctamente.',
                'status': status.HTTP_201_CREATED}
```
1.2.	Factory para pagos de deudas
> Además de los diferentes servicios, también implementamos una clase DeudInterPagoFactory que actúa como un Factory para crear instancias de los servicios de pago de deudas. Esta clase nos permite crear servicios de pago específicos según el nombre del servicio proporcionado.
```python
class DeudInterPagoFactory:
    def create(nameservicio,pagar):
        if (nameservicio==""ServicioInternet""):
            return ServicioInternet(pagar)

        if (nameservicio==""ServicioEducacion""):
            return ServicioEducacion(pagar)
            
        if (nameservicio == ""ServicioLuz""):
            return ServicioLuz(pagar)

    @staticmethod
    def createTelefono(nameservicio, cliente_id, plan_id, monto_pago):
        if nameservicio == ""ServicioTelefonia"":
            return ServicioTelefonia(cliente_id, plan_id, monto_pago)
        else:
            raise ValueError('Tipo de servicio no válido')

```
#### 2. Patron de diseño Money
2.1.	Ahora, veamos cómo podemos utilizar el patrón de diseño Money en un servicio bancario que ofrece diferentes servicios. Supongamos que tenemos un modelo de datos con diferentes deudas asociadas a cada servicio. Podemos utilizar la clase Money para manejar los pagos y las conversiones monetarias de la siguiente manera:
> money.py
```python
from decimal import Decimal
class Money:
    def __init__(self, amount, currency):
        self.amount = amount
        self.currency = currency

    def convert(self, target_currency):
        conversion_rates = {
            ""EUR"": Decimal('3.93'),  
            ""USD"": Decimal('3.65'), 
            ""PEN"": Decimal('1')  
        }

        if self.currency == target_currency:
            return Money(self.amount, self.currency)

        conversion_rate = conversion_rates.get(self.currency)
        if conversion_rate:
            converted_amount = Decimal(self.amount) * conversion_rate
            target_conversion_rate = conversion_rates.get(target_currency)
            if target_conversion_rate:
                converted_amount /= target_conversion_rate
                return Money(converted_amount, target_currency)

        raise ValueError(f""No se encontró una tasa de conversión válida para {self.currency} a {target_currency}"")
```
#### 3. Patron de diseño Observer
3.1.	Para implementar el patrón Observer en nuestra API de servicio bancario, comenzamos definiendo las clases necesarias. A continuación se muestra una implementación básica de las clases PatterObserverPagos, Observer y RabbitObserver:
> observer.py
```python
class PatterObserverPagos:
    _instance = None
    _observers = []

    def __new__(cls, *args, **kwargs):
        if not cls._instance:
            cls._instance = super().__new__(cls, *args, **kwargs)
        return cls._instance

    def attach_observer(self, observer):
        self._observers.append(observer)

    def detach_observer(self, observer):
        self._observers.remove(observer)

    def notify_observers(self, message, rooting_key):
        for observer in self._observers:
            observer.update(message, rooting_key)

class Observer:
    def update(self, message, rooting_key):
        pass

class RabbitObserver(Observer):
    def update(self, message, rooting_key):
        RabbitMq.rabbitmqMessage(message, rooting_key)
```
#### 4. Patron de diseño rabbitmq
4.1.	Para implementar el patrón de diseño RabbitMQ en nuestra API de servicio bancario, comenzamos definiendo la clase RabbitMq, que actuará como nuestro punto de entrada para enviar mensajes a la cola de RabbitMQ. A continuación se muestra una implementación básica de esta clase:
> rabbitMq.py
```python
import pika
import datetime
import json

rabbitmq_host = ""amqps://enozynwv:2TtZL4ta8m_64qXMTbYs2SjVjRbPL8av@cow.rmq2.cloudamqp.com/enozynwv""
params = pika.URLParameters(rabbitmq_host)
connection = pika.BlockingConnection(params)

class RabbitMq():
    _instance = None
    
    def __new__(cls, *args, **kwargs):
        if not cls._instance:
            cls._instance = super().__new__(cls, *args, **kwargs)
        return cls._instance
    
    def rabbitmqMessage(message=""error"", routing_key=""error""):
        log = {
            ""timestamp"": datetime.datetime.now().isoformat(),
            ""Level"": routing_key,
            ""Message"": json.dumps(message)
        }
        
        channel = connection.channel()
        channel.queue_declare(queue=""logsPago"")
        channel.basic_publish(
            exchange='', routing_key=""logsPago"", body=json.dumps(log)
        )
        connection.close()
```
#### 5. Patron de diseño Strategy
5.1.	Para implementar el patrón de diseño Strategy en nuestra API de servicio bancario, comenzamos definiendo una clase base PaymentStrategy que representa la interfaz común para todas las estrategias de pago. A continuación, implementamos dos clases concretas DiscountPaymentStrategy y InterestPaymentStrategy que representan las diferentes estrategias de pago. Aquí está la implementación básica de estas clases:
> strategy.py
```python
import datetime
from decimal import Decimal

class PaymentStrategy:
    def calculate_payment(self, amount, due_date):
        pass

class DiscountPaymentStrategy(PaymentStrategy):
    def calculate_payment(self, amount, due_date):
        return amount


class InterestPaymentStrategy(PaymentStrategy):
    def calculate_payment(self, amount, due_date):
        if datetime.date.today() > due_date:
            return amount * Decimal('1.2')  # Aplicar un incremento del 20% como interés
        else:
            return amount
```
### PARTE III: Creacion de Frontend con React + Django para cada servicio
#### 1. Configuración del proyecto
1.1. Comenzamos configurando un nuevo proyecto de React utilizando herramientas como Create React App. Luego, configuramos un proyecto de Django y usamos las API ya creadas para cada servicio. Ejecuta el siguiente comando para crear un nuevo proyecto de React:
```lua
npx create-react-app Front
```
1.2. Inicia la aplicación de React ejecutando el siguiente comando:
```lua
npm start
```
#### 2. Creación de modelos:
2.1. Models Servicios Educacion
> educationservice.ty
```typescript
export type Deudor = {
  CodigoDeuda: number;
  fkCodigoAlumno: string;
  CantidadDeuda: string;
  FechaVencimiento: string;
  Estado: boolean;
  Situacion?: string;
};
export type Deuda = {
  CodigoDeuda: number;
  CodigoCuenta: number;
  MontoPago: number;
};
export type Pago = {
  CodigoPago: number;
  FKCodigoDeuda: number;
  MontoPago: string;
  FechaPago: string;
};

```
2.2. Models Servicios Internet
> internetservice.ty
```typescript
export type Deudor = {
  CodigoDeudInter: number;
  Nombre: string;
  Apellido: string;
  MonDeuda: number;
  FechVenc: Date;
  Estado: boolean;

};


export type Deuda = {
  CodigoDeudInter: number;
  MonPago: number;
};
```
2.3. Models Servicios luz
> luzservice.ty
```typescript
export interface Clientes {
    CodigoDeuda: string;
    FkCodigoCliente: string;
    Monto: number;
    FechaVencimientoPago: string; 
    Estado: string; 
    Situacion?:string;
  }
  
  export interface Deuda {
    codigo_deuda: string;
    FkCodigoCliente: string;
    FechaVencimientoPago: string; 
    Monto: number;
    Estado: string; 
  }
  
  export interface Pagos {
    CodigoPago: string;
    CodigoDeuda: number;
    Pago: number;
    FechaPago: string; 
  }
  
```
2.4. Models Servicios Telefonia
> telephonyservice.ty
```typescript
export type Factura = {
    id : number;
    cliente : number;
    plan : number;
    monto : number;
    fecha_emision : string;
    fecha_vencimiento : string;
    pagado: boolean;
    estado:boolean;
  };
  export type Llamadas = {
    id : number;
    fecha_hora: string;
    duracion: number;
    cliente_id : number;
  };
  export type Plan = {
    id : number;
    nombre : string;
    costo_mensual : number;
    minutos_incluidos : number;
    datos_incluidos : number;
  };
  export type Cliente = {
    id : number;
    nombre : string;
    direccion  : string;
    telefono  : string;
    cuenta_bancaria  : string;
    servicio_activo :boolean;
  };
```
#### 3. Conexión entre React y la API REST de Django:
3.1. Para conectar React con la API REST de Django, utilizaremos la biblioteca axios en React para realizar solicitudes HTTP a los endpoints de la API. Podemos definir funciones en React que hagan uso de axios para obtener y enviar datos a través de la API. Estas funciones se pueden llamar desde los componentes de React para interactuar con el backend y mostrar los datos en la interfaz de usuario.
> education.api.ts
```typescript
import axios from ""axios"";
import { Deuda } from ""../Types/educationservice"";

export const obtenerDeudores = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioEducacion/deudas/"");
};

export const pagarDeuda = (pago: Deuda) => {
  return axios.post(""http://127.0.0.1:8000/ServicioEducacion/pagarDebito/"", pago);
};

export const buscarDeuda = (cod: number) => {
  return axios.get(`http://127.0.0.1:8000/ServicioEducacion/listardeudores/${cod}/`);
};
export const obtenerPagos = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioEducacion/pagos/"");
};
```
> internet.api.ts
```typescript
import axios from ""axios"";
import { Deuda } from ""../Types/internetservice"";

export const obtenerDeudores = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioInternet/Deudores/"");
};

export const buscarDeuda = (cod: number) => {
  return axios.get(`http://127.0.0.1:8000/ServicioInternet/Deudores/${cod}/`);
};

export const pagarDeuda = (cod:number,pago: Deuda) => {
  return axios.patch(`http://127.0.0.1:8000/ServicioInternet/pagoInter/${cod}/`, pago);
};
```
> luz.api.ts
```typescript
import axios from ""axios"";
import { Pagos } from ""../Types/luzservice"";


export const obtenerDeudores = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioLuz/deudas/"");
};

export const pagarDeuda = (pagoData: Pagos) => {
  return axios.post(""http://127.0.0.1:8000/ServicioLuz/pagos/"", pagoData);
};

export const buscarDeuda = (cod: number) => {
  return axios.get(`http://127.0.0.1:8000/ServicioLuz/deudas/${cod}/`);
};
export const obtenerPagos = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioLuz/pagos/"");
};
```
> Telephony.ts
```typescript
import axios from ""axios"";
import { Plan } from ""../Types/telephonyservice"";

export const obtenerplan = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioTelefonia/planes/"");
};

export const elegirplan = (cliente_id: number, plan_id: number, monto_pago: number) => {
  console.log(""Datos enviados:"", cliente_id, plan_id, monto_pago);
  return axios.post(""http://127.0.0.1:8000/ServicioTelefonia/facturas/activar_plan/"", {
    cliente_id: cliente_id,
    plan_id: plan_id,
    monto_pago: monto_pago
  });
};

export const pagarDeuda = (plan: Plan) => {
    return axios.post(""http://127.0.0.1:8000/ServicioTelefonia/planes/"", plan);
};
  
export const buscarcliente = (id: number) => {
  return axios.get(`http://127.0.0.1:8000/ServicioTelefonia/clientes/${id}/`);
};

export const actualizarsaldo = (id: number,nombre: string, direccion: string, telefono: string, cuenta_bancaria: number, servicio_activo: number) => {
  return axios.put(`http://127.0.0.1:8000/ServicioTelefonia/clientes/${id}/`,{
    nombre: nombre,
    direccion: direccion,
    telefono: telefono,
    cuenta_bancaria: cuenta_bancaria,
    servicio_activo: servicio_activo
  });
};

export const obtenerfactura = () => {
  return axios.get(""http://127.0.0.1:8000/ServicioTelefonia/facturas/"");
};

export const obtenercliente = () => {
    return axios.get(""http://127.0.0.1:8000/ServicioTelefonia/clientes/"");
  };
```
#### 4. Creación de Router en React:
4.1. Primero configuramos el app.txs en la que se definira las rutas de cada servicio:
> app.txs
```javascript
import { BrowserRouter, Routes, Route, Navigate } from ""react-router-dom"";
import { MainServicesPages } from ""./pages/MainServicesPages"";
import { Navigation } from ""./components/Navigation"";
import { Toaster } from ""react-hot-toast"";
import { EducacionRoutes } from ""./routes/EducacionRoutes"";
import { InternetRoutes } from ""./routes/InternetRoutes"";
import { ClienteRoutes } from ""./routes/ClienteRoutes"";
import { TelephonyRoutes } from ""./routes/TelephonyRoutes"";
import { LuzRoutes } from ""./routes/LuzRoutes"";
import { InicioAgua } from ""./pages/AguaService/InicioAgua"";

function App() {
  return (
    <BrowserRouter>
      <div className=""container mx-auto px-2"">
        <Navigation />
        <Routes>
          <Route path=""/"" element={<Navigate to=""/Servicios"" />} />
          <Route path=""/Servicios"" element={<MainServicesPages />} />
          <Route path=""/Servicios/Educacion/*"" element={<EducacionRoutes />} />
          <Route path=""/Servicios/Luz/*"" element={<LuzRoutes/>} />
          <Route path=""/Servicios/Internet/*"" element={< InternetRoutes/>} />
          <Route path=""/Servicios/Telefonia/*"" element={<TelephonyRoutes/>} />
          <Route path=""/Cliente/*"" element={< ClienteRoutes/>} />
          <Route path=""/Servicios/Agua/"" element={< InicioAgua/>} />
        </Routes>
        <Toaster />
      </div>
    </BrowserRouter>
  );
}

export default App;

```
4.2. luego creamos las subrutas de cada servicio:
> EducacionRoutes.txs
```javascript
import { Route, Routes } from ""react-router-dom"";
import { InicioEducation } from ""../pages/EducationService/InicioEducacion"";
import { Deudas } from ""../pages/EducationService/Deudas"";
import { Pagos } from ""../pages/EducationService/Pagos"";
import { BusquedaPago } from ""../pages/EducationService/BusquedaPago"";
import { PagarDeudas } from ""../pages/EducationService/PagarDeudas"";
import { RealizarPago } from ""../pages/EducationService/RealizarPago"";

export const EducacionRoutes = () => (
  <Routes>
    <Route path=""/"" element={<InicioEducation />} />
    <Route path=""/Deudas"" element={<Deudas />} />
    <Route path=""/Pagos"" element={<Pagos />} />
    <Route path=""/Pagar"" element={<PagarDeudas />} />
    <Route path=""/RealizarPago"" element={<RealizarPago />} />
    <Route path=""/BusquedaPago"" element={<BusquedaPago />} />
  </Routes>
);
```
> InternetRoutes.txs
```javascript
import { Route, Routes } from ""react-router-dom"";

import { InicioInternet } from ""../pages/InternetService/InicioInternet"";
import { DeudoresInternet } from ""../pages/InternetService/DeudoresInternet"";
import { BusquedaPagoInternet } from ""../pages/InternetService/PagosInternet"";
import { RealizarPagoInternet } from ""../pages/InternetService/RealizarPago"";


export const InternetRoutes = () => (
  <Routes>
    <Route path=""/"" element={<InicioInternet />} />
    <Route path=""/Deudores"" element={<DeudoresInternet />} />
    <Route path=""/Pagar"" element={<BusquedaPagoInternet />} />
    <Route path=""/RealizarPago"" element={<RealizarPagoInternet />} />
  </Routes>
);
```
> LuzRoutes.txs
```javascript
import { Route, Routes } from ""react-router-dom"";
import { InicioLuz } from ""../pages/LuzService/InicioLuz"";
import { DeudasLuz } from ""../pages/LuzService/Deudas"";
import { PagosLuz } from ""../pages/LuzService/PagoLuz"";
import { RealizarPago } from ""../pages/LuzService/RealizarPago"";


export const LuzRoutes = () => (
  <Routes>
    <Route path=""/"" element={<InicioLuz/>} />
    <Route path=""/Deudas"" element={<DeudasLuz />} />
    <Route path=""/Pagos"" element={<PagosLuz />} />
    <Route path=""/RealizarPago"" element={<RealizarPago />} />

  </Routes>
);
```
> TelephonyRoutes.txs
```javascript
import { Route, Routes } from ""react-router-dom"";
import { IndexService } from ""../pages/TelephonyService/IndexService"";
import { Facturas } from ""../pages/TelephonyService/Facturas"";
import { Planes } from ""../pages/TelephonyService/Plan"";
import { RealizarPago } from ""../pages/TelephonyService/RealizarPago"";

export const TelephonyRoutes = () => (
  <Routes>
    <Route path=""/"" element={<IndexService />} />
    <Route path=""/Facturas"" element={<Facturas />} />
    <Route path=""/Planes"" element={<Planes />} />
    <Route path=""/RealizarPago"" element={<RealizarPago />} />
  </Routes>
);
```
#### 5. Desarrollo de las vistas y funcionalidades del frontend:
#### En esta etapa, nos enfocaremos en desarrollar las vistas y funcionalidades específicas del frontend:
---
5.1. Sevicio Educacion 
> BusquedaPago.tsx
```javascript
import { useState } from ""react"";
import { useForm } from ""react-hook-form"";
import { buscarDeuda } from ""../../api/education.api.ts"";
import { Deudor } from ""../../Types/educationservice.ts"";
import { ContentTDeudas } from ""../../components/EducationService/ContentTDeudas"";
import { Regresar } from ""../../components/Regresar.tsx"";

export function BusquedaPago() {
  const [deudores, setDeudores] = useState<Deudor[]>([]);
  const [error, setError] = useState("""");

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = handleSubmit(async (data) => {
    const codigoEstudiante = data.codigoEstudiante;

    try {
      const response = await buscarDeuda(parseInt(codigoEstudiante));
      setDeudores(response.data);
      setError("""");
    } catch (error) {
      console.log(error);
      setDeudores([]);
      setError(""Alumno no encontrado"");
    }
  });

  return (
    <>
      <Regresar to=""/Servicios/Educacion/Pagar"" />
      <div className=""mt-4"">
        <form onSubmit={onSubmit}>
          <div className=""relative"">
            <div className=""absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"">
              <svg
                className=""w-4 h-4 text-gray-500 dark:text-gray-400""
                aria-hidden=""true""
                xmlns=""http://www.w3.org/2000/svg""
                fill=""none""
                viewBox=""0 0 20 20""
              >
                <path
                  stroke=""currentColor""
                  strokeLinecap=""round""
                  strokeLinejoin=""round""
                  strokeWidth=""2""
                  d=""m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z""
                />
              </svg>
            </div>
            <input
              type=""search""
              id=""default-search""
              {...register(""codigoEstudiante"", { required: true })}
              className=""block w-full p-4 pl-10 text-lg text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500""
              placeholder=""Ingrese el código del estudiante""
              required
            />
            {errors.codigoEstudiante && (
              <span className=""text-red-500"">
                Código de estudiante requerido
              </span>
            )}
            <button
              type=""submit""
              className=""text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800""
            >
              Search
            </button>
          </div>
        </form>{"" ""}
        <div className=""container mx-auto px-4 py-8"">
          {error && <p className=""text-red-500"">{error}</p>}
          {deudores.length > 0 ? (
            <div className=""relative overflow-x-auto shadow-md sm:rounded-lg"">
              <table className=""w-full text-sm text-left text-gray-300 dark:text-gray-300"">
                <thead className=""text-xs text-gray-600 uppercase dark:text-gray-300"">
                  <tr>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Codigo de deuda
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Cantidad
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Vencimiento
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Estado
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Codigo Estudiante
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Accion
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {deudores.map((deudor) => (
                    <ContentTDeudas
                      key={deudor.CodigoDeuda}
                      codigoDeuda={deudor.CodigoDeuda.toString()}
                      cantidadDeuda={deudor.CantidadDeuda}
                      fechaVencimiento={deudor.FechaVencimiento}
                      estado={deudor.Situacion}
                      codigoestudiante={deudor.fkCodigoAlumno}
                    />
                  ))}
                </tbody>
              </table>
            </div>
          ) : null}
        </div>
      </div>
    </>
  );
}
```
> Deudas.tsx
```javascript
import { useEffect, useState } from ""react"";
import { obtenerDeudores } from ""../../api/education.api.ts"";
import { Deudor } from ""../../Types/educationservice.ts"";
import { Regresar } from ""../../components/Regresar"";

export function Deudas() {
  const [deudas, setDeudas] = useState<Deudor[]>([]); // Especifica el tipo de estado como un array de Deudor

  useEffect(() => {
    async function cargarDeudas() {
      const res = await obtenerDeudores();
      setDeudas(res.data); // Actualiza el estado con los datos de deudas
    }
    cargarDeudas();
  }, []);

  return (
    <>
  <Regresar to=""/Servicios/Educacion"" />
  <div className=""flex flex-col gap-4"">
    <h2 className=""text-xl font-bold"">Lista de deudas</h2>
    <div className=""overflow-x-auto"">
      <table className=""table-auto w-full"">
        <thead>
          <tr>
            <th className=""border px-4 py-2"">Código deuda</th>
            <th className=""border px-4 py-2"">Cantidad deuda</th>
            <th className=""border px-4 py-2"">Estado</th>
            <th className=""border px-4 py-2"">Fecha de vencimiento</th>
            <th className=""border px-4 py-2"">Código del alumno</th>
          </tr>
        </thead>
        <tbody>
          {deudas.map((deuda) => (
            <tr key={deuda.CodigoDeuda}>
              <td className=""border text-center px-4 py-2"">{deuda.CodigoDeuda}</td>
              <td className=""border text-center px-4 py-2"">{deuda.CantidadDeuda}</td>
              <td className={`border font-bold text-center px-4 py-2 ${deuda.Estado ? 'text-green-600' : 'text-orange-500'}`}>
                {deuda.Estado ? ""Pagado"" : ""Pendiente""}
              </td>              
              <td className=""border text-center px-4 py-2"">{deuda.FechaVencimiento}</td>
              <td className=""border text-center px-4 py-2"">{deuda.fkCodigoAlumno}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
</>

  );
}
```
> InicioEducacion.tsx
```javascript
import { OpcionesInicio } from ""../../components/OpcionesInicio"";
import { Regresar } from ""../../components/Regresar"";

export function InicioEducation() {
  return (
    <div className=""flex flex-col"">
      <div>
      <Regresar to=""/Servicios"" />
      </div>
      <h1 className=""text-4xl font-bold mb-24 text-left mt-2"">
        Pagos de Educación
      </h1>
      <div className=""flex justify-center items-center flex-grow gap-5"">
        <OpcionesInicio to=""/Servicios/Educacion/Pagar"" text=""Pagar Deuda"" />
        <OpcionesInicio to=""/Servicios/Educacion/Deudas"" text=""Deudas"" />
        <OpcionesInicio to=""/Servicios/Educacion/Pagos"" text=""Pagos"" />
      </div>
    </div>
  );
}
```
> PagarDeudas.tsx
```javascript
import { CardOptions } from ""../../components/CardOptions"";
import { Regresar } from ""../../components/Regresar"";
import logoupt from ""../../assets/images/LogoUpt.png""
import logounjbg from ""../../assets/images/LogoUnjbg.png""

export function PagarDeudas() {
  return (
    <>
      {/* Componente Regresar para volver a la página anterior */}
      <Regresar to=""/Servicios/Educacion"" />
      <div className=""container mx-auto px-4 py-8"">
        {/* Título de la página */}
        <h1 className=""text-3xl font-bold mb-4"">Elija la entidad</h1>
        <div className=""max-w-md mx-auto gap-10 flex flex-row"">
          {/* Componente CardOptions para mostrar una opción de pago */}
          <CardOptions
            imageSrc={logoupt}
            altText=""Logo Upt""
            to=""/Servicios/Educacion/BusquedaPago""
          />
          {/* Componente CardOptions para mostrar otra opción de pago */}
          <CardOptions
            imageSrc={logounjbg}
            altText=""Logo Unjbg""
            to=""/""
          />
        </div>
      </div>
    </>
  );
}
```
> Pagos.tsx
```javascript
import { Regresar } from ""../../components/Regresar"";
import { useEffect, useState } from ""react"";
import { obtenerPagos } from ""../../api/education.api.ts"";
import { Pago } from ""../../Types/educationservice.ts"";

export function Pagos() {
  // Estado para almacenar los pagos
  const [pagos, setPagos] = useState<Pago[]>([]);

  useEffect(() => {
    // Función asincrónica para cargar los pagos
    async function cargarPagos() {
      // Llamada a la API para obtener los pagos
      const res = await obtenerPagos();
      // Actualizar el estado con los datos de los pagos recibidos
      setPagos(res.data);
      console.log(res);
    }
    // Llamar a la función cargarPagos cuando el componente se monta
    cargarPagos();
  }, []);

  return (
    <>
      {/* Componente Regresar para volver a la página anterior */}
      <Regresar to=""/Servicios/Educacion"" />
      <div className=""flex flex-col gap-4"">
        {/* Título de la lista de pagos */}
        <h2 className=""text-xl font-bold"">Lista de pagos</h2>
        <div className=""overflow-x-auto"">
          {/* Tabla para mostrar los pagos */}
          <table className=""table-auto w-full"">
            <thead>
              <tr>
                <th className=""border px-4 py-2"">Código pago</th>
                <th className=""border px-4 py-2"">Monto pago</th>
                <th className=""border px-4 py-2"">Fecha de pago</th>
                <th className=""border px-4 py-2"">Código de deuda</th>
              </tr>
            </thead>
            <tbody>
              {/* Mapeo de los pagos para mostrar cada fila de la tabla */}
              {pagos.map((pago) => (
                <tr key={pago.CodigoPago}>
                  <td className=""border text-center px-4 py-2"">
                    {pago.CodigoPago}
                  </td>
                  <td className=""border text-center px-4 py-2"">
                    {pago.MontoPago}
                  </td>
                  <td className=""border text-center px-4 py-2"">
                    {pago.FechaPago}
                  </td>
                  <td className=""border text-center px-4 py-2"">
                    {pago.FKCodigoDeuda}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </>
  );
}
```
> RealizarPago.tsx
```javascript
import { useState, useEffect } from ""react"";
import { useForm } from ""react-hook-form"";
import { pagarDeuda } from ""../../api/education.api.ts"";
import { Deuda } from ""../../Types/educationservice.ts"";
import { Link, useNavigate, useLocation } from ""react-router-dom"";
import { toast } from ""react-hot-toast"";
import axios from ""axios"";
import { Regresar } from ""../../components/Regresar.tsx"";

export function RealizarPago() {
  // Configuración del formulario con react-hook-form
  const {
    register,
    handleSubmit,
    formState: { errors },
    setValue,
  } = useForm();
  
  // Utilidad de navegación de react-router-dom
  const navigate = useNavigate();

  // Obtener la ubicación actual de react-router-dom
  const location = useLocation();
  
  // Estado para el mensaje de error
  const [errorMessage, setErrorMessage] = useState("""");

  // Obtener parámetros de búsqueda de la URL
  const searchParams = new URLSearchParams(location.search);
  const codigoDeuda = searchParams.get(""codigoDeuda"");
  const montoPago = searchParams.get(""MontoPago"");
  const codigoCuenta = searchParams.get(""CodigoCuenta"");

  // Cargar los valores iniciales en los campos del formulario
  useEffect(() => {
    if (codigoDeuda) {
      setValue(""CodigoDeuda"", codigoDeuda);
    }
    if (codigoCuenta) {
      setValue(""CodigoCuenta"", codigoCuenta);
    }
    if (montoPago) {
      setValue(""MontoPago"", montoPago);
    }
  }, [codigoDeuda, codigoCuenta, montoPago, setValue]);

  // Función para manejar el envío del formulario
  const onSubmit = handleSubmit(async (data) => {
    try {
      // Crear objeto de deuda con los datos del formulario
      const deudaData: Deuda = {
        CodigoDeuda: data.CodigoDeuda,
        CodigoCuenta: data.CodigoCuenta,
        MontoPago: parseInt(data.MontoPago),
      };

      // Realizar el pago de la deuda llamando a la API
      const res = await pagarDeuda(deudaData);
      console.log(res);

      // Mostrar una notificación de éxito
      const style = {
        background: ""#202033"",
        color: ""#fff"",
      };
      toast.success(""Pago realizado correctamente"", {
        position: ""top-right"",
        style,
      });

      // Navegar a la página de servicios de educación
      navigate(""/Servicios/Educacion"");
    } catch (error) {
      console.log(error);

      // Manejo de errores específicos
      if (axios.isAxiosError(error) && error.response?.status === 404) {
        setErrorMessage(""No se ha encontrado la cuenta"");
      } else if (axios.isAxiosError(error) && error.response?.status === 400) {
        setErrorMessage(error.response.data.mensaje);

        const errorMessage = error.response.data.mensaje;
        if (errorMessage === ""La deuda ya ha sido pagada."") {
          toast.success(""La deuda ya ha sido pagada."", {
            position: ""top-center"",
            style: {
              background: ""#202033"",
              color: ""#fff"",
            },
          });
          navigate(""/Servicios/Educacion/"");
        } else {
          setErrorMessage((error as Error).message);
        }
      } else {
        setErrorMessage((error as Error).message);
      }
    }
  });

  return (
    <>
      {/* Componente Regresar para volver a la página anterior */}
      <Regresar to=""/Servicios/Educacion/BusquedaPago"" />

      {/* Título del formulario */}
      <h1>Formulario de Pago</h1>

      {/* Formulario */}
      <form
        onSubmit={onSubmit}
        className=""flex flex-col gap-4 items-center mx-auto mt-4""
      >
        {/* Campo para el código de deuda */}
        <input
          type=""number""
          min=""0""
          placeholder=""Código de deuda""
          {...register(""CodigoDeuda"", { required: true })}
          className=""p-2 rounded border border-gray-300""
          disabled
        />
        {errors.CodigoDeuda && (
          <span className=""text-red-500"">Código de deuda requerido</span>
        )}

        {/* Campo para el código de cuenta */}
        <input
          type=""number""
          min=""0""
          placeholder=""Codigo Cuenta""
          {...register(""CodigoCuenta"", { required: true })}
          className=""p-2 rounded border border-gray-300""
        />
        {errors.CodigoDeuda && (
          <span className=""text-red-500"">Código de Cuenta requerido</span>
        )}

        {/* Campo para el monto de pago */}
        <input
          type=""number""
          min=""0""
          placeholder=""Cantidad de deuda""
          {...register(""MontoPago"", { required: true })}
          className=""p-2 rounded border border-gray-300""
          disabled
        />
        {errors.MontoPago && (
          <span className=""text-red-500"">Monto de pago requerido </span>
        )}

        {/* Mostrar mensaje de error */}
        {errorMessage && <span className=""text-red-500"">{errorMessage}</span>}

        {/* Botones de cancelar y guardar */}
        <div className=""flex gap-4"">
          <Link
            to=""/Servicios/Educacion""
            className=""bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded""
          >
            Cancelar
          </Link>
          <button
            type=""submit""
            className=""bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded""
          >
            Guardar
          </button>
        </div>
      </form>
    </>
  );
}

```
5.2. Sevicio Internet
> DeudoresInternet.tsx
```javascript
import { useEffect, useState } from ""react"";
import { obtenerDeudores } from ""../../api/internet.api.ts"";
import { Deudor } from ""../../Types/internetservice.ts"";
import { Regresar } from ""../../components/Regresar"";

export function DeudoresInternet() {
  const [deudas, setDeudas] = useState<Deudor[]>([]); // Especifica el tipo de estado como un array de Deudor

  useEffect(() => {
    async function cargarDeudas() {
      const res = await obtenerDeudores();
      setDeudas(res.data); // Actualiza el estado con los datos de deudas
    }
    cargarDeudas();
  }, []);

  return (
    <>
      <Regresar to=""/Servicios/Internet"" />
      <div className=""flex flex-col gap-4"">
        <h2 className=""text-xl font-bold"">Lista de deudores</h2>

        <table className=""table-auto"">
          <thead>
            <tr>
              <th className=""border px-4 py-2"">Código</th>
              <th className=""border px-4 py-2"">Nombre</th>
              <th className=""border px-4 py-2"">Apellido</th>
              <th className=""border px-4 py-2"">Monto Deuda</th>
              <th className=""border px-4 py-2"">Fecha de vencimiento</th>
              <th className=""border px-4 py-2"">Estado</th>
            </tr>
          </thead>

          <tbody>
            {deudas.map((deuda) => (
              <tr key={deuda.CodigoDeudInter}>
                <td className=""border px-4 py-2"">{deuda.CodigoDeudInter}</td>
                <td className=""border px-4 py-2"">{deuda.Nombre}</td>
                <td className=""border px-4 py-2"">{deuda.Apellido}</td>
                <td className=""border px-4 py-2"">{deuda.MonDeuda}</td>
                <td className=""border px-4 py-2"">{deuda.FechVenc}</td>
                <td className=""border px-4 py-2"">{deuda.Estado ? ""Pagado"" : ""Pendiente""}</td>

              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </>
  );
}
```
> InicioInternet.tsx
```javascript
import { OpcionesInicio } from ""../../components/OpcionesInicio"";
import { Regresar } from ""../../components/Regresar"";

export function InicioInternet() {
  return (
    <div className=""flex flex-col"">
      <div>
      <Regresar to=""/Servicios"" />
      </div>
      <h1 className=""text-4xl font-bold mb-24 text-left mt-2"">
        Pagos de Internet
      </h1>
      <div className=""flex justify-center items-center flex-grow gap-5"">
        <OpcionesInicio to=""/Servicios/Internet/Pagar"" text=""Pagar Deuda"" />
        <OpcionesInicio to=""/Servicios/Internet/Deudores"" text=""Deudores"" />
      </div>
    </div>
  );
}
```
> PagosInternet.tsx
```javascript
import { useState } from ""react"";
import { useForm } from ""react-hook-form"";
import { buscarDeuda } from ""../../api/education.api.ts"";
import { Deudor } from ""../../Types/educationservice.ts"";
import { ContentTDeudas } from ""../../components/EducationService/ContentTDeudas"";
import { Regresar } from ""../../components/Regresar.tsx"";
import { useState } from ""react"";
import { useForm } from ""react-hook-form"";

import { buscarDeuda } from ""../../api/internet.api.ts"";
import { Deudor } from ""../../Types/internetservice.ts"";

import { ContentTDeudas } from ""../../components/InternetService/ContentTDeudas"";
import { Regresar } from ""../../components/Regresar.tsx"";


export function BusquedaPagoInternet() {
  const [deudores, setDeudores] = useState<Deudor[]>([]);
  const [error, setError] = useState("""");

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = handleSubmit(async (data) => {
    const CodigoDeudInter = data.CodigoDeudInter;

    try {
      const response = await buscarDeuda(parseInt(CodigoDeudInter));
      setDeudores([response.data]);
      setError("""");
    } catch (error) {
      console.log(error);
      setDeudores([]);
      setError(""Deudor no encontrado"");
    }
  });


  return (
    <>
      <Regresar to=""/Servicios/Internet/"" />
      <div className=""mt-4"">
        <form onSubmit={onSubmit}>
          <div className=""relative"">
            <div className=""absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"">
              <svg
                className=""w-4 h-4 text-gray-500 dark:text-gray-400""
                aria-hidden=""true""
                xmlns=""http://www.w3.org/2000/svg""
                fill=""none""
                viewBox=""0 0 20 20""
              >
                <path
                  stroke=""currentColor""
                  strokeLinecap=""round""
                  strokeLinejoin=""round""
                  strokeWidth=""2""
                  d=""m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z""
                />
              </svg>
            </div>
            <input
              type=""search""
              id=""default-search""
              {...register(""CodigoDeudInter"", { required: true })}
              className=""block w-full p-4 pl-10 text-lg text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500""
              placeholder=""Ingrese el código del Deudor""
              required
            />
            {errors.CodigoDeudInter && (
              <span className=""text-red-500"">
                Código de Deudor requerido
              </span>
            )}
            <button
              type=""submit""
              className=""text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800""
            >
              Search
            </button>
          </div>
        </form>{"" ""}

        <div className=""container mx-auto px-4 py-8"">
          {error && <p className=""text-red-500"">{error}</p>}
          {console.log(deudores)}
          {console.log(deudores.length)}
          {deudores.length > 0 ? (
            <div className=""relative overflow-x-auto shadow-md sm:rounded-lg"">
              <table className=""w-full text-sm text-left text-gray-300 dark:text-gray-300"">
                <thead className=""text-xs text-gray-600 uppercase dark:text-gray-300"">
                  <tr>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Codigo de deuda
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Monto de Deuda
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      FechVenc
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Estado
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Accion
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {deudores.map((deudor) => (
                    <ContentTDeudas
                      key={deudor.CodigoDeudInter}
                      CodigoDeudInter={deudor.CodigoDeudInter.toString()}
                      MonDeuda={deudor.MonDeuda}
                      FechVenc={deudor.FechVenc}
                      Estado={deudor.Estado}
                    />
                  ))}
                </tbody>
                


              </table>
            </div>
          ) : null}
        </div>
      </div>
    </>
  );
}

```
> RealizarPago.tsx
```javascript
import { useState, useEffect } from ""react"";
import { useForm } from ""react-hook-form"";

import { pagarDeuda } from ""../../api/internet.api.ts"";
import { Deuda } from ""../../Types/internetservice"";

import { Link, useNavigate, useLocation } from ""react-router-dom"";
import { toast } from ""react-hot-toast"";
import axios from ""axios"";
import { Regresar } from ""../../components/Regresar.tsx"";

export function RealizarPagoInternet() {
  const {
    register,
    handleSubmit,
    formState: { errors },
    setValue,
  } = useForm();
  const navigate = useNavigate();
  const location = useLocation();
  const [errorMessage, setErrorMessage] = useState("""");
  const searchParams = new URLSearchParams(location.search);
  const codigoDeuda = searchParams.get(""codigoDeuda"");
  const montoPago = searchParams.get(""MontoPago"");

  useEffect(() => {
    if (codigoDeuda) {
      setValue(""CodigoDeuda"", codigoDeuda);
    }
    if (montoPago) {
      setValue(""MontoPago"", montoPago);
    }
  }, [codigoDeuda, montoPago, setValue]);

  const onSubmit = handleSubmit(async (data) => {
    try {
      const deudaData: Deuda = {
        CodigoDeudInter: parseInt(data.CodigoDeuda),
        MonPago: parseInt(data.MontoPago),
      };
      const res = await pagarDeuda(parseInt(data.CodigoDeuda),deudaData);
      console.log(res);

      const style = {
        background: ""#202033"",
        color: ""#fff"",
      };

      toast.success(""Pago realizado correctamente"", {
        position: ""top-right"",
        style,
      });
      navigate(""/Servicios/Internet"");
    } catch (error) {
      console.log(error);

      if (axios.isAxiosError(error) && error.response?.status === 404) {
        setErrorMessage(""No se ha encontrado el ID del usuario"");
      } else if (axios.isAxiosError(error) && error.response?.status === 400) {
        setErrorMessage(error.response.data.mensaje);
      } else {
        setErrorMessage((error as Error).message);
      }
    }
  });

  return (
    <>
      <Regresar to=""/Servicios/Internet/Pagar"" />
      <form
        onSubmit={onSubmit}
        className=""flex flex-col gap-4 items-center mx-auto mt-4""
      >
        <input
          type=""number""
          min=""0""
          placeholder=""Código de deuda""
          {...register(""CodigoDeuda"", { required: true })}
          className=""p-2 rounded border border-gray-300""
          disabled
        />
        {errors.CodigoDeuda && (
          <span className=""text-red-500"">Código de deuda requerido</span>
        )}

        <input
          type=""number""
          min=""0""
          placeholder=""Cantidad de deuda""
          {...register(""MontoPago"", { required: true })}
          className=""p-2 rounded border border-gray-300""
          disabled
        />
        {errors.MontoPago && (
          <span className=""text-red-500"">Monto de pago requerido </span>
        )}

        {errorMessage && <span className=""text-red-500"">{errorMessage}</span>}

        <div className=""flex gap-4"">
          <Link
            to=""/Servicios/Internet""
            className=""bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded""
          >
            Cancelar
          </Link>
          <button
            type=""submit""
            className=""bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded""
          >
            Guardar
          </button>
        </div>
      </form>
    </>
  );
}
```
5.3. Sevicio Luz
> Busqueda.tsx
```javascript
import { useEffect, useState } from ""react"";
import { obtenerDeudores } from ""../../api/internet.api.ts"";
import { Deudor } from ""../../Types/internetservice.ts"";
import { Regresar } from ""../../components/Regresar"";

export function DeudoresInternet() {
  const [deudas, setDeudas] = useState<Deudor[]>([]); // Especifica el tipo de estado como un array de Deudor

  useEffect(() => {
    async function cargarDeudas() {
      const res = await obtenerDeudores();
      setDeudas(res.data); // Actualiza el estado con los datos de deudas
    }
    cargarDeudas();
  }, []);

  return (
    <>
      <Regresar to=""/Servicios/Internet"" />
      <div className=""flex flex-col gap-4"">
        <h2 className=""text-xl font-bold"">Lista de deudores</h2>

        <table className=""table-auto"">
          <thead>
            <tr>
              <th className=""border px-4 py-2"">Código</th>
              <th className=""border px-4 py-2"">Nombre</th>
              <th className=""border px-4 py-2"">Apellido</th>
              <th className=""border px-4 py-2"">Monto Deuda</th>
              <th className=""border px-4 py-2"">Fecha de vencimiento</th>
              <th className=""border px-4 py-2"">Estado</th>
            </tr>
          </thead>

          <tbody>
            {deudas.map((deuda) => (
              <tr key={deuda.CodigoDeudInter}>
                <td className=""border px-4 py-2"">{deuda.CodigoDeudInter}</td>
                <td className=""border px-4 py-2"">{deuda.Nombre}</td>
                <td className=""border px-4 py-2"">{deuda.Apellido}</td>
                <td className=""border px-4 py-2"">{deuda.MonDeuda}</td>
                <td className=""border px-4 py-2"">{deuda.FechVenc}</td>
                <td className=""border px-4 py-2"">{deuda.Estado ? ""Pagado"" : ""Pendiente""}</td>

              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </>
  );
}import { useState } from ""react"";
import { useForm } from ""react-hook-form"";
import { buscarDeuda } from ""../../api/luz.api.ts"";
import { ContentTDeudas } from ""../../components/LuzService/ContentTDeudas"";
import { Regresar } from ""../../components/Regresar.tsx"";
import { Deuda } from ""../../Types/luzservice.ts"";

export function Busqueda() {
  const [deudor, setDeudor] = useState<Deuda | null>(null);
  const [error, setError] = useState("""");
  const [isLoading, setIsLoading] = useState(false);

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = handleSubmit(async (data) => {
    const codigoDeuda = data.CodigoDeuda;
    console.log(""Valor de CodigoDeuda:"", codigoDeuda); // Imprimir el valor en la consola

    setIsLoading(true);
    setError("""");

    try {
      const response = await buscarDeuda(parseInt(codigoDeuda));
      const deuda = response.data;

      if (deuda) {
        setDeudor(deuda);
      } else {
        setDeudor(null);
        setError(""Deuda no encontrada"");
      }
    } catch (error) {
      console.log(error);
      setDeudor(null);
      setError(""Algo salió mal al obtener la deuda"");
    } finally {
      setIsLoading(false);
    }
  });

  return (
    <>
      <Regresar to=""/Servicios/Luz"" />
      <div className=""mt-4"">
        <form onSubmit={onSubmit}>
          <div className=""relative"">
            <div className=""absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"">
              <svg
                className=""w-4 h-4 text-gray-500 dark:text-gray-400""
                aria-hidden=""true""
                xmlns=""http://www.w3.org/2000/svg""
                fill=""none""
                viewBox=""0 0 20 20""
              >
                <path
                  stroke=""currentColor""
                  strokeLinecap=""round""
                  strokeLinejoin=""round""
                  strokeWidth=""2""
                  d=""m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z""
                />
              </svg>
            </div>
            <input
              type=""search""
              id=""default-search""
              {...register(""CodigoDeuda"", { required: true })}
              className=""block w-full p-4 pl-10 text-lg text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500""
              placeholder=""Ingrese el código de la deuda""
              required
            />
            {errors.CodigoDeuda && (
              <span className=""text-red-500"">
                Código de deuda requerido
              </span>
            )}
            <button
              type=""submit""
              className=""text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800""
              disabled={isLoading}
            >
              {isLoading ? ""Buscando..."" : ""Buscar""}
            </button>
          </div>
        </form>
        <div className=""container mx-auto px-4 py-8"">
          {error && <p className=""text-red-500"">{error}</p>}
          {deudor && (
            <div className=""relative overflow-x-auto shadow-md sm:rounded-lg"">
              <table className=""w-full text-sm text-left text-gray-300 dark:text-gray-300"">
                <thead className=""text-xs text-gray-600 uppercase dark:text-gray-300"">
                  <tr>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Codigo de deuda
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Cantidad
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Vencimiento
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Estado
                    </th>
                    <th scope=""col"" className=""px-6 py-3 text-gray-600"">
                      Accion
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <ContentTDeudas
                    codigo_Deuda={deudor.codigo_deuda}
                    Monto={deudor.Monto}
                    FechaVenc={deudor.FechaVencimientoPago}
                    Estado={deudor.Estado}
                  
                  />
                </tbody>
              </table>
            </div>
          )}
        </div>
      </div>
    </>
  );
}
```
> Deudas.tsx
```javascript
import { useEffect, useState } from ""react"";
import { obtenerDeudores } from ""../../api/luz.api.ts"";
import { Clientes } from ""../../Types/luzservice.ts"";
import { Regresar } from ""../../components/Regresar"";

export function DeudasLuz() {
  const [deudas, setDeudas] = useState<Clientes[]>([]);

  useEffect(() => {
    async function cargarDeudas() {
      const res = await obtenerDeudores();
      setDeudas(res.data);
    }
    cargarDeudas();
  }, []);

  return (
    <>
      <Regresar to=""/Servicios/Luz"" />
      <div className=""flex flex-col gap-4"">
        <h2>Lista de deudas</h2>
        <table className=""min-w-full divide-y divide-gray-200"">
          <thead>
            <tr>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Código deuda
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Cantidad deuda
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Estado
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Fecha de vencimiento
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Código del Cliente
              </td>
            </tr>
          </thead>
          <tbody>
            {deudas.map((deuda) => (
              <tr key={deuda.CodigoDeuda}>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {deuda.CodigoDeuda}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {deuda.Monto}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {deuda.Estado}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {deuda.FechaVencimientoPago}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {deuda.FkCodigoCliente}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </>
  );
}
```
> InicioLuz.tsx
```javascript
import { OpcionesInicio } from ""../../components/OpcionesInicio"";
import { Regresar } from ""../../components/Regresar"";

export function InicioLuz() {
  return (
    <div className=""flex flex-col"">
      <div>
      <Regresar to=""/Servicios"" />
      </div>
      <h1 className=""text-4xl font-bold mb-24 text-left mt-2"">
        Pagos de Luz
      </h1>
      <div className=""flex justify-center items-center flex-grow gap-5"">
        <OpcionesInicio to=""/Servicios/Luz/RealizarPago"" text=""Pagar Deuda"" />
        <OpcionesInicio to=""/Servicios/Luz/Deudas"" text=""Deudas"" />
        <OpcionesInicio to=""/Servicios/Luz/Pagos"" text=""Pagos"" />
      </div>
    </div>
  );
}
```
> PagoLuz.tsx
```javascript
import { Regresar } from ""../../components/Regresar"";
import { useEffect, useState } from ""react"";
import { obtenerPagos } from ""../../api/luz.api.ts"";
import { Pagos } from ""../../Types/luzservice.ts"";

export function PagosLuz() {
  const [pagos, setPagos] = useState<Pagos[]>([]);

  useEffect(() => {
    async function cargarPagos() {
      const res = await obtenerPagos();
      setPagos(res.data);
      console.log(res);
    }
    cargarPagos();
  }, []);

  return (
    <>
      <Regresar to=""/Servicios/Luz"" />
      <div className=""flex flex-col gap-4"">
        <h2>Lista de pagos</h2>
        <table className=""min-w-full divide-y divide-gray-200"">
          <thead>
            <tr>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Código pago
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Monto pago
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Fecha de pago
              </td>
              <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                Código de deuda
              </td>
            </tr>
          </thead>
          <tbody>
            {pagos.map((pago) => (
              <tr key={pago.CodigoPago}>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {pago.CodigoPago}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {pago.Pago}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {pago.FechaPago}
                </td>
                <td style={{ borderWidth: ""2px"" }} className=""border px-4 py-2"">
                  {pago.CodigoDeuda}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </>
  );
}
```
> RealizarPago.tsx
```javascript
import { useState, useEffect } from ""react"";
import { useForm } from ""react-hook-form"";
import { pagarDeuda } from ""../../api/luz.api"";
import { Pagos } from ""../../Types/luzservice"";
import { Link, useNavigate, useLocation } from ""react-router-dom"";
import { toast } from ""react-hot-toast"";
import axios from ""axios"";
import { Regresar } from ""../../components/Regresar"";

export function RealizarPago() {
  const {
    register,
    handleSubmit,
    formState: { errors },
    setValue,
  } = useForm();
  const navigate = useNavigate();
  const location = useLocation();
  const [errorMessage, setErrorMessage] = useState("""");
  const searchParams = new URLSearchParams(location.search);
  const codigoDeuda = searchParams.get(""codigoDeuda"");
  const montoPago = searchParams.get(""Monto"");

  useEffect(() => {
    if (codigoDeuda) {
      setValue(""CodigoDeuda"", codigoDeuda);
    }
    if (montoPago) {
      setValue(""MontoPago"", montoPago);
    }
  }, [codigoDeuda, montoPago, setValue]);

  const onSubmit = handleSubmit(async (data) => {
    try {
      const pagoData: Pagos = {
        CodigoPago: data.CodigoPago,
        CodigoDeuda: parseInt(data.CodigoDeuda),
        Pago: parseInt(data.MontoPago),
        FechaPago: data.FechaPago,
      };
      const res = await pagarDeuda(pagoData);
      console.log(res);

      const style = {
        background: ""#202033"",
        color: ""#fff"",
      };

      toast.success(""Pago realizado correctamente"", {
        position: ""top-right"",
        style,
      });
      navigate(""/Servicios/Educacion"");
    } catch (error) {
      console.log(error);

      if (axios.isAxiosError(error) && error.response?.status === 404) {
        setErrorMessage(""No se ha encontrado el ID del usuario"");
      } else if (axios.isAxiosError(error) && error.response?.status === 400) {
        setErrorMessage(error.response.data.mensaje);
      } else {
        setErrorMessage((error as Error).message);
      }
    }
  });

  return (
    <>
      <Regresar to=""/Servicios/Luz"" />
      <form
        onSubmit={onSubmit}
        className=""flex flex-col gap-4 items-center mx-auto mt-4""
      >
        <input
          type=""text""
          placeholder=""Código de pago""
          {...register(""CodigoPago"", { required: true })}
          className=""p-2 rounded border border-gray-300""
        />
        {errors.CodigoPago && (
          <span className=""text-red-500"">Código de pago requerido</span>
        )}

        <input
          type=""number""
          min=""0""
          placeholder=""Código de deuda""
          {...register(""CodigoDeuda"", { required: true })}
          className=""p-2 rounded border border-gray-300""
        />
        {errors.CodigoDeuda && (
          <span className=""text-red-500"">Código de deuda requerido</span>
        )}

        <input
          type=""number""
          min=""0""
          placeholder=""Cantidad de pago""
          {...register(""MontoPago"", { required: true })}
          className=""p-2 rounded border border-gray-300""
        />
        {errors.MontoPago && (
          <span className=""text-red-500"">Cantidad de pago requerida</span>
        )}

        <input
          type=""date""
          placeholder=""Fecha de pago""
          {...register(""FechaPago"", { required: true })}
          className=""p-2 rounded border border-gray-300""
        />
        {errors.FechaPago && (
          <span className=""text-red-500"">Fecha de pago requerida</span>
        )}

        {errorMessage && <span className=""text-red-500"">{errorMessage}</span>}

        <div className=""flex gap-4"">
          <Link
            to=""/Servicios/Luz""
            className=""bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded""
          >
            Cancelar
          </Link>
          <button
            type=""submit""
            className=""bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded""
          >
            Pagar
          </button>
        </div>
      </form>
    </>
  );
}
```
5.3. Sevicio Telefono
> Facturas.tsx
```javascript
import { useEffect, useState } from ""react"";
import { obtenerfactura } from ""../../api/Telephony.ts"";
import { Factura } from ""../../Types/telephonyservice.ts"";
import { Regresar } from ""../../components/Regresar"";

export function Facturas() {
    const [facturas, setFacturas] = useState<Factura[]>([]);
  
    useEffect(() => {
      async function cargarFacturas() {
        try {
          const res = await obtenerfactura();
          setFacturas(res.data);
        } catch (error) {
          console.error(error);
        }
      }
      cargarFacturas();
    }, []);
  
    return (
      <>
        {<Regresar to=""/Servicios/Telefonia"" />}
        <div className=""flex flex-col gap-4""></div>
        <h2 className=""text-xl font-bold"" >Lista de facturas</h2><br></br>
        <div className=""overflow-x-auto"">
        <table className=""table-auto w-full"">
          <thead>
            <tr>
              <th className=""border px-4 py-2"">Cliente</th>
              <th className=""border px-4 py-2"">Plan</th>
              <th className=""border px-4 py-2"">Monto</th>
              <th className=""border px-4 py-2"">Fecha de emisión</th>
              <th className=""border px-4 py-2"">Fecha de vencimiento</th>
              <th className=""border px-4 py-2"">Pagado</th>
              <th className=""border px-4 py-2"">Estado</th>
            </tr>
          </thead>
          <tbody>
            {facturas.map((factura) => (
              <tr key={factura.id}>
                <td className=""border text-center px-4 py-2"">{factura.cliente}</td>
                <td className=""border text-center px-4 py-2"">{factura.plan}</td>
                <td className=""border text-center px-4 py-2"">{factura.monto}</td>
                <td className=""border text-center px-4 py-2"">{factura.fecha_emision}</td>
                <td className=""border text-center px-4 py-2"">{factura.fecha_vencimiento}</td>
                <td className={`border font-bold text-center px-4 py-2 ${factura.pagado ? 'text-green-600' : 'text-orange-500'}`}>{factura.pagado ? 'Sí' : 'No'}</td>
                <td className=""border text-center px-4 py-2"">{factura.estado ? 'Activo' : 'Inactivo'}</td>
              </tr>
            ))}
          </tbody>
        </table>
        </div>
      </>
    );
  }
```
> IndexService.tsx
```javascript
import { OpcionesInicio } from ""../../components/OpcionesInicio"";
import { Regresar } from ""../../components/Regresar"";

export function IndexService() {
  return (
    <div className=""flex flex-col"">
      <div>
      <Regresar to=""/Servicios"" />
      </div>
      <h1 className=""text-4xl font-bold mb-24 text-left mt-2"">
        Pagos de Telefonia
      </h1>
      <div className=""flex justify-center items-center rounded-md flex-grow gap-5"">
        <OpcionesInicio to=""/Servicios/Telefonia/Facturas"" text=""Facturas"" />
        <OpcionesInicio to=""/Servicios/Telefonia/Planes"" text=""Recarga"" />
      </div>
    </div>
  );
}
```
> Plan.tsx
```javascript
import { obtenerplan,elegirplan } from ""../../api/Telephony.ts"";
import { Plan } from ""../../Types/telephonyservice.ts"";
import { useEffect, useState } from ""react"";
import { Regresar } from ""../../components/Regresar"";
import { useNavigate } from ""react-router-dom"";

export function Planes() {
  const [planes, setPlanes] = useState<Plan[]>([]);
  const navigate = useNavigate();

  useEffect(() => {
    async function cargarPlanes() {
      try {
        const res = await obtenerplan();
        setPlanes(res.data);
      } catch (error) {
        console.error(error);
      }
    }
    cargarPlanes();
  }, []);

  const handleSeleccionarPlan = async (plan_id: number, costo_mensual: number) => {
    const idcliente = 1;
    try {
      // Llamar a la función ""elegirplan"" y pasar el plan_id y el costo_mensual
      await elegirplan(idcliente, plan_id, costo_mensual);
    } catch (error) {
      console.error(error);
    }finally {
      navigate(`/Servicios/Telefonia/RealizarPago?id_cliente=${idcliente}&monto=${costo_mensual}`);
    }
  };
  return (
    <>
      <div className=""flex flex-col"">
      <div>
      <Regresar to=""/Servicios/Telefonia"" />
      </div>
      <h1 className=""text-4xl font-bold mb-24 text-left mt-2"">Elegir tu Plan</h1> 
      <div className=""grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 px-4"">
        {planes.map((plan) => (
          <div
            key={plan.id}
            className=""bg-white rounded-lg shadow-xl p-6 flex flex-col justify-between""
          >
            <h2 className=""text-xl font-bold mb-4"">{plan.nombre}</h2>
            <div className=""flex flex-col gap-2"">
              <p className=""text-gray-700 text-center font-semibold"">
                <span className=""font-bold ""></span>{"" ""}
                S/{plan.costo_mensual}
              </p><hr />
              <div className=""bg-blue-900 rounded-full py-2 px-4 mt-4 font-bold text-center"">
              <p className=""text-neutral-100"" >
                <span className=""font-semibold""></span>{"" ""}
                {plan.minutos_incluidos} Min
              </p>
              <p className=""text-neutral-100"">
                <span className=""font-semibold""></span>{"" ""}
                {plan.datos_incluidos} GB
              </p>
              </div>
            </div>
            <button className=""bg-blue-900 hover:bg-orange-600 text-white font-semibold py-2 px-4 mt-4 rounded-md"" onClick={() => handleSeleccionarPlan(plan.id, plan.costo_mensual)}>
              ¡Me Interesa!
            </button>
          </div>
        ))}
      </div><br/><br/>
    </div>
    </>
  );
}
```
> RealizarPago.tsx
```javascript
import { useEffect, useState } from ""react"";
import { useLocation } from ""react-router-dom"";
import { buscarcliente, actualizarsaldo } from ""../../api/Telephony.ts"";
import { Regresar } from ""../../components/Regresar"";

export function RealizarPago() {
  const location = useLocation();
  const searchParams = new URLSearchParams(location.search);
  const id_cliente = searchParams.get(""id_cliente"");
  const monto = searchParams.get(""monto"");

  const [mensaje, setMensaje] = useState("""");

  useEffect(() => {
    if (id_cliente && monto) {
      buscarClienteYActualizarSaldo(Number(id_cliente), Number(monto));
    }
  }, [id_cliente, monto]);

  const buscarClienteYActualizarSaldo = async (clienteId: number, monto: number) => {
    try {
      // Obtener los datos del cliente
      const res = await buscarcliente(clienteId);
      const cliente = res.data;

      // Restar el monto a la cuenta bancaria
      if (cliente.cuenta_bancaria >= monto) {
        // Restar el monto a la cuenta bancaria
        const nuevoSaldo = cliente.cuenta_bancaria - monto;
  
        // Actualizar los datos del cliente con el nuevo saldo
        await actualizarsaldo(clienteId, cliente.nombre, cliente.direccion, cliente.telefono, nuevoSaldo, cliente.servicio_activo);
  
        setMensaje(""Su recarga se realizó exitosamente."");
      } else {
        setMensaje(""Saldo insuficiente para realizar la recarga."");
      }
    } catch (error) {
      console.error(error);
      setMensaje(""Hubo algun error en su recarga."");
    }
  };

  return (
    <>
    <div>
      <Regresar to=""/Servicios/Telefonia"" />
    </div>
    <div className=""container mx-auto mt-8"">
    <div className=""flex w-100 shadow-lg rounded-lg"">
      <div className=""bg-green-600 py-4 px-6 rounded-l-lg flex items-center"">
        <svg xmlns=""http://www.w3.org/2000/svg"" className=""text-white fill-current"" viewBox=""0 0 16 16"" width=""20"" height=""20""><path fill-rule=""evenodd"" d=""M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z""></path></svg>
      </div>
      <div className=""px-4 py-6 bg-white rounded-r-lg flex justify-between items-center w-full border border-l-transparent border-gray-200"">
        <div><h1 className=""text-4xl font-bold mb-4"">{mensaje}</h1></div>
      </div>
    </div><br></br>
      <p className=""text-lg font-semibold"">ID Cliente: {id_cliente}</p>
      <p className=""text-lg font-semibold"">Monto: {monto}</p>
    </div>
  
    </>
  );
}
```"
UPT-FAING-EPIS/proyecto-unidad-iii-pds-api_usuario,proyecto,unidad-iii-pds-api_usuario,True,106,False,0,False,False,False,](https://classroom.github.com/online_ide?assignment_repo_id=11418407&assignment_repo_type=AssignmentRepo)
UPT-FAING-EPIS/proyecto-unidad-iii-pds-api_operacion,proyecto,unidad-iii-pds-api_operacion,True,106,False,0,False,False,False,](https://classroom.github.com/online_ide?assignment_repo_id=11424817&assignment_repo_type=AssignmentRepo)
UPT-FAING-EPIS/proyecto-unidad-iii-pds-api_productos,proyecto,unidad-iii-pds-api_productos,True,106,False,0,False,False,False,](https://classroom.github.com/online_ide?assignment_repo_id=11434460&assignment_repo_type=AssignmentRepo)
UPT-FAING-EPIS/proyecto-unidad-i-grupo-1-ac-jc-jj-jr-jv,proyecto,unidad-i-grupo-1-ac-jc-jj-jr-jv,True,4903,True,4,True,False,True,"# GRUPO DE  5 ESTUDIANTES

# INTEGRANTES : JOSE LUIS JARRO C. , Jean Valverde  Zamora  ,Jhonny Rivera Mendoza , Anthoy Cano Sucso, Josue Abraham Chambilla Zuñiga

# Gestion de Clientes

# C# --- SQL SERVER 2019  ---OR/M ---DOCKER ---DOCUMENTACION TECNICA GITHUB

## OBJETIVOS
  * Realizar el proyecto de Gestion de clientes, con los conocimientos realizados aprendidos  

## REQUERIMIENTOS


  * Resumen (de 10 a 15 líneas)

  * Abstract

  * Antecedentes o introducción

  * Titulo

  * Autores

  * Planteamiento del problema

           * 4.1.   Problema

           * 4.2.   Justificación

           * 4.3.   Alcance

  * Objetivos

  * 5.1.   General

  * 5.2.   Específicos

  * 6. Desarrollo de la propuesta 

  * 6.1. Diagramas de Casos de Uso

   


  * 6.2. Diagrama de Clases

  * 6.3. Diagrama de Componentes

  * 6.4. Arquitectura.

  * 6.5. Diagrama de Base de Datos


  * 7 Bibliografia

    

      

    

  * 8 Anexos

  * 8.1 Diccionario de datos de su base de datos relacional

  * Tablas, con los siguientes campos: 

  * Nombre de Columna | Descripción | Tipo de Dato | Permite nulos | Constraint | Default

  * 8.2. Estandar de Programacion, tomar el siguiente ejemplo (adjunto)


## CONSIDERACIONES INICIALES
  * Clonar el repositorio mediante git para tener los recursos necesarios

## DESARROLLO

# Resumen  

Este informe presenta el desarrollo de una aplicación de Gestión de Clientes utilizando C# como lenguaje de programación 
y Microsoft SQL Server como base de datos relacional. La aplicación incluye funcionalidades de registro de clientes, 
seguimiento de pedidos y gestión de información de clientes. El objetivo principal es mejorar 
la eficiencia en la atención al cliente y el seguimiento de pedidos.

# Abstarct  

This report presents the development of a Customer Management application using C# as the programming language and Microsoft SQL 
Server as the relational database. The application includes features for customer registration, order tracking,
and customer information management. The main objective is to enhance customer service efficiency and order tracking.
 
# Antecedente s o Introduccion  
La gestión eficiente de clientes es fundamental para cualquier empresa.
 La aplicación de Gestión de Clientes busca automatizar y mejorar 
 los procesos relacionados con la atención al cliente y el seguimiento de pedidos.

# Titulo  
Desarrollo de una Aplicación de Gestión de Clientes en C# y SQL Server.

# Autores  

- Jose Luis Jarro C.
- Jean Valverde Zamora  
- Anthony Cano Sucso  
- Josue Chmabilla Zuñiga  
- Jhony Rivera  Mendoza  



# Planteamiento del Problema  
  * Problema 
   - Las empresas enfrentan desafíos en la gestión de clientes y pedidos, lo que puede llevar a retrasos en la atención al cliente y pérdida de información importante.

  * Justificacion 

  - La implementación de una aplicación de Gestión de Clientes ayudará a resolver los problemas identificados y mejorar la eficiencia en la atención al cliente.

  * Alcance  

  - La aplicación cubrirá las funciones básicas de gestión de clientes, registro de pedidos y seguimiento de pedidos.


# Objetivos  
   
  * General  
  - Desarrollar una aplicación de Gestión de Clientes que mejore la eficiencia en la atención al cliente.

  * Especificos 
   
   - Diseñar e implementar la interfaz de usuario.
   - Crear una base de datos SQL Server para almacenar información de clientes y pedidos.
   - Desarrollar funciones de registro de clientes y seguimiento de pedidos.
   - Implementar un sistema de autenticación de usuarios.


# Desarrollo de la Propuesta

# Diagramas  
- Diagramas de Casos de Uso.

![image](https://github.com/UPT-FAING-EPIS/proyecto-unidad-i-grupo-1-ac-jc-jj-jr-jv/assets/90207645/555ba336-52ba-4e3d-8a8d-53260306f8cd)
![image](https://github.com/UPT-FAING-EPIS/proyecto-unidad-i-grupo-1-ac-jc-jj-jr-jv/assets/90207645/65013691-9a54-45c1-a07e-129471687fea)
![image](https://github.com/UPT-FAING-EPIS/proyecto-unidad-i-grupo-1-ac-jc-jj-jr-jv/assets/90207645/f9dafe18-2776-4658-95bf-ff8d6049a3bd)
![image](https://github.com/UPT-FAING-EPIS/proyecto-unidad-i-grupo-1-ac-jc-jj-jr-jv/assets/90207645/52236367-22be-422e-94b0-5387a9d1e1ff)



- Diagrama de Clases.
  ![image](diagramaControladores.png)
  ![image](DTOsDiagram.png)
  ![image](ModelsDiagram.png)
  ![image](ValidationDiagram.png)
  
- Diagrama de Componentes.

# Arquitectura
- Diagrama de Arquitectura
  
![image](Arquitectura.png)

# Diagrama de Base de Datos

   ![image](bddiagrama.png)

# Diagrama de Componentes

   ![image](DiagramaComponentes.jpg)

# Bibliografía


- Acosta, R. (n.d.). Swagger - Cómo documentar servicios Web API de ASP.NET Core. https://www.rafaelacosta.net/Blog/2019/7/8/swagger-c%c3%b3mo-documentar-servicios-web-api-de-aspnet-core? 
      AspxAutoDetectCookieSupport=1
  

# Diccionario de Datos de la Base de Datos Relacional




# Estándar de Programación"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-moana,proyecto,smi-2023-ii-u1-moana,True,406,True,0,False,False,False,"# PROYECTO DE UNIDAD I - MOANA TRACKER-

# Idea:
App de Seguimiento de Salud

# Integrantes: 

- Erick Mauricio Mamani Lima (2020066321)
- Sebastian Airton Cotrina Caceres (2020067569)​
- Josue Amaya Torres (2020067149) ​
- Helbert Andres Condori Loayza (2020067571) ​
- Diego Andre Aranda Reyes (2019063855)
  
# Tecnologia: Maui, python, SupaBase, Docker , Github Actions, MVVM, CI/CD, AI, RESTFUL, XCODE"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u1-grupo-2-jc-es-ic-mll-ft,proyecto,2023-ii-bdii-u1-grupo-2-jc-es-ic-mll-ft,True,1714,False,0,False,False,True,"Actividad Nº1
| Compra de Pasajes   | 
|---------------------|
| Erick Salinas       | 
| Joel Ccalli         | 
| Fiorela Ticahuanca  | 
| Marjorie Llantay    | 
| Ivan Casilla        | 

Actividad Nº2
| Lenguaje a utilizar | Base de Datos a Utilizar | Utilizar OR/M | Dockerfile Funcional | Documentación técnica en repositorio de Github|  
|---------------------|--------------------------|---------------|----------------------|-----------------------------------------------|
| PHP                 | PostgreSQL               | OR            | Docker               |              Documentación en Formato.MD      |

| Casos de Uso - Compra de Pasajes               | Asignado para:              |
|------------------------------------------------|-----------------------------|
| 1.-Registro de Compra de Pasaje                | 1.-Erick Salinas            |
| 2.-Búsqueda de Rutas y Precios                 | 2.-Joel Ccalli              |
| 3.-Generación de Boletos Electrónicos          | 3.-Marjorie Llantay         |
| 4.-Emisión de Tarjeta de Embarque              | 4.-Joel Ccalli              |
| x5.-Aplicación de Impuestos y Tasas            | 5.-                         | 
| 6.-Registro de Preferencias de Asiento         | 6.-                         | 
| 7.-Envío de Confirmaciones por SMS             | 7.-                         | 
| 8.-Gestión de Equipaje Adicional               | 8.-                         | 
| x9.-Registros de Pasajeros Frecuentes          | 9.-                         | 
| 10.-Seguimiento de Historial de Compra         | 10.-                        | 










](https://classroom.github.com/online_ide?assignment_repo_id=11601045&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-appcrafters,proyecto,smi-2023-ii-u1-appcrafters,True,648,False,3,False,False,True,"## INTEGRANTES

- Chambilla Mardínez, Renato Eduardo - 2020066918.<br>
- Corrales Solis, Moisés Alessandro - 2020067579.<br>
- Medina López, Marcelo José - 2020066917.<br>
- Valle Bustamante, Gustavo Alonso - 2020066916.<br>
- Viveros Blanco, Farley Rodrigo Eduardo - 2020066896<br>

## PROYECTO : STREAMFY

- Streamfy va a hacer un aplicacion de musica donde podras escuchar musica sin comerciales y tendra una interfaz facil de manejar para el usuario.
  
## HERRAMIENTAS

| SOFTWARE  | 
| ------------- |
|Visual Studio Community con MAUI
|Plataforma de Nube
|Herramientas de Programación y Depuración
|Herramientas para Desarrollo Móvil
|GitHub"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u1-gestion-de-viajes,proyecto,2023-ii-bdii-u1-gestion-de-viajes,True,315,False,0,False,False,True,"](https://classroom.github.com/online_ide?assignment_repo_id=11630121&assignment_repo_type=AssignmentRepo)

# GRUPO GENTION DE VIAJES


| Integrantes |
|----------|
| JUSTIN ZINEDINE ZEVALLOS PURCA    |
| MAYNER ANAHUA COAQUIRA    |
| ...   |


| LENGUAJE | BASE DATOS |
|----------|----------|
| PHP    | MYSQL   |"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u1-gestion-de-usuario,proyecto,2023-ii-bdii-u1-gestion-de-usuario,True,447,False,0,False,False,True,"](https://classroom.github.com/a/aGXEgyCG)
](https://classroom.github.com/online_ide?assignment_repo_id=11630158&assignment_repo_type=AssignmentRepo)

---------------GRUPO DE USUARIO-------------

|      INTEGRANTES      |
|-------------|
|  LUIGUI NINA VARGAS |
|    SEBASTIAN ARCE  |
| REYNALDO CHAMBE TORRES |
|TOMAS YOEL CONDORI VARGAS |   
|ANTONY CHATA CHOQUE | 

|      BASE DE DATOS      |
|-------------|
|  MYSQL |

| LENGUAJE |
|PYTHON|"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u1-los-uchiha-boys,proyecto,2023-ii-bdii-u1-los-uchiha-boys,True,149,False,0,False,False,False,"](https://classroom.github.com/a/aGXEgyCG)
](https://classroom.github.com/online_ide?assignment_repo_id=11630192&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-mauiteam,proyecto,smi-2023-ii-u1-mauiteam,True,377,True,5,False,False,False,"# MangaVerse
## Integrantes:
- Josue Villanueva Yucra
- Arnold Cutipa Machaca
- Rodrigo Lira Alvarez
- Rodrigo De la Cruz Choque
- JuanJose Perez Vizcarra
## Herramientas
- VisualCode
## Tecnologia
- Maui
## Arquitectura
- MVVM
## Prototipo
https://mockitt.wondershare.com/proto/4vqPBAlOs19t82EQNwW6uv/sharing?view_mode=device&screen=rbpTqNJqlQ3FY6ydE&canvasId=rcTqNJqlRgMEzFAl"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla,proyecto,smi-2023-ii-u1-brawlhalla,True,5969,False,16,True,False,True,"Integrantes:

- Ronal Daniel Lupaca Mamani
- Rene Manuel Poma Manchego
- Victor Eleazar Aguilar Pinto
- Jhon Romario Poma Chura
- Oswaldo Chino Conde

# Creación de una Aplicación Móvil para la Gestión de Cuadros de Liga Deportivos con .NET MAUI.

## Antecedentes o introducción
    * Este proyecto se enfoca en desarrollar una aplicación móvil para gestionar torneos deportivos y eSports. Surge debido a la necesidad de mejorar la eficiencia en la organización de eventos deportivos, como la programación de partidos y la comunicación entre participantes. La aplicación tiene como objetivo simplificar y agilizar estas tareas, mejorando la experiencia de
    los involucrados.
## Titulo
    * ""Creación de una Aplicación Móvil para la Gestión de Cuadros de Liga Deportivos con .NET MAUI.""
## Autores
| Nombres                       | Cargo             |
| ----------------------------- | ----------------- |
| Rene Manuel Poma Mnachego     | Analista de datos |
| Daniel Roldan Lupaca Mamani   | Documentador      |
| Victor Eleazan Aguilar Pinto  | Programador       |
| Jhon Romario Poma Chura       | Programador       |
| Chino Conde                   | Analista          |

## Planteamiento del problema
### Problema
    * Gestión ineficiente de horarios y programación de partidos: En muchas ligas deportivas, los organizadores, equipos y jugadores a menudo enfrentan problemas para coordinar y programar los partidos de manera eficiente. Esto puede dar lugar a conflictos de horarios, cancelaciones de último minuto y confusión general en cuanto a cuándo y dónde se llevarán a cabo los partidos. La falta de una herramienta eficaz para la programación de partidos puede afectar negativamente la experiencia de los participantes y seguidores de la liga.
### Justificación
    * Una aplicación móvil podría simplificar y agilizar la gestión de las ligas deportivas, mejorando la experiencia tanto para los administradores como para los participantes al proporcionar una plataforma que permita a los organizadores de la liga y a los equipos coordinar los horarios de los partidos de manera sencilla y eficiente. Esto incluiría funciones para verificar la disponibilidad de los campos de juego, asignar árbitros si es necesario y garantizar que los horarios de los partidos se comuniquen claramente a todos los involucrados. Al resolver este desafío, tu aplicación podría mejorar significativamente la gestión de las ligas deportivas y aumentar la satisfacción de los participantes.
### Alcance
    * Registro de usuarios:
        - Crear cuentas de usuarios para administradores de ligas, equipos y jugadores.
        - Iniciar sesión y autenticación segura.
    * Creación y Gestión de Ligas:
        - Permitir a los administradores de ligas crear nuevas ligas deportivas.
        - Configurar detalles de la liga, como nombre, deporte, reglas, fechas de inicio y finalización, y ubicación.
    * Gestión de Equipos:
        - Permitir a los equipos registrarse en una liga.
        - Gestionar la información del equipo, incluyendo nombre, logotipo y lista de jugadores.
    * Programación de Partidos:
        - Facilitar la programación de partidos, incluyendo la selección de fechas y
        horarios disponibles.
        - Asignar árbitros y campos de juego si es necesario.
    * Seguimiento de Partidos:
        - Registrar los resultados de los partidos.
        - Llevar un registro de las tarjetas de juego y sanciones.
    * Interfaz de Usuario Intuitiva:
        - Diseñar una interfaz de usuario atractiva y fácil de usar para todas las partes interesadas.
    * Seguridad y Privacidad:
        - Garantizar la seguridad de los datos de los usuarios y la privacidad de la información personal.
    * Pruebas y Depuración:
        - Realizar pruebas exhaustivas para identificar y solucionar errores antes del lanzamiento.
## Objetivos

### General
    * Facilitar la organización y gestión eficiente de ligas deportivas (sports-eSports) , mejorando la experiencia de los administradores, equipos y jugadores, al proporcionar una plataforma integral para la programación de partidos, el seguimiento de resultados y la comunicación efectiva.
### Específicos
    1. Diseñar una interfaz de usuario intuitiva para la aplicación.
    2.  Implementar un sistema de gestión de horarios y resultados de partidos.
    3. Integrar una base de datos para almacenar la información de las ligas deportivas.
    4. Facilitar la administración de equipos y jugadores.
    5. Probar y depurar la aplicación para garantizar su funcionamiento óptimo.
## Desarrollo de la propuesta
### Diagramas de Casos de Uso
![casos de uso](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/1a63dc73-3212-4d43-95a1-6e7dc8a3f627)

### Diagrama de Clases
![diagrama de clases](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/a94f8f59-2813-4103-a83a-b4c7afe09712)

### Arquitectura
![arquitectura](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/718c3e65-84d8-4c54-a543-a30ec786359f)

### Diagrama de Base de Datos
![base de datos](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/495cbd38-74b9-484e-840a-3d8cc6e9c27d)

## Bibliografia

* ¿Qué es .NET MAUI? - .NET MAUI. (s/f). Microsoft.com. Recuperado el 7 de octubre de 2023, de
https://learn.microsoft.com/es-es/dotnet/maui/what-is-maui

* v-trmyl. (s/f). Enlazar bibliotecas nativas para .NET MAUI. Microsoft.com. Recuperado el 9 de octubre de 2023, de https://learn.microsoft.com/es-es/events/dotnetconf-focus-on-maui/bi nding-native-libraries-for-dotnet-maui
* v-trmyl. (s/f). Enlazar bibliotecas nativas para .NET MAUI. Microsoft.com. Recuperado el 9 de octubre de 2023, de https://learn.microsoft.com/es-es/events/dotnetconf-focus-on-maui/bi nding-native-libraries-for-dotnet-maui
* Universidad Israel. (2021, octubre 11). MAUI .Net. UISRAEL. https://www.uisrael.edu.ec/maui-net/"
UPT-FAING-EPIS/proyecto-cps-2023-ii-u1-proyecto_calidadu1_grupal_valverde,proyecto,cps-2023-ii-u1-proyecto_calidadu1_grupal_valverde,True,149,False,0,False,False,False,"](https://classroom.github.com/a/bQLqkafx)
](https://classroom.github.com/online_ide?assignment_repo_id=12054540&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto-cps-2023-ii-u1-sistema-de-gestion-hotelera,proyecto,cps-2023-ii-u1-sistema-de-gestion-hotelera,True,149,False,0,False,False,False,"](https://classroom.github.com/a/bQLqkafx)
](https://classroom.github.com/online_ide?assignment_repo_id=12055708&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-grupogym,proyecto,smi-2023-ii-u2-grupogym,True,149,False,0,False,False,False,"](https://classroom.github.com/a/y1LgyCES)
](https://classroom.github.com/online_ide?assignment_repo_id=12764105&assignment_repo_type=AssignmentRepo)"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-streamfy_team,proyecto,smi-2023-ii-u2-streamfy_team,True,648,False,3,False,False,True,"## INTEGRANTES

- Chambilla Mardínez, Renato Eduardo - 2020066918.<br>
- Corrales Solis, Moisés Alessandro - 2020067579.<br>
- Medina López, Marcelo José - 2020066917.<br>
- Valle Bustamante, Gustavo Alonso - 2020066916.<br>
- Viveros Blanco, Farley Rodrigo Eduardo - 2020066896<br>

## PROYECTO : STREAMFY

- Streamfy va a hacer un aplicacion de musica donde podras escuchar musica sin comerciales y tendra una interfaz facil de manejar para el usuario.
  
## HERRAMIENTAS

| SOFTWARE  | 
| ------------- |
|Visual Studio Community con MAUI
|Plataforma de Nube
|Herramientas de Programación y Depuración
|Herramientas para Desarrollo Móvil
|GitHub"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-moanatracker,proyecto,smi-2023-ii-u2-moanatracker,True,1056,True,1,True,False,False,"# PROYECTO DE UNIDAD III - MOANA TRACKER

# Idea: 
App de Seguimiento de Salud

# Integrantes: 

- Erick Mauricio Mamani Lima (2020066321)
- Sebastian Airton Cotrina Caceres (2020067569)​
- Josue Amaya Torres (2020067149) ​
- Helbert Andres Condori Loayza (2020067571) ​
- Diego Andre Aranda Reyes (2019063855)
  
## Tecnologia: Maui, python, SupaBase, Docker , Github Actions, MVVM, CI/CD, AI, RESTFUL, XCODE
![image](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-moanatracker/assets/102819429/cdc1ab15-3d7d-481b-9b07-eb58df3245c4)

![image](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-moanatracker/assets/102819429/884883b5-da0a-4e0a-b8b3-1d0f083dfa01)

![image](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-moanatracker/assets/102819429/27bc01f3-904d-49a2-a774-7a18f61a0de7)

![image](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-moanatracker/assets/102819429/84187667-7a4e-434f-8a02-a9a40bad3854)

#Link del drive :
https://drive.google.com/drive/folders/1QdFxOSEX1vE0k09Evg2tZ6GLJ4aJuuRD?usp=sharing"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario,proyecto,2023-ii-bdii-u3-gestion-de-usuario,True,8237,False,20,True,False,False,"](https://classroom.github.com/a/FQNqnBju)
](https://classroom.github.com/online_ide?assignment_repo_id=12894315&assignment_repo_type=AssignmentRepo)

# Desarrollo de un Sistema de Gestión de Usuario con Redis y Flask

Este repositorio contiene el código fuente y la documentación del proyecto ""Desarrollo de un Sistema de Gestión de Usuario en el dominio Configuración usando Base de Datos no relacional Redis en el lenguaje PYTHON"", desarrollado como parte del curso de Base de Datos II en la Universidad Privada de Tacna.

## Resumen

Este proyecto se propone desarrollar una API eficiente para la gestión de usuarios, haciendo uso de tecnologías contemporáneas como Redis y MySQL para almacenar datos no relacionales y relacionales, respectivamente. La implementación se lleva a cabo con Flask y Python, integrando Amazon Key Management Services (KMS) para asegurar una gestión segura de claves. La API permitirá a los administradores definir roles y permisos, simplificando la administración de cuentas de usuario y optimizando la eficiencia del sistema. Se aborda la falta de una solución integral para la gestión de usuarios, y se busca ofrecer una solución completa y moderna que garantice robustez y seguridad.

## Abstract

This project aims to develop an efficient API for user management, making use of contemporary technologies such as Redis and MySQL to store non-relational and relational data, respectively. The implementation is carried out with Flask and Python, integrating Amazon Key Management Services (KMS) to ensure secure key management. The API will allow administrators to define roles and permissions, simplifying user account management and optimizing system efficiency. The lack of a comprehensive solution for user management is addressed, and the aim is to offer a complete and modern solution that guarantees robustness and security.

## 1. Introducción

Este proyecto tiene como objetivo principal desarrollar una API eficiente para la gestión de usuarios, utilizando tecnologías contemporáneas como bases de datos no relacionales, en este caso, Redis, y bases de datos relacionales, específicamente MySQL, junto con el servicio de gestión de claves Amazon Key Management Services (KMS). La implementación se lleva a cabo mediante el framework Flask en conjunto con el lenguaje de programación Python.
En este contexto, la API permitirá a los administradores definir roles y permisos, simplificando la administración de cuentas de usuario. La combinación de Redis para el almacenamiento de datos no relacionales, MySQL para la gestión de datos relacionales y Amazon KMS para la gestión segura de claves contribuirá a la robustez y seguridad del sistema. Los principios de Flask facilitarán el desarrollo ágil y la creación de endpoints eficientes.
Este proyecto busca ofrecer una solución completa y moderna para la gestión de usuarios a través de una API, aprovechando la sinergia entre Redis, MySQL, Amazon KMS, Flask y Python en el proceso.	

## 2. Título

 ""Desarrollo de un Sistema de Gestión de Usuario en el dominio Configuración""

## 3. Autores

- Chambe Torres, Edgard Reynaldo
- Nina Vargas, Luigui Augusto
- Condori Vargas, Tomas Yoel
- Sebastian Arce Bracamonte

## 4. Planteamiento del Problema

### 4.1 Problema

El problema abordado en este proyecto es la falta de una solución integral puede llevar a la ineficiencia en la administración de cuentas de usuario y a la falta de control sobre los recursos y funcionalidades del sistema.

### 4.2 Justificación

Este proyecto surge de la necesidad de desarrollar una API robusta para la gestión de usuarios. Se utiliza el framework Flask con Python, combinando bases de datos no relacionales como Redis y bases de datos relacionales como MySQL. Además, se implementa Amazon Key Management Services (KMS) para asegurar una gestión segura de claves. La integración de estas tecnologías busca ofrecer una solución completa y moderna que optimice la eficiencia en el manejo de datos y garantice la seguridad en la gestión de claves, abordando así los requisitos esenciales del proyecto.

### 4.3 Alcance

El alcance de este proyecto se extiende al desarrollo de una API integral para la gestión de usuarios mediante el uso de Flask y Python. Se incluirá la implementación segura de claves a través de Amazon KMS. El sistema final, respaldado por esta API, posibilitará a los usuarios, ya sean administradores o usuarios regulares, acceder a perfiles y visualizar listas de usuarios. Además, se contemplará la capacidad de gestionar roles y permisos para los administradores, proporcionando una funcionalidad más completa y adaptada a las necesidades de la gestión de usuarios.

## 5. Objetivos

### 5.1 General

El objetivo general de este proyecto es desarrollar una API eficiente para la gestión de usuarios, utilizando estas tecnologías contemporáneas brindando una solución completa para la administración de cuentas de usuario y a la vez seguridad en la gestión de claves.

### 5.2 Específicos

- Utilizar Redis como base de datos no relacional para el  almacenamiento eficiente de datos de usuario.
- Integrar Amazon KMS para una gestión segura de claves, garantizando la seguridad de la información.
- Simplificar las tareas administrativas mediante procesos automatizados. 

## 7. Desarrollo de la Propuesta

### 7.1 Caso de Uso API

![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/33a5955c-d04b-43bc-bc6e-d1806e02aee0)

### 7.2 Diagrama de Clases

![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/d2e5da53-a921-49d1-8380-4d09f36b0744)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/11bf6501-437c-4901-9803-8bfdcbf47732)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/d25c42ed-5158-4569-b031-a99e5ebd41d5)

### 7.3 Diagrama de Arquitectura

![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/f5072a57-ee6b-49ed-86e4-4b4d97eae730)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/243e7c66-e1f0-444e-bfed-463fe9f369e5)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/b8e185bd-8732-4d66-8dfd-61e436426268)

### 7.4 Diagrama de Componentes

![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/d45fd962-2f9b-41ad-b989-a3ef7680905a)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/425de965-37fe-4d0c-a6a6-e29ab72d4947)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/775c6fac-76e3-4e87-80c1-d09eeb45ab00)

### 7.5 Diagrama de Base de Datos

![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/55ff80dc-d0f7-4184-b582-13e9bd48d7b9)
![image](https://github.com/UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-usuario/assets/102675967/1fe87c6c-bd4b-4e43-bcd9-bd2530c4243f)

## 8. Concluciones

En conclusión, la integración de Flask, Redis y MySQL en la creación de una API para la gestión de usuarios ofrece una solución equilibrada y eficiente. 
Flask proporciona agilidad en el desarrollo, Redis garantiza un almacenamiento rápido y versátil para datos no relacionales, y MySQL aporta estructura para datos relacionales. 
La inclusión de Amazon KMS refuerza la seguridad en la gestión de claves. En conjunto, estas tecnologías forman una API completa y moderna que cumple con los requisitos de rendimiento, seguridad y eficiencia en la gestión de usuarios.	


## 9. Bibliografía

https://codigofacilito.com/articulos/orm-explicacion 

https://redis.io/docs/connect/clients/python/

https://redis-py.readthedocs.io/en/stable/		

https://github.com/features/actions

https://dev.to/msnmongare/title-building-a-food-api-with-django-and-mysql-5b12

https://docs.docker.com/engine/api/

https://docs.aws.amazon.com/es_es/prescriptive-guidance/latest/patterns/run-an-asp-net-core-web-api-docker-container-on-an-amazon-ec2-linux-instance.html"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-mangaverse,proyecto,smi-2023-ii-u2-mangaverse,True,377,True,5,False,False,False,"# MangaVerse
## Integrantes:
- Josue Villanueva Yucra
- Arnold Cutipa Machaca
- Rodrigo Lira Alvarez
- Rodrigo De la Cruz Choque
- JuanJose Perez Vizcarra
## Herramientas
- VisualCode
## Tecnologia
- Maui
## Arquitectura
- MVVM
## Prototipo
https://mockitt.wondershare.com/proto/4vqPBAlOs19t82EQNwW6uv/sharing?view_mode=device&screen=rbpTqNJqlQ3FY6ydE&canvasId=rcTqNJqlRgMEzFAl"
UPT-FAING-EPIS/proyecto-smi-2023-ii-u2-stageapp_brawlhalla,proyecto,smi-2023-ii-u2-stageapp_brawlhalla,True,5963,False,16,True,False,True,"Integrantes:

- Ronal Daniel Lupaca Mamani
- Rene Manuel Poma Manchego
- Victor Eleazar Aguilar Pinto
- Jhon Romario Poma Chura
- Oswaldo Chino Conde

# Creación de una Aplicación Móvil para la Gestión de Cuadros de Liga Deportivos con .NET MAUI.

## Antecedentes o introducción
    * Este proyecto se enfoca en desarrollar una aplicación móvil para gestionar torneos deportivos y eSports. Surge debido a la necesidad de mejorar la eficiencia en la organización de eventos deportivos, como la programación de partidos y la comunicación entre participantes. La aplicación tiene como objetivo simplificar y agilizar estas tareas, mejorando la experiencia de
    los involucrados.
## Titulo
    * ""Creación de una Aplicación Móvil para la Gestión de Cuadros de Liga Deportivos con .NET MAUI.""
## Autores
| Nombres                       | Cargo             |
| ----------------------------- | ----------------- |
| Rene Manuel Poma Mnachego     | Programador |
| Daniel Roldan Lupaca Mamani   | Documentador      |
| Victor Eleazan Aguilar Pinto  | Programador       |
| Jhon Romario Poma Chura       | Programador       |
| Chino Conde                   | Analista          |

## Planteamiento del problema
### Problema
    * Gestión ineficiente de horarios y programación de partidos: En muchas ligas deportivas, los organizadores, equipos y jugadores a menudo enfrentan problemas para coordinar y programar los partidos de manera eficiente. Esto puede dar lugar a conflictos de horarios, cancelaciones de último minuto y confusión general en cuanto a cuándo y dónde se llevarán a cabo los partidos. La falta de una herramienta eficaz para la programación de partidos puede afectar negativamente la experiencia de los participantes y seguidores de la liga.
### Justificación
    * Una aplicación móvil podría simplificar y agilizar la gestión de las ligas deportivas, mejorando la experiencia tanto para los administradores como para los participantes al proporcionar una plataforma que permita a los organizadores de la liga y a los equipos coordinar los horarios de los partidos de manera sencilla y eficiente. Esto incluiría funciones para verificar la disponibilidad de los campos de juego, asignar árbitros si es necesario y garantizar que los horarios de los partidos se comuniquen claramente a todos los involucrados. Al resolver este desafío, tu aplicación podría mejorar significativamente la gestión de las ligas deportivas y aumentar la satisfacción de los participantes.
### Alcance
    * Registro de usuarios:
        - Crear cuentas de usuarios para administradores de ligas, equipos y jugadores.
        - Iniciar sesión y autenticación segura.
    * Creación y Gestión de Ligas:
        - Permitir a los administradores de ligas crear nuevas ligas deportivas.
        - Configurar detalles de la liga, como nombre, deporte, reglas, fechas de inicio y finalización, y ubicación.
    * Gestión de Equipos:
        - Permitir a los equipos registrarse en una liga.
        - Gestionar la información del equipo, incluyendo nombre, logotipo y lista de jugadores.
    * Programación de Partidos:
        - Facilitar la programación de partidos, incluyendo la selección de fechas y
        horarios disponibles.
        - Asignar árbitros y campos de juego si es necesario.
    * Seguimiento de Partidos:
        - Registrar los resultados de los partidos.
        - Llevar un registro de las tarjetas de juego y sanciones.
    * Interfaz de Usuario Intuitiva:
        - Diseñar una interfaz de usuario atractiva y fácil de usar para todas las partes interesadas.
    * Seguridad y Privacidad:
        - Garantizar la seguridad de los datos de los usuarios y la privacidad de la información personal.
    * Pruebas y Depuración:
        - Realizar pruebas exhaustivas para identificar y solucionar errores antes del lanzamiento.
## Objetivos

### General
    * Facilitar la organización y gestión eficiente de ligas deportivas (sports-eSports) , mejorando la experiencia de los administradores, equipos y jugadores, al proporcionar una plataforma integral para la programación de partidos, el seguimiento de resultados y la comunicación efectiva.
### Específicos
    1. Diseñar una interfaz de usuario intuitiva para la aplicación.
    2.  Implementar un sistema de gestión de horarios y resultados de partidos.
    3. Integrar una base de datos para almacenar la información de las ligas deportivas.
    4. Facilitar la administración de equipos y jugadores.
    5. Probar y depurar la aplicación para garantizar su funcionamiento óptimo.
## Desarrollo de la propuesta
### Diagramas de Casos de Uso
![casos de uso](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/1a63dc73-3212-4d43-95a1-6e7dc8a3f627)

### Diagrama de Clases
![diagrama de clases](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/a94f8f59-2813-4103-a83a-b4c7afe09712)

### Arquitectura
![arquitectura](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/718c3e65-84d8-4c54-a543-a30ec786359f)

### Diagrama de Base de Datos
![base de datos](https://github.com/UPT-FAING-EPIS/proyecto-smi-2023-ii-u1-brawlhalla/assets/81704042/495cbd38-74b9-484e-840a-3d8cc6e9c27d)

## Bibliografia

* ¿Qué es .NET MAUI? - .NET MAUI. (s/f). Microsoft.com. Recuperado el 7 de octubre de 2023, de
https://learn.microsoft.com/es-es/dotnet/maui/what-is-maui

* v-trmyl. (s/f). Enlazar bibliotecas nativas para .NET MAUI. Microsoft.com. Recuperado el 9 de octubre de 2023, de https://learn.microsoft.com/es-es/events/dotnetconf-focus-on-maui/bi nding-native-libraries-for-dotnet-maui
* v-trmyl. (s/f). Enlazar bibliotecas nativas para .NET MAUI. Microsoft.com. Recuperado el 9 de octubre de 2023, de https://learn.microsoft.com/es-es/events/dotnetconf-focus-on-maui/bi nding-native-libraries-for-dotnet-maui
* Universidad Israel. (2021, octubre 11). MAUI .Net. UISRAEL. https://www.uisrael.edu.ec/maui-net/"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-gestion-de-viajes,proyecto,2023-ii-bdii-u3-gestion-de-viajes,True,551,False,0,False,False,True,"](https://classroom.github.com/a/UWDcn9m9)
](https://classroom.github.com/online_ide?assignment_repo_id=12980376&assignment_repo_type=AssignmentRepo)
Actividad Nº1

| Gestion Viajes      |
INTEGRANTES
|---------------------|
| Mayner Anahua       | 
| Yastin Zevallos     | 
| Joel Ccalli         |  
| Erick Salinas       |  

Repositorio con el uso de GitHub Actions y despliegue automatizado a DockerHub:  
https://github.com/MAYnerAC/api-viajes-metricas-u3

Repositorio en DockerHub:  
https://hub.docker.com/r/maynerac/api-viajes-metricas-u3/tags"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-grupo-2-jc-es-ic-mll-ft,proyecto,2023-ii-bdii-u3-grupo-2-jc-es-ic-mll-ft,True,3929,False,10,False,False,False,"](https://classroom.github.com/a/UWDcn9m9)
](https://classroom.github.com/online_ide?assignment_repo_id=13075476&assignment_repo_type=AssignmentRepo)

# API COMPRA DE PASAJES - NOTIFICACIONES

## Resumen 
La empresa de transporte requiere implementar un sistema de envío de
mensajes por correo notificando al cliente cada vez que su registro se realiza con
éxito.
Actualmente cuentan con un sistema de registro de pasajes, y para evitar la
saturación del servicio es que se va a implementar un sistema de envío de
mensajes de correo.
Debido a la gran demanda en la venta de pasajes, se implementará un servicio
intermediario como Amazon SQS el cual gestiona una cola de notificaciones.
El sistema de envío de mensajes leerá las notificaciones en la cola de AWS SQS
e irá enviando mensajes en segundo plano.
## Abstract
The transportation company needs to implement an email messaging system to
notify the customer each time their registration is successfully completed.
Currently, they have a ticket registration system, and to prevent service
saturation, an email messaging system will be implemented. Due to the high
demand in ticket sales, an intermediary service such as Amazon SQS will be
implemented, which manages a notification queue. The messaging system will
read notifications from the AWS SQS queue and send messages in the
background.
## 1. Antecedentes e Introducción
La presente documentación describe el proceso de la implementación de
dos sistemas API REST para el registro de venta de pasajes y el envío de
mensajes por correo, para lo cual se hizo uso de una base de datos no
relacional (couchdb) y de un servicio externo de cola de mensajes
AMAZON SQS.
## 2. Título
“API COMPRA DE PASAJES - NOTIFICACIONES”
## 3. Autores

a. Brant Antony Chata Choque
b. Marjiory Grace Llantay Machaca
c. Fiorela Milady Ticahuanca Cutipa

## 4. Planteamiento del problema
a. Problema:
La empresa de compra de pasajes requiere enviar mensajes por
correo cada vez que un cliente compra un pasaje, sin embargo
debido a la alta demanda de la venta de pasajes, el envío de
mensajes a través del sistema requiere de tiempo para proceso de
envío del correo, tiempo el cual puede perjudicar el flujo normal.
b. Justificación
Para dar solución al problema se implementará segundo sistema
cuya finalidad es el envío de mensajes, este segundo sistema hará
uso de una cola de notificaciones donde se mantendrán en cola los
mensajes por enviar.
c. Alcance
Se implementará una cola de notificaciones con Amazon SQS y un
sistema que estará pendiente de nuevas notificaciones en la cola y
que procesará en envío de los mensajes a los correos de los
clientes.
## 5. Objetivos
a. General
Implementar el envío de mensajes de correo utilizando un servicio
de cola de mensajes
b. Específico
Desarrollar el sistema de envío de mensajes utilizando el servicio
de correo y Amazon SQS para la cola de notificaciones.
## 6. Desarrollo de la Propuesta
a. Diagrama de casos de uso
b. Diagrama de Clases
c. Diagrama de Componentes
d. Arquitectura
La arquitectura es cliente servidor con consumo de API REST
e. Diagrama de base de datos
IMPORTANTE: Para una base de datos no relacional no se consideran
las relaciones debido a que un documento puede tener otros
documentos internos, en el caso de este sistema, el cliente está
integrado dentro del registro de COMPRA DE PASAJES.

## 7. Bibliografía
a. Instalación de couchDB en Ubuntu
https://docs.couchdb.org/en/stable/install/index.html
b. Uso de API REST de CouchDB
https://docs.couchdb.org/en/stable/api/index.html
c. Paquete Simple SQS para laravel
https://github.com/tedicela/sqs-simple
d. Generación de comandos en laravel
https://laravel.com/docs/10.x/artisan#generating-commands
## 8. Anexos
Para el desarrollo de los sistemas se requirió lo siguiente:
a. Sistema Operativo Ubuntu 22.04.03 LTS
b. Apache CouchDB
c. Amazon SQS
d. Laravel 10
e. Servidor Web Apache
f. Lenguaje de programación PHP v8"
UPT-FAING-EPIS/proyecto-2023-ii-bdii-u3-grupo-1-ac-jc-jj-jr-jv,proyecto,2023-ii-bdii-u3-grupo-1-ac-jc-jj-jr-jv,True,552,False,4,True,False,False,"](https://classroom.github.com/a/UWDcn9m9)
](https://classroom.github.com/online_ide?assignment_repo_id=13224783&assignment_repo_type=AssignmentRepo)


# INTEGRACIÓN DE CLIENTES, USUARIOS Y VIAJES A BITACORA, HACIENDO UN DESPLIEGUE CON GITHUB ACTIONS

## Diagrama de arquitectura
![arquitectura](arq.png)

## Diagrama de Componentes BITACORA

![compo](diagramacomponentesbitacora.png)

## Diagrama de Componentes Viajes

![compo](diagramacomponentesgestionviajes.png)

## Diagrama de Componentes Cliente API

![compo](diagramacomponentesclienteapi.png)"
UPT-FAING-EPIS/proyecto-si784-2024-i-u1-tgu1_briceno_lopez_cuadros_castaneda,proyecto,si784-2024-i-u1-tgu1_briceno_lopez_cuadros_castaneda,True,4645,True,17,False,True,False,"# Sistema de Gestión de Inventario en PHP

## Resumen

En un entorno donde la eficiencia y precisión en el control de inventario son fundamentales para el éxito de una organización, este proyecto se centra en desarrollar un sistema de gestión de inventario en PHP que permite agregar usuarios, categorías y productos, así como listarlos de manera organizada según las necesidades específicas de la empresa. El objetivo principal es mejorar la eficiencia operativa y la toma de decisiones informadas a través de la automatización y organización del proceso de gestión de inventario.

## Antecedentes o introducción

En el contexto actual, se ha implementado con éxito un sistema de gestión de inventario en PHP que permite agregar usuarios, categorías y productos, así como listarlos de manera organizada según las necesidades específicas de la empresa. Este sistema ha mejorado significativamente la eficiencia operativa y la toma de decisiones informadas en relación con el inventario.

## Planteamiento del problema

### Problema

Durante la evaluación exhaustiva de nuestro sistema actual de gestión de inventario, hemos identificado varios problemas críticos que están afectando negativamente nuestra eficiencia operativa y nuestra capacidad para tomar decisiones informadas:

- Ineficiencia y pérdida de tiempo en el registro y seguimiento del inventario.
- Probabilidad de errores humanos debido a métodos manuales.
- Falta de visibilidad y control centralizado del inventario.
- Dificultad para análisis y generación de informes sobre el inventario.

### Justificación

La implementación de un sistema automatizado y centralizado de gestión de inventario se justifica por varios motivos fundamentales que abordan directamente los problemas identificados y benefician a la organización en múltiples aspectos:

- Optimización de Procesos y Reducción de Errores.
- Mejora en la Toma de Decisiones y Gestión de Recursos.
- Ventaja Competitiva y Experiencia Mejorada para Clientes.
- Eficiencia en la Toma de Decisiones y Análisis Estratégico.

## Objetivos

### General

Desarrollar e implementar un sistema de gestión de inventario en PHP que permita gestionar eficientemente los registros de usuarios, categorías, productos y movimientos de inventario, con el fin de mejorar la eficiencia operativa y la toma de decisiones informadas dentro de la organización.

### Específicos

- Diseñar una Interfaz de Usuario Intuitiva.
- Gestión Eficiente de Inventarios.
- Organización y Visualización del Inventario.
- Seguridad y Acceso Controlado.
- Desarrollo de Funcionalidades Específicas.
- Integración con Herramientas de Análisis y Seguridad.
- Pruebas Continuas de Seguridad y Calidad.
- Capacitación y Soporte.

## Referentes teóricos

### Diagramas de Casos de Uso

- Autenticarse
- Registrar Usuario
- Administrar Producto
- Administrar Categoría
- Realizar Consulta SQL


### Diagrama de Clases

```mermaid
classDiagram
    class Usuario {
        -id: int
        -nombre: string
        -apellido: string
        -usuario: string
        -clave: string
        +limpiarCadena(dato: string): string
    }
    class Categoria {
        -id: int
        -nombre: string
        -ubicacion: string
        +limpiarCadena(dato: string): string
    }
    class Producto {
        -id: int
        -codigo: string
        -nombre: string
        -precio: float
        -stock: int
        -foto: string
        +limpiarCadena(dato: string): string
    }
    class BaseDeDatos {
        -conexion: Connection
        +conexion(): Connection
    }

    Usuario --|> BaseDeDatos
    Categoria --|> BaseDeDatos
    Producto --|> BaseDeDatos

    class ControladorBusqueda {
        -modulos: array
        +__construct(modulos: array)
        +iniciarBusqueda(txt: string): void
        +eliminarBusqueda(): void
    }

    ControladorBusqueda --* Usuario
    ControladorBusqueda --* Categoria
    ControladorBusqueda --* Producto
    ControladorBusqueda --|> BaseDeDatos
```


### Diagrama de Componentes y Arquitectura

## Desarrollo de la propuesta

### Tecnología de información

#### SonarSource

- Paso 01: Creación de un repositorio público en GitHub.
- Paso 02: Configuración de SonarCloud para análisis de calidad de código.
- Paso 03: Configuración del repositorio en SonarCloud.
- Paso 04: Selección de la versión anterior del código para análisis.
- Paso 05: Análisis de código realizado por SonarSource.
- Paso 06: Resolución de vulnerabilidades detectadas.

### Metodología, técnicas usadas

#### SonarSource

- Problema en index.php.
- Problema en principal.php.
- Problema en categoria_producto.php.
- Problema en product_img.php."
UPT-FAING-EPIS/proyecto-si784-2024-i-u1-tgu2_cabrera_agreda_meza_ortiz,proyecto,si784-2024-i-u1-tgu2_cabrera_agreda_meza_ortiz,True,947,True,4,False,True,False,"# Proyecto Calidad Unidad II

Este proyecto está configurado para generar reportes de tests tanto de Cucumber como de cobertura de tests unitarios.

## Generar Reportes de Tests

Para generar los reportes de tests, ejecuta el siguiente comando Maven:

```sh
mvn clean test jacoco:report
```
Este comando realizará las siguientes acciones:
1. Limpiará el proyecto.
2. Ejecutará los tests.
3. Generará el reporte de cobertura de código utilizando JaCoCo.

## Ubicación de los Reportes

### Reporte de Tests Unitarios

El reporte de cobertura de los tests unitarios se encuentra en la carpeta `target/site` y puede ser visualizado abriendo el archivo `index.html` en un navegador web.

Ruta: `target/site/index.html`

### Reporte de Tests de Cucumber

El reporte de los tests de Cucumber se encuentra en la carpeta `target` y puede ser visualizado abriendo el archivo `cucumber-reports.html` en un navegador web.

Ruta: `target/cucumber-reports.html`"
UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar,proyecto,si784-2024-i-u1-cps_apaza_paco_lupaca_escobar,True,8429,False,2,True,False,True,"](https://classroom.github.com/a/hdquHjtS)

## **Proyecto de agenda virtual para la I.E.P. Steve Jobs**

Integrantes: 
- Edward Hernan Apaza Mamani  2018060915

- Ronal Daniel Lupaca Mamani  2020067146

- Carlos Andrés Escobar Rejas 2021070016

- Aarón Pedro Paco Ramos 2018000654



Diagrama de Clases

![sadas](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar/assets/112985123/506c3094-d6f4-4aba-b765-f1518e5f54d5)


Diagrama de paquetes

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar/assets/112984449/1d44e525-112b-4449-b576-1629ad5d2ed5)

Diagrama de Casos de Uso

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar/assets/112984449/ccd6d150-5472-4195-a155-09b1bb2c3971)

Diagrama de componentes

![2](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar/assets/112985123/55d1a67c-22f5-45ad-b405-dbd659f3dffa)


Diagrama de despliegue

![Diagrama2](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar/assets/112985123/26b00966-2b8d-45eb-aa8a-c5c1c46e4364)

Diagrama de base de datos

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u1-cps_apaza_paco_lupaca_escobar/assets/112984449/60f830dd-be80-4624-b363-30a630e55f74)


## Escenarios de Caso de Uso (Narrativa)

# Casos de Uso

| Caso de Uso | Crear registro de asistencia /CU-1 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede crear el registro de asistencia. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección asistencias. 2. El sistema muestra la página de asistencias de los salones. 3. El personal cliquea en el botón de crear nuevo registro de asistencias. 4. El sistema muestra la página para crear un nuevo registro de asistencia. 5. El personal selecciona el grado, sección y la fecha y le da al botón de crear registro. 6. El sistema creará un registro con los datos especificados. |
| **Flujo alternativo 1** | Si no se selecciona el grado, la sección o la fecha, el sistema se quedará en la misma página de creación. |
| **Postcondición** | El sistema mostrará los datos de los estudiantes para poder tomar la asistencia. |

---

| Caso de Uso | Visualizar registro de asistencia /CU-2 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede visualizar los registros de asistencia. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección asistencias. 2. El sistema muestra la página de asistencias de los salones. 3. El personal elige la sección en la cual desea visualizar las asistencias. 4. El sistema muestra el registro de asistencias de aquella sección. |
| **Flujo alternativo 1** | Si no se selecciona la sección, el sistema se quedará en la misma página de asistencias. |
| **Postcondición** | El sistema mostrará el registro de asistencia de dicha sección. |

---

| Caso de Uso | Actualizar la asistencia /CU-3 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede actualizar los registros de asistencia. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección asistencias. 2. El sistema muestra la página de asistencias de los salones. 3. El personal elige la sección en la cual desea visualizar las asistencias. 4. El sistema muestra el registro de asistencias de aquella sección. |
| **Flujo alternativo 1** | Si no se selecciona la sección, el sistema se quedará en la misma página de asistencias. |
| **Postcondición** | El sistema mostrará el registro de asistencia de dicha sección. |

---

| Caso de Uso | Crear comunicado /CU-4 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede crear un comunicado institucional. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección comunicados. 2. El sistema muestra la página de comunicados. 3. El personal cliquea en el botón de comunicado institucional. 4. El sistema muestra la página para crear un nuevo comunicado institucional. 5. El personal redacta el comunicado y le da al botón de Publicar. 6. El sistema creará el comunicado institucional. |
| **Flujo alternativo 1** | Si no se redacta ningún comunicado, el sistema se quedará en la misma página de creación. |
| **Postcondición** | El sistema mostrará a todos los usuarios el comunicado que se ha publicado. |

---

| Caso de Uso | Visualizar comunicado /CU-5 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede visualizar los comunicados. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección comunicados. 2. El sistema muestra la página de comunicados. 3. El personal clickea en mostrar todos los comunicados. 4. El sistema muestra todos los comunicados que se han publicado. |
| **Flujo alternativo 1** | Si no se selecciona la opción, el sistema se quedará en la misma página de comunicados. |
| **Postcondición** | El sistema mostrará todos los comunicados. |

---

| Caso de Uso | Actualizar comunicado /CU-6 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede modificar los comunicados. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección comunicados. 2. El sistema muestra la página de comunicados. 3. El personal clickea en mostrar todos los comunicados. 4. El sistema muestra todos los comunicados que se han publicado. 5. El personal selecciona en el botón modificar del comunicado seleccionado. 6. El sistema permite modificar el comunicado seleccionado. |
| **Postcondición** | El sistema modificará el comunicado seleccionado. |

---

| Caso de Uso | Agregar actividad en calendario /CU-7 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede crear una actividad en el calendario. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en el calendario. 2. El sistema muestra la página del calendario. 3. El personal cliquea en el botón de crear actividad. 4. El sistema muestra la página para crear una actividad en el calendario. 5. El personal crea una actividad y le da al botón de Publicar. 6. El sistema publicará la actividad en el calendario. |
| **Flujo alternativo 1** | Si no se redacta ninguna actividad, el sistema se quedará en la misma página de creación. |
| **Postcondición** | El sistema mostrará a todos los usuarios la actividad creada en el calendario. |

---

| Caso de Uso | Visualizar actividades del calendario /CU-8 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede visualizar las actividades en el calendario. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en el calendario. 2. El sistema muestra la página del calendario, con las actividades. |
| **Postcondición** | El sistema mostrará todos los comunicados en el calendario. |

---

| Caso de Uso | Actualizar actividades del calendario /CU-9 |
| --- | --- |
| **Actor** | Personal administrativo |
| **Descripción** | El personal puede modificar las actividades creadas en el calendario. |
| **Precondiciones** | Haber iniciado sesión. |
| **Flujo Normal** | 1. El personal administrativo, estando en la interfaz principal, cliquea en la sección calendario. 2. El sistema muestra la página de actividades del calendario. 3. El personal clickea en mostrar todos las actividades del calendario. 4. El sistema muestra todas las actividades que se han publicado. 5. El personal selecciona en el botón actualizar del comunicado seleccionado. 6. El sistema permite modificar el comunicado seleccionado. |
| **Postcondición** | El sistema modificará el comunicado seleccionado. |"
UPT-FAING-EPIS/proyecto-si784-2024-i-u1-tgu3_hurtado_melendez_paja,proyecto,si784-2024-i-u1-tgu3_hurtado_melendez_paja,True,42,False,0,False,False,False,](https://classroom.github.com/a/hdquHjtS)
UPT-FAING-EPIS/proyecto-si784-2024-i-u1-tgu4_apaza_cutipa__churacutipa_huallpa,proyecto,si784-2024-i-u1-tgu4_apaza_cutipa__churacutipa_huallpa,True,2828,False,0,False,False,False,"<!-- Imagen de cabecera -->
<p align=""center"">
  <img src=""https://i.ibb.co/kH5fr6d/imagen-cabecera.png"" alt=""Imagen de cabecera"" width=""200"">
</p>


<!-- Título -->
<h1 align=""center"">Proyecto ""Need U""</h1>

<!-- Botón de enlace -->
<p align=""center"">
  <a href=""https://classroom.github.com/a/hdquHjtS"">
    <img src=""https://classroom.github.com/assets/deadline-readme-button-24ddc0f5d75046c5622901739e7c5dd533143b0c8e959d652212380cedb1ea36.svg"" alt=""Botón de fecha límite"" width=""200"">
  </a>
</p>

<!-- Descripción del proyecto -->
<p align=""center"">El proyecto ""Need U"" involucra diversos interesados y usuarios, cada uno desempeñando un papel crucial en la ejecución y éxito de las iniciativas voluntarias. Estos interesados y usuarios son esenciales para comprender el contexto y las dinámicas que rodean al proyecto y garantizar que las acciones emprendidas estén alineadas con las necesidades reales de las comunidades beneficiarias.</p>

<!-- Separador -->
<hr>

<!-- Sección de detalles del proyecto -->
<h2 align=""center"">Descripción del Proyecto</h2>

<p align=""center"">El proyecto ""Need U"" se centra en el apoyo y la ayuda a comunidades vulnerables en diferentes aspectos, tales como educación, salud, alimentación, entre otros. Nuestro objetivo principal es proporcionar soluciones sostenibles y efectivas para mejorar la calidad de vida de estas comunidades.</p>

<!-- Sección de interesados y usuarios -->
<h2 align=""center"">Interesados y Usuarios</h2>

<p align=""center"">    
  <strong>Voluntarios:</strong> Personas comprometidas con la causa que contribuyen con su tiempo y habilidades para llevar a cabo las iniciativas del proyecto.<br>
  <strong>Comunidades Beneficiarias:</strong> Personas y grupos que reciben directamente los beneficios y servicios proporcionados por el proyecto. Sus necesidades y opiniones son fundamentales para la planificación y ejecución de las actividades.<br>
  <strong>Patrocinadores:</strong> Organizaciones e individuos que brindan apoyo financiero y recursos para la implementación de proyectos específicos.
</p>

<!-- Sección de contribución -->
<h2 align=""center"">Contribución</h2>

<p align=""center"">¡Estamos abiertos a colaboraciones de todo tipo! Si estás interesado en participar en el proyecto ""Need U"", no dudes en contactarnos. Aceptamos contribuciones en forma de código, ideas, recursos y cualquier otra forma de apoyo que puedas ofrecer.</p>

<!-- Sección de contacto -->
<h2 align=""center"">Contacto</h2>

<p align=""center"">Si tienes alguna pregunta o sugerencia, no dudes en ponerte en contacto con nosotros. Puedes encontrarnos en <a href=""https://example.com"">nuestro sitio web</a> o escribirnos a <a href=""mailto:correo@example.com"">correo@example.com</a>.</p>

<!-- Agradecimiento -->
<p align=""center"">¡Gracias por tu interés en el proyecto ""Need U""!</p>"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-cano_chambilla_jarro_rivera_valverde,proyecto,si885-2024-i-u1-cano_chambilla_jarro_rivera_valverde,True,2366,True,9,True,False,True,"# Integrantes:
| No. | Nombre                     |
|-----|----------------------------|
| 1   | Cano Sucso, Anthony Alexander                 |
| 2   | Chambilla Zuñiga, Josue Abraham |
| 3   | Jarro Cachi, Jose Luis  |
| 4   | Rivera Mendoza, Jhonny   |
| 5   | Valverde Zamora, Jean Pier Elias     |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-cano_chambilla_jarro_rivera_valverde/assets/90207080/e1630f30-5291-4ba8-bf34-60128adfca45)
# Visión y Misión
## Misión

Contribuir al desarrollo de la Región Tacna, mediante la promoción de oportunidades
y la conformación de ambientes de negocios atractivos que faciliten el desarrollo de
actividades económicas, productivas y de servicios con altos niveles de productividad
y competitividad.

## Visión
Ser la zona franca líder en el Perú y en la parte central de América del Sur.

## Objetivos Estratégicos
### Fortalecer y dinamizar el desarrollo de la Zona Franca y la Zona Comercial de Tacna
1. **Modernizar la infraestructura tecnológica**
2. **Mejorar los servicios de los clientes**
3. **Desarrollar nuevos servicios**
4. **Mejorar la estrategia comercial**

### Fortalecer la Gestión interna de ZOFRATACNA
1. **Mejorar la sinergía de Marketing y ventas**
2. **Mejorar la retención de usuarios instalados en la Zona Franca de Tacna**
3. **Implementar proyectos de mejora de infraestructura inmobiliaria**
4. **Mejorar las sinergias de eslabonamientos productivos**

### Impulsar el Desarrollo de la Zona Comercial
1. **Promover el Negocio Electrónico**
2. **Mejorar las capacidades empresariales de los usuarios**
3. **Incrementar las importaciones de origen**

### Potenciar el Sistema ZOFRATACNA
1. **Desarrollar las competencias de la fuerza laboral acorde a las necesidades institucionales**
2. **Optimizar el uso de los recursos financieros**
3. **Mantener y ampliar el uso de estándares internacionales**
4. **Mejorar la cultura organizacional y el clima laboral**
5. **Actualizar el marco normativo del Sistema ZOFRATACNA**
6. **Mejorar el control del ingreso, permanencia y salida de mercancías**
7. **Instruir al usuario del sistema en el marco normativo del comercio exterior**


## Organigrama

![organigrama](zofratacna.png)
![organigrama](orgcom.png)

## Objetivos estratégicos relacionados con sus respectivos Órganos

![sol1](sol1.png)
![sol2](sol2.png)
![sol3](sol3.png)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-ccalli_anahua_zeballos_salinas_paco,proyecto,si885-2024-i-u1-ccalli_anahua_zeballos_salinas_paco,True,1877,False,0,False,False,True,"EMPRESA: 

Hospital Regional Hipólito Unanue TACNA 

MISION:

Somos un Hospital Docente Asistencial de Nivel II-2 que brindamos atención especializada e integral en salud y docencia en servicio de la población de la Región Tacna y los referidos por otras instituciones con respeto, profesionalismo, honestidad, calidad y responsabilidad.

VISION:

Ser un Hospital líder de referencia Nivel III-1 debidamente acreditado nacional e internacionalmente, brindando atención especializada integral de salud, docencia e investigación al màs alto nivel con personal calificado y equipamiento con tecnología de punta a la población regional, macro regional sur e internacional con calidad, calide, respeto y eficiencia.

OBJETIVOS:

Los objetivos estratégicos que persigue el Hospital ""Hipólito Unánue"" de Tacna, están consignados en el R.O.F. vigente y están orientados a responder los siguientes objetivos:

Potenciar la promoción de la salud, prevención, vigilancia y control de riesgos y daños asociados a enfermedades transmisibles y no transmisibles de importancia regional, acorde al nivel de atención.
Garantizar el acceso y la atención integral especializada de salud de la población de alto riesgo, con servicios de calidad, bajo criterios de equidad.
Reducir la morbi-mortalidad infantil, materna, por  enfermedades transmisibles y no transmisibles prevalentes en la región.
Modernizar y reestructurar los procesos admnistrativos y asistenciales.
Desarrollar una política sostenible de desarrollo de recursos humanos involucrados  en acciones de salud hospitalaria.
Promover la investigación biomédica operativa asegurando el respeto a los derechos humanos de los pacientes.



| N° | Integrantes |
|-----------|-----------|
| 1  | Joel Ccalli |
| 2 | Mayner Anahua |
| 3 | Yastin Zeballos |
| 4 | Erick Salinas |
| 5 | Aron Paco |

](https://classroom.github.com/a/4qIAkGT-)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla,proyecto,si885-2024-i-u1-chata_chambe_nina_condori_casilla,True,2056,False,1,True,False,True,"## POLICIA NACIONAL DEL PERÚ - ÁREA DE INSPECTORIA TACNA-AREQUIPA

| Nombre                |
|-----------------------|
| Condori Vargas, Tomas |
| Nina Vargas, Luigui   |
| Chambe Torres, Edgard |
| Chata Choque, Brant   |
| Casilla Maquera, Ivan |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla/assets/90207441/496b28fd-7f96-4760-8e43-754bc62c0ba9)

VISION:

Consolidarnos como el órgano de control de la Policía Nacional del Perú que administre el comportamiento del personal policial con disciplina y autoridad, de acuerdo a principios y valores éticos, que promuevan el cambio a fin de conseguir los objetivos estratégicos de la PNP y básicamente cumplir la misión constitucional.


MISION:

Preservar y controlar el mantenimiento de la disciplina, imagen, prestigio y calidad del servicio policial con procedimientos oportunos, transparentes, efectivos y diligentes, promoviendo investigaciones disciplinarias que permitan imponer sanciones justas e impulsar inspecciones de control de los servicios en el marco de una gestión pública moderna.


OBJETIVO

PRIMER OBJETIVO: Cumplimiento normativo y legal: Garantizar que todas las actividades y operaciones de la organización cumplan con las leyes, regulaciones y normativas aplicables en el Perú.

SEGUNDO OBJETIVO: Coordinar evaluaciones a través de informes de auditoría elaborados por entidades especializadas, para garantizar el cumplimiento de normativas y buenas prácticas, fortaleciendo la transparencia y eficiencia institucional.

TERCER OBJETIVO: Garantizar el cumplimiento oportuno de las denuncias presentadas, asegurando que se diligencien dentro del plazo establecido y se siga el debido procedimiento, con el fin de fortalecer la transparencia y eficiencia del sistema de justicia.

CUARTO OBJETIVO: Supervisar y verificar los servicios policiales en la region y asegurar el cumplimiento de los estándares de calidad, ética y profesionalismo, contribuyendo así a fortalecer la confianza y seguridad ciudadana en la labor policial."
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-ticahuanca_maltrain_llantay_arce,proyecto,si885-2024-i-u1-ticahuanca_maltrain_llantay_arce,True,2573,True,5,True,False,False,"# ***Gobierno Regional de Tacna***

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-ticahuanca_maltrain_llantay_arce/assets/102675967/cf343f7b-4dd7-42d9-b30a-6ef07b9f88ed)

## **Misión:**

Promover el desarrollo integral y sostenible de la región Tacna con una gestión transparente, competitiva y a favor de la identidad cultural.

## **Visión:**

Una Tacna con identidad cultural, competitiva, sostenible y ciudadanos felices.

## **Objetivos:**

* Garantizar el ejercicio pleno de los derechos humanos y la dignidad de las personas, con inclusión social.
* Mejorar la calidad ambiental.
* Brindar servicios de calidad en condiciones equitativas y sostenibles.
* Desarrollar una gestión pública de calidad orientada en el ciudadano.
* Fortalecer el sistema integrado de seguridad ciudadana.
* Mejorar los niveles de competitividad territorial.
* Mejorar y ampliar la infraestructura de soporte para la producción.
* Incrementar la disponibilidad y calidad del recurso hídrico.
* Reducir la vulnerabilidad territorial ante el riesgo de desastres.

## **Objetivo Estratégico Institucional**

  * OBJETIVO NACIONAL
    - Es la descripción del propósito a ser alcanzado a nivel nacional, es establecido en el Plan Estratégico de Desarrollo Nacional - PEDN, y es medido a través de indicadores y sus correspondientes metas.
  * PLAN
    - Es un instrumento dinámico sujeto a modificaciones en sus componentes en función de la evaluación periódica de sus resultados.
  * PRESUPUESTO
    - Es la herramienta que le permite al sector público cumplir con la producción de bienes y servicios públicos para satisfacción de las necesidades de la población de conformidad con el rol asignado al estado en la economía y sociedad del país.
  * PLAN ESTRATÉGICO INSTITUCIONAL-PEI
    - Es el documento elaborado por las entidades de la Administración Pública que se redacta en la Fase Institucional y utiliza la información generada en la Fase Estratégica del sector al que pertenece o del territorio al que está vinculado. Este documento desarrolla          las acciones estratégicas de la entidad para el logro de los objetivos establecidos en el PESEM o PDRC, según sea el caso. Además, contiene la síntesis de la Fase Estratégica, la Misión, los objetivos estratégicos institucionales, las acciones estratégicas, la ruta        estratégica y se elabora anualmente ra un período de 3 años.

## **Organigrama**
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-ticahuanca_maltrain_llantay_arce/assets/102675967/20855cbd-2d4c-47eb-904a-fca1731d350b)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-lira_chavez_cutipa,proyecto,si885-2024-i-u1-lira_chavez_cutipa,True,42,False,0,False,False,False,](https://classroom.github.com/a/4qIAkGT-)
UPT-FAING-EPIS/proyecto-formatos-01,proyecto,formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si685-2024-i-u1-final-poma_floresramos_ayma_tapia_u1,proyecto,si685-2024-i-u1-final-poma_floresramos_ayma_tapia_u1,True,65,False,0,False,False,False,"](https://classroom.github.com/a/qUS4nQVi)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si685-2024-i-u1-final-grupo-01,proyecto,si685-2024-i-u1-final-grupo-01,True,65,False,0,False,False,False,"](https://classroom.github.com/a/qUS4nQVi)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si685-2024-i-u1-barrios_chire_fernandez_floresm_u1,proyecto,si685-2024-i-u1-barrios_chire_fernandez_floresm_u1,True,42,False,0,False,False,False,](https://classroom.github.com/a/mAHS-2St)
UPT-FAING-EPIS/proyecto-si685-2024-i-u1-final-barrios_chire_fernandez_floresm_u1,proyecto,si685-2024-i-u1-final-barrios_chire_fernandez_floresm_u1,True,65,False,0,False,False,False,"](https://classroom.github.com/a/qUS4nQVi)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si685-2024-i-u1-grupo-01,proyecto,si685-2024-i-u1-grupo-01,True,42,False,0,False,False,False,](https://classroom.github.com/a/mAHS-2St)
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24,proyecto,si885-2024-i-u1-final-JeanValverde24,True,3114,False,10,True,False,False,"](https://classroom.github.com/a/uwypABzL)
# Proyecto-formatos-01
---
## Partidas Salariales - Año 2023:
[2023](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/44cd57d2-b9f7-4175-a18c-3df7f079eccd)

## Partidas Salariales - Año 2022:
[2022](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/ea1406e5-1f55-4690-b02a-36d9b4803355)

## Partidas Salariales - Año 2021:
[2021](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/d41dcefe-2514-470f-8c25-9a6e6a7c603f)

## Partidas Salariales - Año 2020:
[2020](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/b046764a-a354-4d33-a385-8380105e0763)


## Partidas Salariales - Año 2019:
[2019](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/f81f6fa8-8ee4-4297-ae06-acd838d0550c)


## Partidas Salariales - Año 2018:
[2018](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/15982aff-c48c-44ce-b4d8-3d23ed97be49)


## Partidas Salariales - Año 2017:
[2017](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/04585ebe-04ed-4eaf-bb87-d20b2fa6b251)


## Partidas Salariales - Año 2016:
[2016](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/a31b2ec0-4c38-4c3f-9cd4-b62f8a10b0ce)


## Partidas Salariales - Año 2015:
[2015](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/8d287ebf-2c07-4789-9648-336b6e18457a)


## Partidas Salariales - Año 2014:
[2014](http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000031F6BC35E3E6EE41C56987AFD4BFF79F0AE0D3E38CCD739F)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JeanValverde24/assets/90206909/375e9f34-dcca-4cdc-987b-836a5f39b8e4)"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_rivera_valverde,proyecto,si888-2024-i-u1-final-grupo_rivera_valverde,True,1304,False,1,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14790371)
# proyecto-formatos-01
---
## Proyecto: Cats Love Rabbits
[Link del proyecto en RAR subido a una carpeta en DRIVE](https://drive.google.com/file/d/1huS1xs3D9YdvVzPmwm-GSLJ0WdeevoT5/view?usp=sharing)

[Link del video publicado en youtube](https://www.youtube.com/watch?v=tK3NRkNkPcA)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_rivera_valverde/assets/90206909/a65a498c-0a71-4df8-86eb-73cc73ebbac1)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_rivera_valverde/assets/90206909/c6221d16-ab73-4035-8bb2-8fb0f02f382a)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_rivera_valverde/assets/90206909/3a700d30-24ec-4781-b881-47d5ccf260da)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_rivera_valverde/assets/90206909/1c867eef-fa31-48a3-9c08-9da8f89204bc)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_rivera_valverde/assets/90206909/e1b4bc91-2267-45a0-9313-e7a5c40a848d)"
UPT-FAING-EPIS/proyecto-si685-2024-i-u1-poma_floresramos_ayma_tapia_u1,proyecto,si685-2024-i-u1-poma_floresramos_ayma_tapia_u1,True,42,False,0,False,False,False,](https://classroom.github.com/a/mAHS-2St)
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-CrowProgrammer,proyecto,si885-2024-i-u1-final-CrowProgrammer,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-Jose25UPT,proyecto,si885-2024-i-u1-final-Jose25UPT,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-MAYnerAC,proyecto,si885-2024-i-u1-final-MAYnerAC,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JosueUPT,proyecto,si885-2024-i-u1-final-JosueUPT,True,982,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# Publicado
https://app.powerbi.com/groups/me/reports/e1f8f324-d6b7-4700-8672-7fcc8dad68f2/ReportSection?experience=power-bi

# Reporte_Telefonia_Zofra

http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000009D816A3038E7894F8D7865F90DC438B315A24375DB952F8

**Año 2018**
- http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000009D816A3038E7894F8D7865F90DC438B315A24375DB952F8

**Año 2019/2020**
- http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000009D816A3038E7894F8D7865F90DC438B315A24375DB952F8

**Año 2021**
- http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000009D816A3038E7894F8D7865F90DC438B315A24375DB952F8

**Año 2022**
- http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000009D816A3038E7894F8D7865F90DC438B315A24375DB952F8

**Año 2023**
- http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=0100000009D816A3038E7894F8D7865F90DC438B315A24375DB952F8"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos,proyecto,si888-2024-i-u1-final-videojuegos,True,1305,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14901509)
# proyecto-formatos-01


lo primero que debemos de hacer es crear un nuevo proyecto en unity 

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos/assets/112985123/b188f96b-16d3-4fbe-a2da-9f480cc7d426)


en la parte de new project creamos un proyecto en 2d (Built-In Render Pipeline)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos/assets/112985123/89a70d51-34a0-45e5-9036-ec287c5936fa)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos/assets/112985123/e229e484-2e98-482e-a79e-e4230fe67116)

al crear el proyecto debemos ir a assets > import package > Custom Package...
![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos/assets/112985123/890e015a-c5eb-4c62-8faf-94ea6069f19c)

para asi poder exportar el paquete con todos los componentes del proyecto

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos/assets/112985123/4d1ab24e-10fe-419b-a721-9244faebe582)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-joelccalli,proyecto,si885-2024-i-u1-final-joelccalli,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-MAMANICONDORIGILMER,proyecto,si885-2024-i-u1-final-MAMANICONDORIGILMER,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-unity_gamedeveloper,proyecto,si888-2024-i-u1-final-unity_gamedeveloper,True,337,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14901698)
# proyecto-formatos-01
Video Explicativo: https://youtu.be/F3x4R1Qo9FE"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-ArnoldCutipaa,proyecto,si885-2024-i-u1-final-ArnoldCutipaa,True,444,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01
Enlace del INEI: https://www.datosabiertos.gob.pe/dataset/estado-de-ejecuci%C3%B3n-del-ingreso-p%C3%BAblico

Enlace del dashboard del proyecto de unidad para descargar: https://drive.google.com/file/d/13iWzHsbl7_mQYbAHu8_taYNTpRQxTaLD/view?usp=sharing

Enlace de la base de datos para descargar: https://drive.google.com/file/d/1W0zIPiHrteyrn90-_nbAQW1Q7huuAMPS/view?usp=sharing"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-2020068765,proyecto,si885-2024-i-u1-final-2020068765,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-ivancasilla,proyecto,si885-2024-i-u1-final-ivancasilla,True,1756,True,6,True,False,False,"# POLICÍA NACIONAL DEL PERÚ - ÁREA DE INSPECTORÍA TACNA-AREQUIPA

## Nombre
- Condori Vargas, Tomas
- Nina Vargas, Luigui  
- Chambe Torres, Edgard
- Chata Choque, Brant
- Casilla Maquera, Tell Iván

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-ivancasilla/assets/142366719/5f415515-a300-4466-8dc3-0c3f1274a124)

## VISIÓN
Consolidarnos como el órgano de control de la Policía Nacional del Perú, que administre el comportamiento del personal policial con disciplina y autoridad de acuerdo a principios y valores éticos, que promuevan el cambio e inicie conseguir los objetivos estratégicos de la PNP y básicamente cumplir su misión constitucional.

## MISIÓN
Preservar y controlar el mantenimiento de la disciplina, imagen, prestigio y calidad del servicio de la función policial operativa y administrativa en la circunscripción territorial, implementar acciones y órdenes de investigación disciplinarias que permitan imponer sanciones justas e imparciales e inspeccionar los centros de control de sus servicios en el marco de una gestión pública moderna.

## PRIMER OBJETIVO
Cumplimiento normativo y legal. Garantizar que todas las actividades y operaciones de la organización cumplan con las leyes, regulaciones y normativas aplicables en el Perú.

## SEGUNDO OBJETIVO
Coordinar evaluaciones a través de informes de auditoría elaborados por entidades especializadas, para garantizar el cumplimiento de normativas y buenas prácticas institucionales y nacionales vigentes.

## TERCER OBJETIVO
Garantizar el cumplimiento oportuno de las denuncias presentadas, asegurando que se diligencien dentro del plazo establecido y en los debidos procedimientos con el fin de fomentar la transparencia y eficiencia del sistema de justicia."
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-ReynaldoChambe,proyecto,si885-2024-i-u1-final-ReynaldoChambe,True,2237,False,1,True,False,True,"## POLICIA NACIONAL DEL PERÚ - ÁREA DE INSPECTORIA TACNA-AREQUIPA

| Nombre                |
|-----------------------|
| Condori Vargas, Tomas |
| Nina Vargas, Luigui   |
| Chambe Torres, Edgard |
| Chata Choque, Brant   |
| Casilla Maquera, Ivan |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla/assets/90207441/496b28fd-7f96-4760-8e43-754bc62c0ba9)

VISION:

Consolidarnos como el órgano de control de la Policía Nacional del Perú que administre el comportamiento del personal policial con disciplina y autoridad, de acuerdo a principios y valores éticos, que promuevan el cambio a fin de conseguir los objetivos estratégicos de la PNP y básicamente cumplir la misión constitucional.


MISION:

Preservar y controlar el mantenimiento de la disciplina, imagen, prestigio y calidad del servicio policial con procedimientos oportunos, transparentes, efectivos y diligentes, promoviendo investigaciones disciplinarias que permitan imponer sanciones justas e impulsar inspecciones de control de los servicios en el marco de una gestión pública moderna.


OBJETIVO

PRIMER OBJETIVO: Cumplimiento normativo y legal: Garantizar que todas las actividades y operaciones de la organización cumplan con las leyes, regulaciones y normativas aplicables en el Perú.

SEGUNDO OBJETIVO: Coordinar evaluaciones a través de informes de auditoría elaborados por entidades especializadas, para garantizar el cumplimiento de normativas y buenas prácticas, fortaleciendo la transparencia y eficiencia institucional.

TERCER OBJETIVO: Garantizar el cumplimiento oportuno de las denuncias presentadas, asegurando que se diligencien dentro del plazo establecido y se siga el debido procedimiento, con el fin de fortalecer la transparencia y eficiencia del sistema de justicia.

CUARTO OBJETIVO: Supervisar y verificar los servicios policiales en la region y asegurar el cumplimiento de los estándares de calidad, ética y profesionalismo, contribuyendo así a fortalecer la confianza y seguridad ciudadana en la labor policial.


Enlace de Publicacion :

https://app.powerbi.com/links/e5F0zBbwf_?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=a7d42f6e-53ce-4f49-a757-e39e1c540892"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-LuiguiNina,proyecto,si885-2024-i-u1-final-LuiguiNina,True,2237,False,1,True,False,True,"## POLICIA NACIONAL DEL PERÚ - ÁREA DE INSPECTORIA TACNA-AREQUIPA

| Nombre                |
|-----------------------|
| Condori Vargas, Tomas |
| Nina Vargas, Luigui   |
| Chambe Torres, Edgard |
| Chata Choque, Brant   |
| Casilla Maquera, Ivan |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla/assets/90207441/496b28fd-7f96-4760-8e43-754bc62c0ba9)

VISION:

Consolidarnos como el órgano de control de la Policía Nacional del Perú que administre el comportamiento del personal policial con disciplina y autoridad, de acuerdo a principios y valores éticos, que promuevan el cambio a fin de conseguir los objetivos estratégicos de la PNP y básicamente cumplir la misión constitucional.


MISION:

Preservar y controlar el mantenimiento de la disciplina, imagen, prestigio y calidad del servicio policial con procedimientos oportunos, transparentes, efectivos y diligentes, promoviendo investigaciones disciplinarias que permitan imponer sanciones justas e impulsar inspecciones de control de los servicios en el marco de una gestión pública moderna.


OBJETIVO

PRIMER OBJETIVO: Cumplimiento normativo y legal: Garantizar que todas las actividades y operaciones de la organización cumplan con las leyes, regulaciones y normativas aplicables en el Perú.

SEGUNDO OBJETIVO: Coordinar evaluaciones a través de informes de auditoría elaborados por entidades especializadas, para garantizar el cumplimiento de normativas y buenas prácticas, fortaleciendo la transparencia y eficiencia institucional.

TERCER OBJETIVO: Garantizar el cumplimiento oportuno de las denuncias presentadas, asegurando que se diligencien dentro del plazo establecido y se siga el debido procedimiento, con el fin de fortalecer la transparencia y eficiencia del sistema de justicia.

CUARTO OBJETIVO: Supervisar y verificar los servicios policiales en la region y asegurar el cumplimiento de los estándares de calidad, ética y profesionalismo, contribuyendo así a fortalecer la confianza y seguridad ciudadana en la labor policial.


Enlace de Publicacion :

https://app.powerbi.com/links/e5F0zBbwf_?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=a7d42f6e-53ce-4f49-a757-e39e1c540892"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-AntonyChata,proyecto,si885-2024-i-u1-final-AntonyChata,True,2099,False,1,True,False,True,"](https://classroom.github.com/a/uwypABzL)
## POLICIA NACIONAL DEL PERÚ - ÁREA DE INSPECTORIA TACNA-AREQUIPA

| Nombre                |
|-----------------------|
| Condori Vargas, Tomas |
| Nina Vargas, Luigui   |
| Chambe Torres, Edgard |
| Chata Choque, Brant   |
| Casilla Maquera, Ivan |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla/assets/90207441/496b28fd-7f96-4760-8e43-754bc62c0ba9)

VISION:

Consolidarnos como el órgano de control de la Policía Nacional del Perú que administre el comportamiento del personal policial con disciplina y autoridad, de acuerdo a principios y valores éticos, que promuevan el cambio a fin de conseguir los objetivos estratégicos de la PNP y básicamente cumplir la misión constitucional.


MISION:

Preservar y controlar el mantenimiento de la disciplina, imagen, prestigio y calidad del servicio policial con procedimientos oportunos, transparentes, efectivos y diligentes, promoviendo investigaciones disciplinarias que permitan imponer sanciones justas e impulsar inspecciones de control de los servicios en el marco de una gestión pública moderna.


OBJETIVO

PRIMER OBJETIVO: Cumplimiento normativo y legal: Garantizar que todas las actividades y operaciones de la organización cumplan con las leyes, regulaciones y normativas aplicables en el Perú.

SEGUNDO OBJETIVO: Coordinar evaluaciones a través de informes de auditoría elaborados por entidades especializadas, para garantizar el cumplimiento de normativas y buenas prácticas, fortaleciendo la transparencia y eficiencia institucional.

TERCER OBJETIVO: Garantizar el cumplimiento oportuno de las denuncias presentadas, asegurando que se diligencien dentro del plazo establecido y se siga el debido procedimiento, con el fin de fortalecer la transparencia y eficiencia del sistema de justicia.

CUARTO OBJETIVO: Supervisar y verificar los servicios policiales en la region y asegurar el cumplimiento de los estándares de calidad, ética y profesionalismo, contribuyendo así a fortalecer la confianza y seguridad ciudadana en la labor policial."
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-JhonnyARM,proyecto,si885-2024-i-u1-final-JhonnyARM,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-tomasyoel,proyecto,si885-2024-i-u1-final-tomasyoel,True,1799,False,6,True,False,False,"](https://classroom.github.com/a/uwypABzL)
# POLICÍA NACIONAL DEL PERÚ - ÁREA DE INSPECTORÍA TACNA-AREQUIPA

## Nombre
- Condori Vargas, Tomas
- Nina Vargas, Luigui  
- Chambe Torres, Edgard
- Chata Choque, Brant
- Casilla Maquera, Tell Iván

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-ivancasilla/assets/142366719/5f415515-a300-4466-8dc3-0c3f1274a124)

## VISIÓN
Consolidarnos como el órgano de control de la Policía Nacional del Perú, que administre el comportamiento del personal policial con disciplina y autoridad de acuerdo a principios y valores éticos, que promuevan el cambio e inicie conseguir los objetivos estratégicos de la PNP y básicamente cumplir su misión constitucional.

## MISIÓN
Preservar y controlar el mantenimiento de la disciplina, imagen, prestigio y calidad del servicio de la función policial operativa y administrativa en la circunscripción territorial, implementar acciones y órdenes de investigación disciplinarias que permitan imponer sanciones justas e imparciales e inspeccionar los centros de control de sus servicios en el marco de una gestión pública moderna.

## PRIMER OBJETIVO
Cumplimiento normativo y legal. Garantizar que todas las actividades y operaciones de la organización cumplan con las leyes, regulaciones y normativas aplicables en el Perú.

## SEGUNDO OBJETIVO
Coordinar evaluaciones a través de informes de auditoría elaborados por entidades especializadas, para garantizar el cumplimiento de normativas y buenas prácticas institucionales y nacionales vigentes.

## TERCER OBJETIVO
Garantizar el cumplimiento oportuno de las denuncias presentadas, asegurando que se diligencien dentro del plazo establecido y en los debidos procedimientos con el fin de fomentar la transparencia y eficiencia del sistema de justicia."
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos_unity_chino_vela,proyecto,si888-2024-i-u1-final-videojuegos_unity_chino_vela,True,289,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14963488)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_romero_poma_mamani,proyecto,si888-2024-i-u1-final-grupo_romero_poma_mamani,True,289,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14968133)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-grupo_videojuegos_n3,proyecto,si888-2024-i-u1-final-grupo_videojuegos_n3,True,289,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14970139)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-platform_game_group,proyecto,si888-2024-i-u1-final-platform_game_group,True,655,False,1,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14970586)
# Platform Gaming

## Descripcion del proyecto
""Platform Gaming"" es un juego en 3D que desafía a los jugadores a superar obstáculos saltando a través de varios niveles. El juego apunta a una experiencia rápida y entretenida, ideal para sesiones cortas de juego. Su desarrollo se enmarca en una tendencia de juegos casuales que buscan capturar la atención de jugadores de todas las edades."
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-unity_pomamanchego_salluca_lostanau,proyecto,si888-2024-i-u1-final-unity_pomamanchego_salluca_lostanau,True,429,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14971509)
# proyecto-formatos-01
Video de Proyecto Videojuegos 2024-I Grupo Poma Salluca Lostaunau: https://www.youtube.com/playlist?list=PLmPswRKA9NPRSDjMOSsB1HVjnYoqKTzeS"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegosunity-jarro-cano,proyecto,si888-2024-i-u1-final-videojuegosunity-jarro-cano,True,1197,True,6,True,False,False,"# Integrantes:
- Anthony Cano Sucso    
- Jose Luis Jarro C.

# Proyecto: Froggy's Fruit Adventure

## Descripción del Videojuego
Froggy's Fruit Adventure es un juego en el que controlas a una simpática rana que debe recolectar frutas para completar su misión. Sin embargo, ten cuidado con las cabezas de pino con pinchos, ya que al tocarlas reiniciarán el juego. ¿Podrás ayudar a Froggy a recoger todas las frutas y superar los desafíos?

## Imágenes (Se muestran imagenes del juego)

![captura1](img/img1.jpeg)
![captura2](img/img2.jpeg)
![captura3](img/img3.jpeg)



## Características Principales
- Controla a Froggy a través de diferentes niveles llenos de frutas y obstáculos.
- Recolecta todas las frutas para completar la misión y avanzar al siguiente nivel.
- Evita las cabezas de pino con pinchos, ya que reiniciarán el juego si las tocas.
- ¡Disfruta de la simplicidad y diversión de este adictivo juego!

## Instalación
 -UNITY
## Licencia
 Este proyecto es una demo en 2D

## Contacto
Si tienes alguna pregunta o sugerencia, no dudes en ponerte en contacto con nosotros en [skhjsfsdhjsdh@gmail.com].

¡Gracias por tu interés en Froggy's Fruit Adventure!"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-anthonycs4,proyecto,si885-2024-i-u1-final-anthonycs4,True,339,False,2,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01

## Remuneraciones 
http://www.zofratacna.com.pe/ContenidoTransparencia.aspx?id=01000000FF16C6CDE3D9D353BDAC05C98587F4B243D5FDEF3B5614C6

## Ordenes de compra 
https://zofratacna.com.pe/ContenidoTransparencia.aspx?id=01000000B10CF9BC2F6152A79AFE96C3B98BFC69B68F658ACA2CF600"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-villanueva_neira_condori,proyecto,si888-2024-i-u1-final-villanueva_neira_condori,True,384,False,0,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14974975)
# Proyecto Videojuego ""Javicho el Espadachin""
- Josue Villanueva Yucra
- Thomas Condori Vargas
- Javier Neira Machaca"
UPT-FAING-EPIS/proyecto-si888-2024-i-u1-final-videojuegos_salinas_zevallos_anahua,proyecto,si888-2024-i-u1-final-videojuegos_salinas_zevallos_anahua,True,594,False,1,True,False,False,"](https://classroom.github.com/a/wfZ8MWM2)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-7f7980b617ed060a017424585567c406b6ee15c891e84e1186181d67ecf80aa0.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=14975590)

# Proyecto Unity Parkour Game U1

### Integrantes

- Zevallos Purca Justin Zinedine		(2020066924)
- Anahua Coaquira, Mayner Gonzalo		(2020067145)
- Erick Javier SALINAS CONDORI			(2020069046)

Enlace Drive:

[Proyecto_Unity_Parkour_Game_U1](https://drive.google.com/drive/folders/1KqzYJCbOpTKvS8Ubh76pwCiKTrXItd2D?usp=sharing)"
UPT-FAING-EPIS/proyecto-si685-2024-i-u2-grupo01,proyecto,si685-2024-i-u2-grupo01,True,65,False,0,False,False,False,"](https://classroom.github.com/a/vW2gTxpg)
# proyecto-formatos-01"
UPT-FAING-EPIS/si888_2024_i-proyecto_si888_2024_i_u3-proyecto-formatos-01,si888_2024_i,proyecto_si888_2024_i_u3-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si685-2024-i-u2-grupo02,proyecto,si685-2024-i-u2-grupo02,True,65,False,0,False,False,False,"](https://classroom.github.com/a/vW2gTxpg)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si685-2024-i-u2-grupo03,proyecto,si685-2024-i-u2-grupo03,True,65,False,0,False,False,False,"](https://classroom.github.com/a/vW2gTxpg)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla,proyecto,si885-2024-i-u2-chata_condori_nina_chambe_casilla,True,1629,False,1,True,False,True,"](https://classroom.github.com/a/-EjFdzh7)
# proyecto-UNIDAD 2

## POLICIA NACIONAL DEL PERÚ 

| Nombre                |
|-----------------------|
| Condori Vargas, Tomas |
| Nina Vargas, Luigui   |
| Chambe Torres, Edgard |
| Chata Choque, Brant   |
| Casilla Maquera, Ivan |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla/assets/90207441/496b28fd-7f96-4760-8e43-754bc62c0ba9)

# Diagrama de arquitectura del proyecto:

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/cbfe9f85-7e53-4b5c-8cab-3b4be68f978c)

REPORTES AUTOMATIZADOS:

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/b5c3d3ec-dc81-445d-aaec-40204c3be569)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/3e327a2e-d34f-4588-804f-a008fd4a08d2)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/32de572d-5b48-4d4b-b77b-bcfe2aa44c0d)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/99f146d7-dc81-4c72-a2c6-ebaebad3a146)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/2ce11e1d-a0cd-4658-8209-2aa8d99893db)


Enlace de Publicacion :

https://app.powerbi.com/links/e5F0zBbwf_?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=a7d42f6e-53ce-4f49-a757-e39e1c540892"
UPT-FAING-EPIS/proyecto-si885-2024-i-u2-paco_ccalli_zevallos_salinas_anahua,proyecto,si885-2024-i-u2-paco_ccalli_zevallos_salinas_anahua,True,6515,False,19,False,False,False,"](https://classroom.github.com/a/-EjFdzh7)

# Sistema de Automatización de Carga de Datos y Modificación de Reportes en el Almacén de Datos

## Integrantes:
1. Ccalli Chata, Joel Robert
2. Anahua Coaquira, Mayner Gonzalo
3. Zevallos Purca, Justin Zinedine
4. Paco Ramos Aaron Pedro
5. Salinas Condori, Erick Javier

## Introducción
- **Propósito**: Desarrollar un sistema automatizado que facilite la carga, almacenamiento y modificación de datos en archivos CSV, así como la generación y actualización de reportes en un almacén de datos.
- **Alcance**: Incluye el desarrollo de un sistema de automatización de carga de datos, modificación de reportes, capacitación de usuarios, pruebas y validación del sistema.

## Generalidades de la Empresa
- **Nombre de la Empresa**: AOE-System
- **Visión**: Definir y establecer un sistema eficiente y automatizado para la carga de datos, optimizando los procesos de almacenamiento y reporte en la organización.
- **Misión**: Implementar una solución de automatización de carga de datos y modificar los reportes existentes para mejorar la precisión, eficiencia y accesibilidad de la información almacenada.

## Visionamiento de la Empresa
- **Descripción del Problema**: El proceso de carga de datos es manual y propenso a errores, resultando en retrasos y problemas de precisión en los reportes.
- **Objetivos de Negocios**:
  - Mejorar la eficiencia operativa reduciendo el tiempo de carga de datos.
  - Aumentar la precisión y consistencia de los datos almacenados.
  - Facilitar el acceso a información actualizada y confiable para la toma de decisiones.
  - Reducir los costos operativos asociados a la gestión manual de datos.

## Alcance del Proyecto
- Desarrollo e implementación de un sistema automatizado de carga de datos.
- Modificación del reporte de la unidad 1 para que utilice el nuevo almacén de datos.
- Capacitación a los usuarios sobre el nuevo sistema.
- Pruebas y validación del sistema para garantizar su correcto funcionamiento.

## Objetivos de Diseño
- Crear un sistema de automatización para la carga de datos.
- Modificar los reportes existentes para que apunten al nuevo almacén de datos.
- Asegurar la integración y compatibilidad con los sistemas existentes.
- Garantizar la escalabilidad del sistema para futuros requerimientos.

## Análisis de Procesos
- **Diagrama del Proceso Actual**: Incluye la descripción y representación gráfica del proceso actual de carga y manejo de datos.
- **Diagrama del Proceso Propuesto**: Incluye la descripción y representación gráfica del proceso automatizado propuesto.

## Especificación de Requerimientos de Software
### Requerimientos Funcionales Iniciales:
- El sistema debe permitir la carga automática de datos desde múltiples fuentes.
- Debe validar los datos durante el proceso de carga.
- El sistema debe integrar los datos en el almacén de datos de manera estructurada.
- Debe generar alertas en caso de errores durante la carga de datos.
- El sistema debe ser capaz de programar cargas de datos periódicas.
- Debe permitir la modificación de reportes para apuntar al nuevo almacén de datos.

### Requerimientos No Funcionales:
- El sistema debe ser escalable para manejar volúmenes crecientes de datos.
- Debe tener una alta disponibilidad (99.9% uptime).
- El tiempo de respuesta para la carga de datos no debe exceder los 10 minutos.
- El sistema debe cumplir con las normativas de seguridad de datos.

### Requerimientos Funcionales Finales:
- El sistema debe permitir la configuración de reglas de validación de datos personalizadas.
- Debe soportar la carga de datos en tiempo real.
- El sistema debe permitir la extracción y carga de datos mediante APIs.
- Debe proporcionar opciones de transformación de datos durante la carga.
- El sistema debe permitir la replicación de datos a otros almacenes de datos.
- El sistema debe permitir la administración de permisos de usuario para la carga de datos.
- Debe integrar una solución de backup y recuperación de datos automatizada.

## Reglas de Negocio:
- Solo los usuarios autorizados pueden iniciar procesos de carga de datos.
- Los datos deben pasar por validaciones predefinidas antes de ser almacenados.
- Las cargas de datos fallidas deben ser notificadas al administrador del sistema.
- Los reportes deben ser actualizados automáticamente tras cada carga de datos exitosa.

## Fase de Desarrollo
### Perfiles de Usuario:
- **Administrador del Sistema**: Responsable de la configuración y mantenimiento del sistema.
- **Analista de Datos**: Utiliza el sistema para cargar datos y generar reportes.
- **Usuario Final**: Consulta los reportes generados para la toma de decisiones.

### Modelo Conceptual:
- **Diagrama de Paquetes**: Agrupación de elementos del sistema por funcionalidad.
- **Diagrama de Casos de Uso**: Representación de las interacciones entre los actores y el sistema.
- **Escenarios de Caso de Uso (Narrativa)**: Descripción detallada de los flujos de trabajo del sistema.

### Modelo Lógico:
- **Análisis de Objetos**: Detallado análisis y descripción de los objetos que forman parte del sistema.
- **Diagrama de Actividades con Objetos**: Representación gráfica de las actividades y su secuencia con los objetos involucrados.
- **Diagrama de Secuencia**: Diagrama que muestra la interacción entre los objetos a lo largo del tiempo.
- **Diagrama de Clases**: Representación estática de las clases del sistema y sus relaciones.

## Conclusiones
- La implementación del sistema mejorará significativamente la eficiencia, precisión y accesibilidad de la información en la organización, apoyando una mejor toma de decisiones y optimizando los procesos operativos.

## Recomendaciones
- Realizar una capacitación adecuada para todos los usuarios del sistema.
- Implementar un plan de monitoreo continuo para garantizar el rendimiento y la seguridad del sistema.
- Realizar revisiones periódicas del sistema para identificar y solucionar posibles problemas.
- Planificar actualizaciones futuras para mantener el sistema alineado con las necesidades de la organización.

## Bibliografía - Webgrafía
- Kimball, R., & Ross, M. (2013). *The Data Warehouse Toolkit: The Definitive Guide to Dimensional Modeling*. Wiley.
- Inmon, W. H. (2005). *Building the Data Warehouse*. Wiley.
- Elmasri, R., & Navathe, S. B. (2015). *Fundamentals of Database Systems*. Pearson.
- [Amazon S3](https://aws.amazon.com/s3/)
- [AWS IAM](https://aws.amazon.com/iam/)
- [Inteligencia de Negocios](https://en.wikipedia.org/wiki/Business_intelligence)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chambilla_jarro_cano_valverde_rivera,proyecto,si885-2024-i-u2-chambilla_jarro_cano_valverde_rivera,True,945,False,6,True,False,True,"](https://classroom.github.com/a/-EjFdzh7)
# Proyecto de Unidad II
## Almacen de datos con carga de datos automatizada para Zofratacna usando servicios de AWS

![logo](media/logo-upt.png)

#### Estudiantes:
| Nombre y Apellido                    | Código      |
|--------------------------------------|-------------|
| Cano Sucso, Anthony Alexander        | 2020067573  |
| Chambilla Zuñiga, Josue Abraham      | 2020067575  |
| Jarro Jachi, Jose Luis               | 2020067148  |
| Rivera Mendoza, Jhonny               | 2020067144  |
| Valverde Zamora, Jean Pier Elias     | 2020066920  |

## Diagrama de arquitectura del proyecto:

![diagrana](media/DiagramaArquitecturaAWS.png)

### Dashboard de la métrica de Partidas salariales:

![diagrana](media/PartidasSalariales.png)

### Dashboard de la métrica de  Ordenes:

![diagrana](media/Ordenes.png)

### Dashboard de la métrica de Costos de Telefonía:

![diagrana](media/CostosTelefonia.png)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u2-llantay_maltrain_mamani_ticahuanca,proyecto,si885-2024-i-u2-llantay_maltrain_mamani_ticahuanca,True,66,False,0,False,False,False,"](https://classroom.github.com/a/-EjFdzh7)
# PROYECTO DE SEGURIDAD"
UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar,proyecto,si784-2024-i-u2-svm_apaza_paco_lupaca_escobar,True,24974,False,28,True,False,True,"](https://classroom.github.com/a/5D-6Xqe4)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15342131)
# Implementación de un Sistema de Ventas para Grandes Almacenes

## Integrantes del Proyecto
- Edward Hernan Apaza Mamani (2018060915)
- Ronal Daniel Lupaca Mamani (2020067146)
- Carlos Andrés Escobar Rejas (2021070016)
- Aarón Pedro Paco Ramos (2018000654)

## Descripción del Proyecto
Este proyecto se centra en la implementación de un sistema de ventas, diseñado específicamente para grandes almacenes o compañías como Plaza Vea. El sistema permite la recepción y procesamiento de ventas a través de múltiples cajas de atención, facilitando un control eficiente de productos, generación de recibos, gestión de usuarios para mayoristas y administración de personal. La duración del proyecto es de 90 días, comenzando el 1 de julio y finalizando el 28 de septiembre. El objetivo principal es mejorar la eficiencia en la gestión de ventas y la administración de productos en grandes almacenes.

## Antecedentes
La gestión de ventas en grandes almacenes presenta desafíos significativos debido a la gran cantidad de productos y transacciones diarias. El uso de sistemas tradicionales resulta en ineficiencias, errores humanos y tiempos de espera prolongados para los clientes. Este proyecto busca modernizar y optimizar estos procesos mediante la implementación de un sistema de ventas avanzado.

## Objetivos
### General
- Implementar un sistema de ventas que permita gestionar eficientemente las ventas, control de productos, generación de recibos, y administración de usuarios y personal en grandes almacenes.

### Específicos
- Facilitar la recepción y procesamiento de ventas a través de múltiples cajas de atención.
- Optimizar el control y la gestión de productos en el almacén.
- Generar recibos de venta de manera automatizada.
- Gestionar usuarios mayoristas y personal administrativo de manera eficiente.
- Mejorar la experiencia de compra para los clientes.

## Tecnologías Utilizadas
- **Snyk**: Utilizado para el escaneo de vulnerabilidades en las dependencias y para realizar análisis estático del código.
- **SonarQube**: Implementado para la revisión continua del código, enfocado en la detección de bugs, vulnerabilidades y deuda técnica.
- **SonarCloud**: Servicio en la nube que proporciona análisis automatizado para detectar y corregir fallas en el código.
- **Git**: Sistema de control de versiones empleado para el seguimiento de cambios y colaboración en el desarrollo del proyecto.
- **GitHub**: Plataforma de alojamiento para el repositorio del proyecto, integrada con Snyk para el análisis de seguridad tras cada push.
- **MySQL**: Sistema de gestión de base de datos para almacenar, modificar y extraer la información utilizada en la aplicación.
- **PHP**: Lenguaje de programación del lado del servidor para la implementación de la lógica de negocio de la aplicación.

## Metodología y Técnicas Usadas
- **Desarrollo Ágil**: Implementación iterativa e incremental para facilitar la flexibilidad y la entrega continua de valor.
- **Integración Continua/Despliegue Continuo (CI/CD)**: Prácticas que permiten la integración de cambios de forma automática y sistemática.
- **Revisión de Código**: Práctica colaborativa en la que los cambios de código son revisados por pares antes de ser integrados al proyecto.
- **Análisis Estático de Código**: Empleo de herramientas como Snyk y SonarQube para detectar problemas en el código sin ejecutarlo.
- **Seguridad de la Información**: Aplicación de prácticas de codificación segura, tales como la sanitización de entradas y el uso de sentencias preparadas.

## Diagramas y Arquitectura
El proyecto incluye diversos diagramas que detallan la estructura y funcionamiento del sistema:
- **Diagrama de Clases**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/7160d904-f398-4ead-bd88-d4392ceb6052)

- **Diagrama de Paquetes**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/cab3856d-36bd-450f-8700-69f57adb1c3b)

- **Diagrama de Casos de Uso**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/443bbe8e-7b47-415f-9571-9964f1cc3cf5)

- **Diagrama de Componentes**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/46ea0a41-e684-44d0-9723-ed9919ddc64c)

- **Diagrama de Despliegue**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/07cae173-dacb-4b8a-9069-3fb5f2601f7d)

- **Diagrama de Base de Datos**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/c3ddc62a-39cf-4150-95ff-9b226263d585)

## Desarrollo de la Propuesta

Para el desarrollo de la propuesta, se llevarán a cabo pruebas utilizando herramientas de análisis estático de código, tales como Snyk, SonarQube y SonarCloud. Estas herramientas nos permitirán identificar posibles vulnerabilidades, errores y problemas de calidad en el código, asegurando así un desarrollo más robusto y seguro. Además, facilitarán la implementación de buenas prácticas de programación y la mejora continua del software.

### Pruebas Realizadas
#### SonarQube
- **Antes:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/11295dd4-56ec-45d8-adee-551625809bc8)

- **Después:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/a21e7c37-0ffb-405e-93d5-3d439667d29e)

#### SonarCloud
- **Antes:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/50267d03-d689-4ec8-8efd-be28fec0d577)

- **Después:**
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/c96ba25e-4e6d-49f1-b714-800b4e366643)

#### Snyk
- **Antes:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/79831e17-9894-4688-8aee-9215fa0d6744)

- **Después:**
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/b05cae91-e84c-4358-9d7f-803cb46dcc10)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/2c9f9353-7a26-49a2-b0e1-0bd07c3588f5)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/9ab98386-b344-492a-b48b-7124a9833f1d)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/b10a3040-54a2-46c8-99da-b1b9631150e0)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/aa2ddfab-faf3-4bb8-a698-06322107b08e)

- 
### Conclusión
Se identificaron y corrigieron múltiples vulnerabilidades de inyección SQL en el proyecto `sis_venta`. La utilización de prepared statements y la sanitización de entradas de usuario fueron las principales medidas implementadas para asegurar el sistema. Estas correcciones no solo mejoran la seguridad del sistema, sino que también aumentan su robustez y confiabilidad.

Inicialmente, se detectaron 51 vulnerabilidades: 43 de grado alto, 2 de medio y 6 de nivel bajo. Se trabajó en la eliminación de 38 vulnerabilidades, abordando los siguientes tipos:
1. Uso de Credenciales Codificadas (Hardcoded Credentials)
2. Cross-site Scripting (XSS)
3. Inyección SQL (SQL Injection)
4. Problemas de seguridad relacionados con la configuración del servidor (como la exposición del HTTP_HOST)

Se utilizó Visual Studio Code para corregir y hacer commit en el repositorio público, permitiendo que Snyk pudiera volver a escanear el proyecto.

Estas correcciones mejoran significativamente la seguridad de la aplicación, protegiendo tanto los datos de los usuarios como la integridad del sistema.
### Cronograma
El proyecto sigue un cronograma detallado con actividades distribuidas a lo largo de los 90 días de duración, enfocándose en la identificación y corrección de vulnerabilidades, optimización de código, y pruebas finales para asegurar un sistema robusto y eficiente.

#### Actividades y Responsables
| Actividades                          | Mes 1 | Mes 2 | Mes 3 | Mes 4 | Mes 5 |
|--------------------------------------|-------|-------|-------|-------|-------|
| Vulnerabilidades Altas (Ronal Lupaca)| X     | X     |       |       |       |
| Vulnerabilidades Medias (Ronal Lupaca)| X     | X     |       |       |       |
| Vulnerabilidades Bajas (Ronal Lupaca y Carlos Escobar)| X     | X     | X     |       |       |
| Redundancia de Código (Paco Ramos, Apaza Mamani)|       |       | X     |       |       |
| Corrección de Bugs (Carlos Escobar, Ronal Lupaca)|       |       |       | X     |       |
| Pruebas Finales (Ronal Lupaca, Carlos Escobar, Paco Ramos, Apaza Mamani)|       |       |       |       | X     |
### Reporte de Cobertura de Pruebas Unitarias
Se muestra nuestro reporte de cobertura de nuestra aplicación. En el reporte, cada archivo, como `AgregarProductoTest.php`, `ClientesTest.php`, `ConfigTest.php`, y otros, ha logrado una cobertura del 100% en tres categorías: líneas de código, funciones y métodos, y clases. Esto indica que las pruebas unitarias han ejecutado cada línea, función y clase en estos archivos, asegurando que todos los aspectos del código funcionan correctamente bajo las condiciones probadas.
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/659cff4b-f435-499b-9c42-697c881bdee1)

#### Tests Creados
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/d8639ed5-181b-457a-b22e-39a893c73ce9)

1. **AgregarProductoTest.php**
   - **Objetivo:** Verificar que la función `actualizarProducto` de la clase `ProductoModelTest` actualice correctamente un registro en la base de datos.
     - **Correcta Actualización de Datos:** Los campos `codigo`, `descripcion`, y `precio` del producto especificado deben ser actualizados correctamente en la base de datos. El test verifica que los valores en la base de datos coincidan con los nuevos valores proporcionados a la función `actualizarProducto`.
     - **Verificación de Resultados:** El test verifica que la respuesta incluya una cadena específica ('Producto Modificado'), lo cual podría ser un mensaje de confirmación de que la actualización fue exitosa.

2. **ClientesTest.php**
   - **Objetivo:** Validar la funcionalidad de registrar un nuevo cliente en la base de datos mediante la clase `ClienteModelTest`.
     - **Inserción Correcta en la Base de Datos:** Tras llamar al método `registrarCliente`, el test verifica que realmente se ha insertado un nuevo registro en la tabla `cliente`.
     - **Respuesta Esperada:** Verifica que el método `registrarCliente` retorne la cadena 'Cliente registrado'.

3. **ConfigTest.php**
   - **Objetivo:** Verificar la funcionalidad del método `actualizarConfiguracion` dentro de la clase `ConfiguracionModelTest`.
     - **Correcta Actualización en la Base de Datos:** Realiza consultas para asegurarse de que los datos en la base de datos correspondan a los nuevos valores suministrados.
     - **Mensaje de Confirmación:** Comprueba que el resultado devuelto por el método contenga un mensaje específico ('Datos modificados').

4. **EditarClienteTest.php**
   - **Objetivo:** Comprobar la funcionalidad de actualizar los detalles de un cliente existente en la base de datos a través del método `actualizarCliente` en la clase `ClienteModelTest`.
     - **Comprobación de Datos en Base de Datos:** Verificar que los datos del cliente en la base de datos reflejen los nuevos valores proporcionados.
     - **Evaluación del Resultado del Método:** Verificar que el string retornado por el método contenga un mensaje específico ('Cliente Actualizado correctamente').

5. **EditarProductoTest.php**
   - **Objetivo:** Asegurar que la funcionalidad de actualizar los detalles de un producto específico en la base de datos funcione correctamente a través de la clase `ProductoModelTest`.
     - **Comprobación de Datos en Base de Datos:** Verificar que los datos del producto en la base de datos reflejen los nuevos valores proporcionados.
     - **Evaluación del Resultado del Método:** Verificar que el string retornado por el método contenga un mensaje específico ('Producto Modificado').

6. **EditarUsuarioTest.php**
   - **Objetivo:** Verificar la funcionalidad de actualizar la información de un usuario existente en la base de datos a través del método `actualizarUsuario` de la clase `UsuarioModelTest`.
     - **Comprobación de Datos en la Base de Datos:** Verificar que los datos del usuario en la base de datos reflejen los nuevos valores proporcionados.
     - **Evaluación del Resultado del Método:** Verificar que el string retornado por el método contenga un mensaje específico ('Usuario Actualizado').

7. **EliminarClienteTest.php**
   - **Objetivo:** Verificar la correcta funcionalidad del método `eliminarCliente` de la clase `ClienteModelTest`.
     - **Eliminación del Cliente:** Invocar el método `eliminarCliente` para cambiar el estado del cliente especificado.
     - **Verificación de la Eliminación:** Comprobar que el estado del cliente en la base de datos refleje que ha sido marcado como eliminado (estado = 0).

8. **EliminarProductoTest.php**
   - **Objetivo:** Asegurar que el método `eliminarProducto` de la clase `ProductoModelTest` funcione correctamente.
     - **Eliminación del Producto:** Utilizar el método `eliminarProducto` para cambiar el estado del producto especificado.
     - **Verificación de la Eliminación:** Comprobar que el estado del producto en la base de datos refleje que ha sido marcado como eliminado (estado = 0).

9. **EliminarUsuarioTest.php**
   - **Objetivo:** Comprobar la correcta funcionalidad del método `eliminarUsuario` de la clase `UsuarioModelTest`.
     - **Eliminación del Usuario:** Utilizar el método `eliminarUsuario` para cambiar el estado del usuario especificado.
     - **Verificación de la Eliminación:** Comprobar que el estado del usuario en la base de datos refleje que ha sido marcado como eliminado (estado = 0).

10. **RolTest.php**
    - **Objetivo:** Verificar la funcionalidad de la clase `RolModelTest`, específicamente el método `actualizarPermisos`.
      - **Actualización de Permisos:** Utilizar el método `actualizarPermisos` para asignar un conjunto completo de permisos al usuario especificado.
      - **Verificación de la Actualización:** Comprobar que los permisos en `detalle_permisos` reflejen los cambios esperados.

11. **UsuariosTest.php**
    - **Objetivo:** Validar la funcionalidad del manejo de usuarios a través de la clase `UsuarioModelTest`.
      - **Registro de Usuario Duplicado:** Verificar que el sistema maneje correctamente los intentos de registro de un usuario que usa un correo electrónico ya registrado.
      - **Verificación de Fallo de Registro:** Comprobar que el sistema retorna un mensaje de error indicando que el correo ya existe.

### Pruebas de Aceptación Basadas en BDD
BDD (Desarrollo Guiado por el Comportamiento, por sus siglas en inglés) es una metodología de desarrollo de software que se centra en la colaboración entre desarrolladores, testers y partes interesadas no técnicas. El objetivo principal de BDD es asegurar que el software se desarrolle desde la perspectiva del comportamiento del sistema, definiendo el comportamiento esperado antes de comenzar a implementar cualquier código.

#### Escenario para Cotización (Feature)
**Feature:** Administrar Clientes  
  **Como** Personal administrativo  
  **Quiero** administrar clientes en el sistema  
  **Para** poder crear, visualizar, actualizar y eliminar clientes  

**Scenario:** Crear Cliente  
    **Given** que el Personal navega a la página de administración de clientes  
    **And** selecciona ""Crear nuevo cliente""  
    **And** no ingresa datos enviando el formulario  
    **And** envía el formulario  
    **Then** el sistema muestra un mensaje de error ""Los campos del formulario no pueden estar vacíos""  
    **And** completa el formulario con la información del cliente  
    **And** envía el formulario  
    **Then** el sistema guarda el nuevo cliente en la base de datos  
    **And** muestra un mensaje de confirmación  

**Scenario:** Visualizar Clientes  
    **Given** que el Personal navega a la página de administración de clientes  
    **Then** el sistema muestra la lista de clientes disponibles  

**Scenario:** Actualizar Cliente  
    **Given** que el Personal navega a la página de administración de clientes  
    **And** selecciona un cliente para actualizar  
    **And** modifica la información del cliente  
    **And** envía el formulario  
    **Then** el sistema actualiza el cliente en la base de datos  
    **And** muestra un mensaje de confirmación  

**Scenario:** Eliminar Cliente  
    **Given** que el Personal navega a la página de administración de clientes  
    **And** selecciona un cliente para eliminar  
    **And** confirma la eliminación  
    **Then** el sistema elimina el cliente de la base de datos  
    **And** muestra un mensaje de confirmación  

#### Resultado del Escenario

**Feature:** Administrar Permisos  
  **As** Personal administrativo  
  **I want to** administrar los permisos de los usuarios en el sistema  
  **So that I can** otorgar y revocar permisos  

**Scenario:** Otorgar y Revocar Permisos  
    **Given** el Personal navega a la página de administración de permisos  
    **And** selecciona los permisos a otorgar o revocar  
    **Then** el sistema actualiza los permisos en la base de datos  
    **And** muestra un mensaje de confirmación para permisos  

#### Resultado del Escenario

**Feature:** Administrar Productos  
  **As** Personal administrativo  
  **I want to** administrar productos en el sistema  
  **So that I can** crear, visualizar, actualizar y eliminar productos  

**Scenario:** Crear Producto  
    **Given** el Personal ha navegado a la página de administración de productos  
    **When** crea un nuevo producto con nombre ""Nuevo Producto"", precio ""100"" y descripción ""Descripción del nuevo producto""  
    **Then** el sistema debería guardar el nuevo producto en la base de datos  
    **And** debería mostrar un mensaje de confirmación  

**Scenario:** Visualizar Productos  
    **Given** el Personal ha navegado a la página de administración de productos  
    **Then** el sistema debería mostrar la lista de productos disponibles  

**Scenario:** Actualizar Producto  
    **Given** el Personal ha navegado a la página de administración de productos  
    **And** hay un producto llamado ""Producto a Actualizar""  
    **When** actualiza el producto con nombre ""Producto a Actualizar"" para que tenga precio ""150"" y descripción ""Descripción actualizada del producto""  
    **Then** el sistema debería actualizar el producto en la base de datos  
    **And** debería mostrar un mensaje de confirmación  

**Scenario:** Eliminar Producto  
    **Given** el Personal ha navegado a la página de administración de productos  
    **And** hay un producto llamado ""Producto a Eliminar""  
    **When** elimina el producto con nombre ""Producto a Eliminar""  
    **Then** el sistema debería eliminar el producto de la base de datos  
    **And** debería mostrar un mensaje de confirmación  

#### Resultado del Escenario

**Feature:** Administrar Roles  
  **As** Personal administrativo  
  **I want to** administrar los roles de los usuarios en el sistema  
  **So that I can** otorgar y modificar roles  

**Scenario:** Otorgar y Modificar Roles  
    **Given** el Personal navega a la página de administración de roles  
    **And** selecciona el rol a otorgar o modificar  
    **Then** el sistema actualiza el rol en la base de datos  
    **And** muestra un mensaje de confirmación para roles  

#### Resultado del Escenario

**Feature:** Administrar Usuarios  
  **As** Personal administrativo  
  **I want to** administrar usuarios en el sistema  
  **So that I can** crear, visualizar, actualizar y eliminar usuarios  

**Scenario:** Crear Usuario  
    **Given** el Personal navega a la página de administración de usuarios  
    **And** selecciona ""Crear nuevo usuario""  
    **And** no ingresa datos enviando el formulario de usuarios  
    **And** envía el formulario de usuarios  
    **Then** el sistema muestra un mensaje de error ""Los campos del formulario de usuarios no pueden estar vacíos""  
    **And** completa el formulario con la información del usuario  
    **And** envía el formulario de usuarios  
    **Then** el sistema guarda el nuevo usuario en la base de datos  
    **And** muestra un mensaje de confirmación para usuarios  

**Scenario:** Visualizar Usuarios  
    **Given** el Personal navega a la página de administración de usuarios  
    **Then** el sistema muestra la lista de usuarios disponibles  

**Scenario:** Actualizar Usuario  
    **Given** el Personal navega a la página de administración de usuarios  
    **And** selecciona un usuario para actualizar  
    **And** modifica la información del usuario  
    **And** envía el formulario de usuarios  
    **Then** el sistema actualiza el usuario en la base de datos  
    **And** muestra un mensaje de confirmación para usuarios  

**Scenario:** Eliminar Usuario  
    **Given** el Personal navega a la página de administración de usuarios  
    **And** selecciona un usuario para eliminar de la lista  
    **And** confirma la eliminación del usuario  
    **Then** el sistema elimina el usuario de la base de datos  
    **And** muestra un mensaje de confirmación para usuarios  
  
#### Resultado del Escenario

**Feature:** Administrar Ventas  
  **As** Personal administrativo  
  **I want to** administrar ventas en el sistema  
  **So that I can** visualizar, actualizar y eliminar ventas  

**Scenario:** Visualizar Ventas  
    **Given** el Personal navega a la página de administración de ventas  
    **Then** el sistema muestra la lista de ventas disponibles  

**Scenario:** Actualizar Venta  
    **Given** el Personal navega a la página de administración de ventas  
    **And** selecciona una venta para actualizar  
    **And** modifica la información de la venta con datos incompletos  
    **And** envía el formulario de ventas  
    **Then** el sistema muestra un mensaje de error para ventas ""Los campos del formulario no pueden estar vacíos""  
    **And** completa el formulario con la información correcta de la venta  
    **And** envía el formulario de ventas  
    **Then** el sistema actualiza la venta en la base de datos  
    **And** muestra un mensaje de confirmación para ventas actualizado  

**Scenario:** Eliminar Venta  
    **Given** el Personal navega a la página de administración de ventas  
    **And** selecciona una venta para eliminar  
    **And** confirma la eliminación de la venta  
    **Then** el sistema elimina la venta de la base de datos  
    **And** muestra un mensaje de confirmación para ventas eliminado  

#### Resultado del Escenario
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/0931aeaa-5a03-4339-824b-c7e7aa1b0a1d)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/4c45ad2d-6998-4b2e-8f3a-db0f95b45440)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/05118d7b-e5fa-4de5-a1ea-ccc4ff465526)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/5b90e06b-2590-4dd0-b063-71e5d10ab907)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/742755f6-cd95-47c9-ad65-d2ab3cc52206)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/cf349c41-f7f9-476d-b71f-474350a835f4)

### Reporte General BDD
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/031e3693-aa31-4391-b062-2897198819e9)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/d420334b-cee7-4e10-9849-d8199efb0f12)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/3476ea54-8243-4ae8-b422-aaf5f51ad5e6)"
UPT-FAING-EPIS/proyecto-si784-2024-i-u2-saemcc_apaza_cutipa_churacutipa_huallpa,proyecto,si784-2024-i-u2-saemcc_apaza_cutipa_churacutipa_huallpa,True,2381,False,0,True,False,False,"](https://classroom.github.com/a/5D-6Xqe4)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15342167)


<!-- Título -->
<h1 align=""center"">Proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil""</h1>

<!-- Descripción del proyecto -->
<p align=""center"">El proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil"" para la empresa SOSA e Hijas S.A.C. tiene como objetivo desarrollar una plataforma web que simplifique el proceso de reserva y gestión de equipos pesados. Esta solución mejorará la experiencia del usuario y aumentará la eficiencia operativa de la empresa al ofrecer una interfaz intuitiva para seleccionar, reservar y gestionar equipos. En el contexto actual de digitalización y competitividad en la industria, esta iniciativa se presenta como una herramienta estratégica para optimizar procesos y satisfacer las necesidades del mercado.</p>

<!-- Separador -->
<hr>

<!-- Sección de detalles del proyecto -->
<h2 align=""center"">Descripción del Proyecto</h2>

<p align=""center"">El proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil"" se centra en proporcionar soluciones efectivas para mejorar la calidad de los servicios de alquiler de equipos pesados, optimizando la gestión y ofreciendo una experiencia de usuario mejorada.</p>


<!-- Sección de contribución -->
<h2 align=""center"">Contribución</h2>

<p align=""center"">¡Estamos abiertos a colaboraciones de todo tipo! Si estás interesado en participar en el proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil"", no dudes en contactarnos. Aceptamos contribuciones en forma de desarrollo de software, ideas innovadoras, y soporte técnico para mejorar nuestros servicios.</p>

<!-- Sección de contacto -->
<h2 align=""center"">Contacto</h2>

<p align=""center"">Si tienes alguna pregunta o sugerencia, no dudes en ponerte en contacto con nosotros. Puedes encontrarnos en <a href=""https://sosa.sytes.net"">nuestro sitio web</a> o escribirnos a <a href=""mailto:info@sosa.com"">info@sosa.com</a>.</p>

<!-- Agradecimiento -->
<p align=""center"">¡Gracias por tu interés en el proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil"" de SOSA e Hijas S.A.C.!</p>"
UPT-FAING-EPIS/proyecto-si784-2024-i-u2-tgu2_briceno_lopez_cuadros_castaneda,proyecto,si784-2024-i-u2-tgu2_briceno_lopez_cuadros_castaneda,True,9139,False,15,True,False,False,"](https://classroom.github.com/a/5D-6Xqe4)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15360846)



<div align=""center"">
  <table border=""2"">

  <tr>
    <tr>
    <h2>INTEGRANTES</h2>
      <th>Nombre</th>
      <th>Código</th>
    </tr>
    <tr>
      <td>LOPEZ CATUNTA, Brayar Christian</td>
      <td>2021069822</td>
    </tr>
    <tr>
      <td>BRICEÑO DIAZ, Jorge Luis</td>
      <td>2017059611</td>
    </tr>
    <tr>
      <td>CUADROS GARCIA, Mirian</td>
      <td>2021071083</td>
    </tr>
    <tr>
      <td>CASTAÑEDA CENTURION, Jorge Enrique</td>
      <td>2021069822</td>
    </tr>
  </table>
</div>

# I. INTRODUCCION

El presente trabajo aborda la creación de un sistema automatizado para la gestión de alquiler de vehículos, desarrollado con PHP8 y MySQL. El sistema se basa en la arquitectura MVC (Modelo-Vista-Controlador) para estructurar el código de manera eficiente y mantener una clara separación entre la lógica de negocios, la presentación y el control de la aplicación. Este sistema busca resolver problemas comunes en la gestión de alquiler de vehículos, como errores en las reservas, duplicaciones y una experiencia de usuario deficiente.

El proyecto se centra en la creación de una plataforma en línea que permite a los usuarios registrarse y realizar reservas de vehículos de manera sencilla y segura. Los administradores pueden gestionar el inventario de vehículos, las reservas y los clientes, así como generar reportes y enviar notificaciones por correo electrónico. La aplicación está diseñada para ser intuitiva y permite una fácil personalización para adaptarse a diferentes necesidades empresariales.

El sistema proporcionará una solución centralizada para la gestión de alquiler de vehículos, mejorando la eficiencia operativa y reduciendo los errores humanos. Además, ofrecerá una mejor experiencia al usuario, facilitando el proceso de alquiler y brindando un servicio más confiable y accesible.

# II. RESUMEN

El proyecto tiene como objetivo principal desarrollar un sistema automatizado que facilite el proceso de alquiler de vehículos mediante una plataforma en línea. Este sistema permitirá a los usuarios registrarse y realizar reservas de vehículos, mientras que los administradores podrán gestionar el inventario de vehículos, las reservas y los clientes. Además, incluirá la generación de reportes y el envío de notificaciones por correo electrónico.

El sistema está diseñado para ser intuitivo y adaptable a diferentes necesidades empresariales, permitiendo una fácil personalización. La arquitectura MVC utilizada en el desarrollo del sistema garantiza una clara separación entre la lógica de negocios, la presentación y el control, facilitando así el mantenimiento y la escalabilidad del sistema.

## Abstract

The main objective of the project is to develop an automated system that facilitates the vehicle rental process through an online platform. This system will allow users to register and make vehicle reservations, while administrators can manage vehicle inventory, bookings, and customers. Additionally, it will include report generation and email notification functionalities.

The system is designed to be intuitive and adaptable to various business needs, enabling easy customization. The MVC architecture used in the system development ensures a clear separation between business logic, presentation, and control, thereby facilitating system maintenance and scalability.

# III. OBJETIVOS

## Objetivo General

Desarrollar un sistema automatizado que optimice la gestión de alquiler de vehículos, mejorando la eficiencia operativa y la experiencia del cliente.

## Objetivos Específicos

- Implementar la funcionalidad de registro y autenticación de usuarios: Garantizando la seguridad y privacidad de la información.
- Desarrollar un módulo para la gestión de inventarios de vehículos: Permitiendo agregar, modificar y eliminar vehículos.
- Facilitar el proceso de reserva y alquiler de vehículos: Asegurando que los usuarios puedan realizar estas acciones de manera sencilla y rápida.
- Proveer herramientas administrativas para la gestión eficiente de clientes y reservas: Incluyendo la posibilidad de modificar y cancelar reservas.
- Integrar un sistema de notificaciones por correo electrónico: Para enviar confirmaciones y recordatorios a los usuarios.
- Implementar la generación de reportes detallados: Para análisis y toma de decisiones estratégicas.

# IV. PLANTEAMIENTO DEL PROBLEMA

## Problema

Las empresas de alquiler de vehículos enfrentan diversos desafíos en la gestión eficiente de sus operaciones. Los sistemas manuales o no automatizados pueden llevar a errores en las reservas, duplicaciones y una experiencia de usuario insatisfactoria. Además, la falta de un sistema centralizado dificulta la gestión efectiva del inventario de vehículos, las reservas y los clientes.

Un sistema manual de gestión puede resultar en una operación ineficiente, pérdida de clientes y una mala reputación para la empresa. Por lo tanto, es necesario un sistema automatizado que permita gestionar estos procesos de manera eficiente, reduciendo los errores humanos y mejorando la satisfacción del cliente.

## Justificación

La implementación de un sistema automatizado para la gestión de alquiler de vehículos es crucial para aumentar la eficiencia operativa y reducir los errores. Un sistema centralizado proporciona una plataforma para gestionar de manera efectiva las reservas, los clientes y el inventario de vehículos, mejorando así la experiencia del usuario y la operatividad del negocio.

Un sistema automatizado permite realizar tareas de manera más rápida y precisa, reduciendo la carga de trabajo manual y permitiendo a los empleados concentrarse en tareas más estratégicas. Además, mejora la satisfacción del cliente al ofrecer un proceso de reserva sencillo y confiable, y proporciona una mejor visibilidad y control sobre las operaciones del negocio.

## Alcance

El sistema abarcará:

- Gestión de inventarios de vehículos: Permitiendo la alta, baja y modificación de vehículos en el sistema.
- Procesos de reserva y alquiler de vehículos: Los usuarios podrán realizar reservas y alquilar vehículos de manera sencilla y segura.
- Administración de clientes: Gestión de información de los clientes y sus reservas.
- Generación de reportes: Reportes detallados sobre las actividades del sistema para análisis y toma de decisiones estratégicas.
- Envío de notificaciones por correo electrónico: Confirmaciones y recordatorios automáticos para los usuarios.
- Interfaz de usuario intuitiva y personalizable: Adaptable a diferentes tipos de negocios de alquiler de vehículos.

# V. DESARROLLO DEL TRABAJO

## 1. Diagrama de Caso de Uso

![Diagrama de Caso de Uso](path/to/Caso_de_Uso.png)

## 2. Diagrama de Paquetes

![Diagrama de Paquetes](path/to/Paquete.png)

## 3. Diagrama de Clases

![Diagrama de Clases](path/to/Diag_Clases.png)

## 4. Diagrama de Componentes

![Diagrama de Componentes](path/to/Componentes.png)

## 5. Análisis de la Aplicación con SonarQube y Snyk

### Análisis con SonarQube

SonarQube es una plataforma para la inspección continua de la calidad del código que realiza un análisis automático para identificar errores y vulnerabilidades en el código fuente. Utiliza métricas para evaluar la calidad del código y proporciona una visión detallada sobre las áreas que necesitan mejora.

### Análisis con Snyk

Snyk es una herramienta de seguridad que encuentra, reporta y soluciona vulnerabilidades en las dependencias de proyectos. Se integra con la mayoría de los lenguajes de programación y herramientas de desarrollo, ayudando a mantener el software seguro al identificar y arreglar problemas en las librerías de terceros.

## 6. Reporte de Cobertura

El reporte de cobertura mide el porcentaje de código que está siendo cubierto por pruebas automatizadas. Este reporte es esencial para asegurar que el código está adecuadamente probado y que no hay partes críticas sin pruebas. Un alto porcentaje de cobertura generalmente indica una mayor probabilidad de detectar errores antes de que el software llegue a producción.

![Reporte de Cobertura](path/to/Cobertura_test.jpeg)

## 7. Reporte de Pruebas Guiadas por el Comportamiento (BDD Given When Then)

Las pruebas guiadas por el comportamiento (BDD) son una técnica de desarrollo ágil que fomenta la colaboración entre desarrolladores, QA y no técnicos o partes interesadas en un proyecto de software. Utiliza un lenguaje simple y estructurado para describir el comportamiento deseado de la aplicación. Un ejemplo de formato Given-When-Then es el siguiente:

- **Given**: El contexto inicial del escenario.
- **When**: El evento que ocurre.
- **Then**: El resultado esperado.

Este enfoque asegura que todos los miembros del equipo comprendan claramente cómo debe comportarse el software y permite escribir pruebas automatizadas que validen ese comportamiento.

![Reporte de Pruebas BDD](path/to/Reporte_BDD.png)"
UPT-FAING-EPIS/proyecto-si685-2024-i-u3-proyecto_pdf_u3_grupo_3,proyecto,si685-2024-i-u3-proyecto_pdf_u3_grupo_3,True,783,False,0,True,False,False,"](https://classroom.github.com/a/tiytFz6V)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15368161)
# proyecto- PDF SOLUTIONS GESTOR DE ARCHIVOS

#INTEGRANTES :  MARIO ANTONIO FLORES RAMOS
                #FABIOLA POMA MACHICADO
                #DYLAN TAPIA VARGAS
                #ERICK AYMA CHOQUE

#LINK DEL VIDEO : [https://youtu.be/E2BCQ0F8Q6w](https://youtu.be/nJIHEOUvUWw)
#LINK DEL ARCHIVO EN LA NUBE : http://161.132.56.56:8080/ProyectoPDF/vista/login.jsp

#PROYECTO JAVA WITH ANT SUBIDO A LA NUBE  REPOSITORIO : https://github.com/Marant7/probando.git
#PROYECTO LINK : https://apppdfjava.azurewebsites.net/"
UPT-FAING-EPIS/proyecto-si784-2024-i-u3-pysustainpartners,proyecto,si784-2024-i-u3-pysustainpartners,True,1014,True,5,False,True,False,"# Proyecto Calidad Final



Este proyecto está configurado para generar reportes de tests tanto de Cucumber como de cobertura de tests unitarios.

## Link del video publicado en YouTube
https://youtu.be/C8y1bsTbU1I

## Generar Reportes de Tests

Para generar los reportes de tests, ejecuta el siguiente comando Maven:

```sh
mvn clean test jacoco:report
```
Este comando realizará las siguientes acciones:
1. Limpiará el proyecto.
2. Ejecutará los tests.
3. Generará el reporte de cobertura de código utilizando JaCoCo.

## Ubicación de los Reportes

### Reporte de Tests Unitarios

El reporte de cobertura de los tests unitarios se encuentra en la carpeta `target/site` y puede ser visualizado abriendo el archivo `index.html` en un navegador web.

Ruta: `target/site/index.html`

### Reporte de Tests de Cucumber

El reporte de los tests de Cucumber se encuentra en la carpeta `target` y puede ser visualizado abriendo el archivo `cucumber-reports.html` en un navegador web.

Ruta: `target/cucumber-reports.html`"
UPT-FAING-EPIS/proyecto-si685-2024-i-u3-proyecto_urls_u3_grupo_2,proyecto,si685-2024-i-u3-proyecto_urls_u3_grupo_2,True,408,False,0,True,False,False,"](https://classroom.github.com/a/tiytFz6V)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15379374)
# proyecto-formatos-01

LINK DE DESPLIEGUE AZURE: acortadorurls.azurewebsites.net
LINK DEL VIDEO: https://www.youtube.com/watch?v=pz_-ebuzs9c"
UPT-FAING-EPIS/proyecto-si784-2024-i-u2-tgu2_melendez_paja_hurtado,proyecto,si784-2024-i-u2-tgu2_melendez_paja_hurtado,True,266,False,0,True,False,False,"](https://classroom.github.com/a/5D-6Xqe4)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15379394)"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender,proyecto,si888-2024-i-u3-zombiewardefender,True,1634,False,0,True,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15379461&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01
TOWER DEFENSE: 
- Link Video: https://youtu.be/F-_kE4tk4JI
- Link Game: https://drive.google.com/drive/folders/1DqScP1XDP9imlk-CKGc72U-x0LAIjCM-?usp=sharing

1. Pantalla inicial

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/a79d1bfe-cdcc-4e56-8dca-1532ae4b135f)

   Opciones de la plantalla inicial

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/7a4f2a9f-fe76-4043-9912-e9a9a340ac7d)

2. Selector de Niveles

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/706a212b-58f6-4218-bb45-50bfc08331e5)

   Nivel 1

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/af135788-2c4b-4fb5-b067-58ac44535d5e)

   Nivel 2

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/d7ea29ae-a2c0-4edb-bafe-aad3737bf9f6)

3. Paneles

   Game Over

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/5119bccf-1c8c-473d-b356-164cce5020f0)

   Pregunta

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/ede8ac04-34a6-47b1-8007-a3c564865936)

   Win

   ![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-zombiewardefender/assets/81579522/e1aca265-8bba-4260-b335-ded2ccd54ef3)"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-math-battle-rooms,proyecto,si888-2024-i-u3-math-battle-rooms,True,172,False,0,False,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15379863&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si784-2024-i-u3-pybloodbank,proyecto,si784-2024-i-u3-pybloodbank,True,1120,True,0,False,False,False,"# ProyectoU3 - BloodBank

##Link del Video en Youtube: https://www.youtube.com/watch?v=HjKJO0i6IL4

Integrantes:
-Gabriel Melendez Huarachi
-Leandro Hurtado Ortiz

Curso: Calidad y Pruebas de Software

Docente: Ing. Cuadros Quiroga, Patrick Jose

Resumen Este proyecto tiene como objetivo desarrollar un sistema integral de gestión para un Banco de Sangre, empleando Windows Forms para la captura de datos y SQL Server para el almacenamiento y gestión de la información. El sistema estará basado en Windows Forms, proporcionando una interfaz de usuario intuitiva y eficiente para administrar donaciones de sangre, registros de donantes y receptores, así como el control y distribución del inventario de unidades de sangre. Abstract This project aims to develop a comprehensive management system for a Blood Bank, using Windows Forms for data capture and SQL Server for information storage and management. The system will be based on Windows Forms, providing an intuitive and efficient user interface to manage blood donations, donor and recipient records, as well as the control and distribution of blood unit inventory."
UPT-FAING-EPIS/proyecto-si885-2024-i-u3-salinas_anahua_zevallos_paco_ccalli,proyecto,si885-2024-i-u3-salinas_anahua_zevallos_paco_ccalli,True,6588,False,19,False,False,False,"](https://classroom.github.com/a/-EjFdzh7)

# Sistema de Automatización de Carga de Datos y Modificación de Reportes en el Almacén de Datos

## Integrantes:
1. Ccalli Chata, Joel Robert
2. Anahua Coaquira, Mayner Gonzalo
3. Zevallos Purca, Justin Zinedine
4. Paco Ramos Aaron Pedro
5. Salinas Condori, Erick Javier

**Video:** https://youtu.be/gK0e9JMlmz8


## Introducción
- **Propósito**: Desarrollar un sistema automatizado que facilite la carga, almacenamiento y modificación de datos en archivos CSV, así como la generación y actualización de reportes en un almacén de datos.
- **Alcance**: Incluye el desarrollo de un sistema de automatización de carga de datos, modificación de reportes, capacitación de usuarios, pruebas y validación del sistema.

## Generalidades de la Empresa
- **Nombre de la Empresa**: ""Hospital Regional Hipolito Unanue TACNA""
- **Visión**: Definir y establecer un sistema eficiente y automatizado para la carga de datos, optimizando los procesos de almacenamiento y reporte en la organización.
- **Misión**: Implementar una solución de automatización de carga de datos y modificar los reportes existentes para mejorar la precisión, eficiencia y accesibilidad de la información almacenada.

## Visionamiento de la Empresa
- **Descripción del Problema**: El proceso de carga de datos es manual y propenso a errores, resultando en retrasos y problemas de precisión en los reportes.
- **Objetivos de Negocios**:
  - Mejorar la eficiencia operativa reduciendo el tiempo de carga de datos.
  - Aumentar la precisión y consistencia de los datos almacenados.
  - Facilitar el acceso a información actualizada y confiable para la toma de decisiones.
  - Reducir los costos operativos asociados a la gestión manual de datos.

## Alcance del Proyecto
- Desarrollo e implementación de un sistema automatizado de carga de datos.
- Modificación del reporte de la unidad 1 para que utilice el nuevo almacén de datos.
- Capacitación a los usuarios sobre el nuevo sistema.
- Pruebas y validación del sistema para garantizar su correcto funcionamiento.

## Objetivos de Diseño
- Crear un sistema de automatización para la carga de datos.
- Modificar los reportes existentes para que apunten al nuevo almacén de datos.
- Asegurar la integración y compatibilidad con los sistemas existentes.
- Garantizar la escalabilidad del sistema para futuros requerimientos.

## Análisis de Procesos
- **Diagrama del Proceso Actual**: Incluye la descripción y representación gráfica del proceso actual de carga y manejo de datos.
- **Diagrama del Proceso Propuesto**: Incluye la descripción y representación gráfica del proceso automatizado propuesto.

## Especificación de Requerimientos de Software
### Requerimientos Funcionales Iniciales:
- El sistema debe permitir la carga automática de datos desde múltiples fuentes.
- Debe validar los datos durante el proceso de carga.
- El sistema debe integrar los datos en el almacén de datos de manera estructurada.
- Debe generar alertas en caso de errores durante la carga de datos.
- El sistema debe ser capaz de programar cargas de datos periódicas.
- Debe permitir la modificación de reportes para apuntar al nuevo almacén de datos.

### Requerimientos No Funcionales:
- El sistema debe ser escalable para manejar volúmenes crecientes de datos.
- Debe tener una alta disponibilidad (99.9% uptime).
- El tiempo de respuesta para la carga de datos no debe exceder los 10 minutos.
- El sistema debe cumplir con las normativas de seguridad de datos.

### Requerimientos Funcionales Finales:
- El sistema debe permitir la configuración de reglas de validación de datos personalizadas.
- Debe soportar la carga de datos en tiempo real.
- El sistema debe permitir la extracción y carga de datos mediante APIs.
- Debe proporcionar opciones de transformación de datos durante la carga.
- El sistema debe permitir la replicación de datos a otros almacenes de datos.
- El sistema debe permitir la administración de permisos de usuario para la carga de datos.
- Debe integrar una solución de backup y recuperación de datos automatizada.

## Reglas de Negocio:
- Solo los usuarios autorizados pueden iniciar procesos de carga de datos.
- Los datos deben pasar por validaciones predefinidas antes de ser almacenados.
- Las cargas de datos fallidas deben ser notificadas al administrador del sistema.
- Los reportes deben ser actualizados automáticamente tras cada carga de datos exitosa.

## Fase de Desarrollo
### Perfiles de Usuario:
- **Administrador del Sistema**: Responsable de la configuración y mantenimiento del sistema.
- **Analista de Datos**: Utiliza el sistema para cargar datos y generar reportes.
- **Usuario Final**: Consulta los reportes generados para la toma de decisiones.

### Modelo Conceptual:
- **Diagrama de Paquetes**: Agrupación de elementos del sistema por funcionalidad.
- **Diagrama de Casos de Uso**: Representación de las interacciones entre los actores y el sistema.
- **Escenarios de Caso de Uso (Narrativa)**: Descripción detallada de los flujos de trabajo del sistema.

### Modelo Lógico:
- **Análisis de Objetos**: Detallado análisis y descripción de los objetos que forman parte del sistema.
- **Diagrama de Actividades con Objetos**: Representación gráfica de las actividades y su secuencia con los objetos involucrados.
- **Diagrama de Secuencia**: Diagrama que muestra la interacción entre los objetos a lo largo del tiempo.
- **Diagrama de Clases**: Representación estática de las clases del sistema y sus relaciones.

## Conclusiones
- La implementación del sistema mejorará significativamente la eficiencia, precisión y accesibilidad de la información en la organización, apoyando una mejor toma de decisiones y optimizando los procesos operativos.

## Recomendaciones
- Realizar una capacitación adecuada para todos los usuarios del sistema.
- Implementar un plan de monitoreo continuo para garantizar el rendimiento y la seguridad del sistema.
- Realizar revisiones periódicas del sistema para identificar y solucionar posibles problemas.
- Planificar actualizaciones futuras para mantener el sistema alineado con las necesidades de la organización.

## Bibliografía - Webgrafía
- Kimball, R., & Ross, M. (2013). *The Data Warehouse Toolkit: The Definitive Guide to Dimensional Modeling*. Wiley.
- Inmon, W. H. (2005). *Building the Data Warehouse*. Wiley.
- Elmasri, R., & Navathe, S. B. (2015). *Fundamentals of Database Systems*. Pearson.
- [Amazon S3](https://aws.amazon.com/s3/)
- [AWS IAM](https://aws.amazon.com/iam/)
- [Inteligencia de Negocios](https://en.wikipedia.org/wiki/Business_intelligence)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata,proyecto,si885-2024-i-u3-nina_chambe_casilla_condori_chata,True,2459,False,0,True,False,True,"](https://classroom.github.com/a/gcj0o7p7)
](https://classroom.github.com/online_ide?assignment_repo_id=15387030&assignment_repo_type=AssignmentRepo)
# proyecto-formatos- U3

# Modelo Predictivo y Almacén de Datos con AWS-Policía Nacional del Perú

| Nombre                |
|-----------------------|
| Condori Vargas, Tomas |
| Nina Vargas, Luigui   |
| Chambe Torres, Edgard |
| Chata Choque, Brant   |
| Casilla Maquera, Ivan |

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u1-chata_chambe_nina_condori_casilla/assets/90207441/496b28fd-7f96-4760-8e43-754bc62c0ba9)

# Diagrama de Casos de uso

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/931425be-6e01-495d-8f6b-89cf3e4f9c9e)

# Diagrama de Secuencia de Actividad:

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/18f2693b-e6ca-4851-9286-7fcf91711337)


# Diagrama de Despliegue:

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/8386ac4e-87fa-43de-bb3c-21042fa41c51)

# Diagrama de Clases

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/3c98065b-0e8f-4ceb-be7a-9ed23aab8573)

# Diagrama de arquitectura del proyecto:

![image](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chata_condori_nina_chambe_casilla/assets/132624990/cbfe9f85-7e53-4b5c-8cab-3b4be68f978c)

REPORTES PREDICTIVOS AUTOMATIZADOS EMPLEANDO FORECAST Y SCRIPT R:

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/033738f8-81f9-40e0-be19-5ff703d053d9)

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/57595646-33c6-4172-b702-a39cdec4b43b)

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/be0ce64d-9d14-48f4-b4aa-b626c32c24b7)

![imagen](https://github.com/UPT-FAING-EPIS/proyecto-si885-2024-i-u3-nina_chambe_casilla_condori_chata/assets/132624990/b680098a-9aff-439d-a983-e4071bff966c)


# Enlace de Publicacion Proyecto U3:

[Power BI Dashboard](https://app.powerbi.com/links/Evoa8Eth4r?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=2c62ad1d-e9b5-4819-b44d-0056cb5a309f)"
UPT-FAING-EPIS/proyecto-si784-2024-i-u3-pysalesperson,proyecto,si784-2024-i-u3-pysalesperson,True,26011,False,30,True,False,True,"](https://classroom.github.com/a/5D-6Xqe4)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15342131)
# Implementación de un Sistema de Ventas para Grandes Almacenes

## Integrantes del Proyecto
- Edward Hernan Apaza Mamani (2018060915)
- Ronal Daniel Lupaca Mamani (2020067146)
- Carlos Andrés Escobar Rejas (2021070016)
- Aarón Pedro Paco Ramos (2018000654)

##BDD en linea link :
https://edwardapaza.github.io/bddreporte/index.html/

##link de Repositorio Publico con de la automatizacion test github actions: https://github.com/edwardapaza/bddreporte

##link de video Youtube: https://www.youtube.com/watch?v=UD9Luh5Acz4

## Descripción del Proyecto
Este proyecto se centra en la implementación de un sistema de ventas, diseñado específicamente para grandes almacenes o compañías como Plaza Vea. El sistema permite la recepción y procesamiento de ventas a través de múltiples cajas de atención, facilitando un control eficiente de productos, generación de recibos, gestión de usuarios para mayoristas y administración de personal. La duración del proyecto es de 90 días, comenzando el 1 de julio y finalizando el 28 de septiembre. El objetivo principal es mejorar la eficiencia en la gestión de ventas y la administración de productos en grandes almacenes.

## Antecedentes
La gestión de ventas en grandes almacenes presenta desafíos significativos debido a la gran cantidad de productos y transacciones diarias. El uso de sistemas tradicionales resulta en ineficiencias, errores humanos y tiempos de espera prolongados para los clientes. Este proyecto busca modernizar y optimizar estos procesos mediante la implementación de un sistema de ventas avanzado.

## Objetivos
### General
- Implementar un sistema de ventas que permita gestionar eficientemente las ventas, control de productos, generación de recibos, y administración de usuarios y personal en grandes almacenes.

### Específicos
- Facilitar la recepción y procesamiento de ventas a través de múltiples cajas de atención.
- Optimizar el control y la gestión de productos en el almacén.
- Generar recibos de venta de manera automatizada.
- Gestionar usuarios mayoristas y personal administrativo de manera eficiente.
- Mejorar la experiencia de compra para los clientes.

## Tecnologías Utilizadas
- **Snyk**: Utilizado para el escaneo de vulnerabilidades en las dependencias y para realizar análisis estático del código.
- **SonarQube**: Implementado para la revisión continua del código, enfocado en la detección de bugs, vulnerabilidades y deuda técnica.
- **SonarCloud**: Servicio en la nube que proporciona análisis automatizado para detectar y corregir fallas en el código.
- **Git**: Sistema de control de versiones empleado para el seguimiento de cambios y colaboración en el desarrollo del proyecto.
- **GitHub**: Plataforma de alojamiento para el repositorio del proyecto, integrada con Snyk para el análisis de seguridad tras cada push.
- **MySQL**: Sistema de gestión de base de datos para almacenar, modificar y extraer la información utilizada en la aplicación.
- **PHP**: Lenguaje de programación del lado del servidor para la implementación de la lógica de negocio de la aplicación.

## Metodología y Técnicas Usadas
- **Desarrollo Ágil**: Implementación iterativa e incremental para facilitar la flexibilidad y la entrega continua de valor.
- **Integración Continua/Despliegue Continuo (CI/CD)**: Prácticas que permiten la integración de cambios de forma automática y sistemática.
- **Revisión de Código**: Práctica colaborativa en la que los cambios de código son revisados por pares antes de ser integrados al proyecto.
- **Análisis Estático de Código**: Empleo de herramientas como Snyk y SonarQube para detectar problemas en el código sin ejecutarlo.
- **Seguridad de la Información**: Aplicación de prácticas de codificación segura, tales como la sanitización de entradas y el uso de sentencias preparadas.

## Diagramas y Arquitectura
El proyecto incluye diversos diagramas que detallan la estructura y funcionamiento del sistema:
- **Diagrama de Clases**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/7160d904-f398-4ead-bd88-d4392ceb6052)

- **Diagrama de Paquetes**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/cab3856d-36bd-450f-8700-69f57adb1c3b)

- **Diagrama de Casos de Uso**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/443bbe8e-7b47-415f-9571-9964f1cc3cf5)

- **Diagrama de Componentes**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/46ea0a41-e684-44d0-9723-ed9919ddc64c)

- **Diagrama de Despliegue**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/07cae173-dacb-4b8a-9069-3fb5f2601f7d)

- **Diagrama de Base de Datos**
- ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/c3ddc62a-39cf-4150-95ff-9b226263d585)

## Desarrollo de la Propuesta

Para el desarrollo de la propuesta, se llevarán a cabo pruebas utilizando herramientas de análisis estático de código, tales como Snyk, SonarQube y SonarCloud. Estas herramientas nos permitirán identificar posibles vulnerabilidades, errores y problemas de calidad en el código, asegurando así un desarrollo más robusto y seguro. Además, facilitarán la implementación de buenas prácticas de programación y la mejora continua del software.

### Pruebas Realizadas
#### SonarQube
- **Antes:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/11295dd4-56ec-45d8-adee-551625809bc8)

- **Después:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/a21e7c37-0ffb-405e-93d5-3d439667d29e)

#### SonarCloud
- **Antes:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/50267d03-d689-4ec8-8efd-be28fec0d577)

- **Después:**
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/c96ba25e-4e6d-49f1-b714-800b4e366643)

#### Snyk
- **Antes:**
  ![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/79831e17-9894-4688-8aee-9215fa0d6744)

- **Después:**
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/b05cae91-e84c-4358-9d7f-803cb46dcc10)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/2c9f9353-7a26-49a2-b0e1-0bd07c3588f5)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/9ab98386-b344-492a-b48b-7124a9833f1d)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/b10a3040-54a2-46c8-99da-b1b9631150e0)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/aa2ddfab-faf3-4bb8-a698-06322107b08e)

- 
### Conclusión
Se identificaron y corrigieron múltiples vulnerabilidades de inyección SQL en el proyecto `sis_venta`. La utilización de prepared statements y la sanitización de entradas de usuario fueron las principales medidas implementadas para asegurar el sistema. Estas correcciones no solo mejoran la seguridad del sistema, sino que también aumentan su robustez y confiabilidad.

Inicialmente, se detectaron 51 vulnerabilidades: 43 de grado alto, 2 de medio y 6 de nivel bajo. Se trabajó en la eliminación de 38 vulnerabilidades, abordando los siguientes tipos:
1. Uso de Credenciales Codificadas (Hardcoded Credentials)
2. Cross-site Scripting (XSS)
3. Inyección SQL (SQL Injection)
4. Problemas de seguridad relacionados con la configuración del servidor (como la exposición del HTTP_HOST)

Se utilizó Visual Studio Code para corregir y hacer commit en el repositorio público, permitiendo que Snyk pudiera volver a escanear el proyecto.

Estas correcciones mejoran significativamente la seguridad de la aplicación, protegiendo tanto los datos de los usuarios como la integridad del sistema.
### Cronograma
El proyecto sigue un cronograma detallado con actividades distribuidas a lo largo de los 90 días de duración, enfocándose en la identificación y corrección de vulnerabilidades, optimización de código, y pruebas finales para asegurar un sistema robusto y eficiente.

#### Actividades y Responsables
| Actividades                          | Mes 1 | Mes 2 | Mes 3 | Mes 4 | Mes 5 |
|--------------------------------------|-------|-------|-------|-------|-------|
| Vulnerabilidades Altas (Ronal Lupaca)| X     | X     |       |       |       |
| Vulnerabilidades Medias (Ronal Lupaca)| X     | X     |       |       |       |
| Vulnerabilidades Bajas (Ronal Lupaca y Carlos Escobar)| X     | X     | X     |       |       |
| Redundancia de Código (Paco Ramos, Apaza Mamani)|       |       | X     |       |       |
| Corrección de Bugs (Carlos Escobar, Ronal Lupaca)|       |       |       | X     |       |
| Pruebas Finales (Ronal Lupaca, Carlos Escobar, Paco Ramos, Apaza Mamani)|       |       |       |       | X     |
### Reporte de Cobertura de Pruebas Unitarias
Se muestra nuestro reporte de cobertura de nuestra aplicación. En el reporte, cada archivo, como `AgregarProductoTest.php`, `ClientesTest.php`, `ConfigTest.php`, y otros, ha logrado una cobertura del 100% en tres categorías: líneas de código, funciones y métodos, y clases. Esto indica que las pruebas unitarias han ejecutado cada línea, función y clase en estos archivos, asegurando que todos los aspectos del código funcionan correctamente bajo las condiciones probadas.
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/659cff4b-f435-499b-9c42-697c881bdee1)

#### Tests Creados
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/d8639ed5-181b-457a-b22e-39a893c73ce9)

1. **AgregarProductoTest.php**
   - **Objetivo:** Verificar que la función `actualizarProducto` de la clase `ProductoModelTest` actualice correctamente un registro en la base de datos.
     - **Correcta Actualización de Datos:** Los campos `codigo`, `descripcion`, y `precio` del producto especificado deben ser actualizados correctamente en la base de datos. El test verifica que los valores en la base de datos coincidan con los nuevos valores proporcionados a la función `actualizarProducto`.
     - **Verificación de Resultados:** El test verifica que la respuesta incluya una cadena específica ('Producto Modificado'), lo cual podría ser un mensaje de confirmación de que la actualización fue exitosa.

2. **ClientesTest.php**
   - **Objetivo:** Validar la funcionalidad de registrar un nuevo cliente en la base de datos mediante la clase `ClienteModelTest`.
     - **Inserción Correcta en la Base de Datos:** Tras llamar al método `registrarCliente`, el test verifica que realmente se ha insertado un nuevo registro en la tabla `cliente`.
     - **Respuesta Esperada:** Verifica que el método `registrarCliente` retorne la cadena 'Cliente registrado'.

3. **ConfigTest.php**
   - **Objetivo:** Verificar la funcionalidad del método `actualizarConfiguracion` dentro de la clase `ConfiguracionModelTest`.
     - **Correcta Actualización en la Base de Datos:** Realiza consultas para asegurarse de que los datos en la base de datos correspondan a los nuevos valores suministrados.
     - **Mensaje de Confirmación:** Comprueba que el resultado devuelto por el método contenga un mensaje específico ('Datos modificados').

4. **EditarClienteTest.php**
   - **Objetivo:** Comprobar la funcionalidad de actualizar los detalles de un cliente existente en la base de datos a través del método `actualizarCliente` en la clase `ClienteModelTest`.
     - **Comprobación de Datos en Base de Datos:** Verificar que los datos del cliente en la base de datos reflejen los nuevos valores proporcionados.
     - **Evaluación del Resultado del Método:** Verificar que el string retornado por el método contenga un mensaje específico ('Cliente Actualizado correctamente').

5. **EditarProductoTest.php**
   - **Objetivo:** Asegurar que la funcionalidad de actualizar los detalles de un producto específico en la base de datos funcione correctamente a través de la clase `ProductoModelTest`.
     - **Comprobación de Datos en Base de Datos:** Verificar que los datos del producto en la base de datos reflejen los nuevos valores proporcionados.
     - **Evaluación del Resultado del Método:** Verificar que el string retornado por el método contenga un mensaje específico ('Producto Modificado').

6. **EditarUsuarioTest.php**
   - **Objetivo:** Verificar la funcionalidad de actualizar la información de un usuario existente en la base de datos a través del método `actualizarUsuario` de la clase `UsuarioModelTest`.
     - **Comprobación de Datos en la Base de Datos:** Verificar que los datos del usuario en la base de datos reflejen los nuevos valores proporcionados.
     - **Evaluación del Resultado del Método:** Verificar que el string retornado por el método contenga un mensaje específico ('Usuario Actualizado').

7. **EliminarClienteTest.php**
   - **Objetivo:** Verificar la correcta funcionalidad del método `eliminarCliente` de la clase `ClienteModelTest`.
     - **Eliminación del Cliente:** Invocar el método `eliminarCliente` para cambiar el estado del cliente especificado.
     - **Verificación de la Eliminación:** Comprobar que el estado del cliente en la base de datos refleje que ha sido marcado como eliminado (estado = 0).

8. **EliminarProductoTest.php**
   - **Objetivo:** Asegurar que el método `eliminarProducto` de la clase `ProductoModelTest` funcione correctamente.
     - **Eliminación del Producto:** Utilizar el método `eliminarProducto` para cambiar el estado del producto especificado.
     - **Verificación de la Eliminación:** Comprobar que el estado del producto en la base de datos refleje que ha sido marcado como eliminado (estado = 0).

9. **EliminarUsuarioTest.php**
   - **Objetivo:** Comprobar la correcta funcionalidad del método `eliminarUsuario` de la clase `UsuarioModelTest`.
     - **Eliminación del Usuario:** Utilizar el método `eliminarUsuario` para cambiar el estado del usuario especificado.
     - **Verificación de la Eliminación:** Comprobar que el estado del usuario en la base de datos refleje que ha sido marcado como eliminado (estado = 0).

10. **RolTest.php**
    - **Objetivo:** Verificar la funcionalidad de la clase `RolModelTest`, específicamente el método `actualizarPermisos`.
      - **Actualización de Permisos:** Utilizar el método `actualizarPermisos` para asignar un conjunto completo de permisos al usuario especificado.
      - **Verificación de la Actualización:** Comprobar que los permisos en `detalle_permisos` reflejen los cambios esperados.

11. **UsuariosTest.php**
    - **Objetivo:** Validar la funcionalidad del manejo de usuarios a través de la clase `UsuarioModelTest`.
      - **Registro de Usuario Duplicado:** Verificar que el sistema maneje correctamente los intentos de registro de un usuario que usa un correo electrónico ya registrado.
      - **Verificación de Fallo de Registro:** Comprobar que el sistema retorna un mensaje de error indicando que el correo ya existe.

### Pruebas de Aceptación Basadas en BDD
BDD (Desarrollo Guiado por el Comportamiento, por sus siglas en inglés) es una metodología de desarrollo de software que se centra en la colaboración entre desarrolladores, testers y partes interesadas no técnicas. El objetivo principal de BDD es asegurar que el software se desarrolle desde la perspectiva del comportamiento del sistema, definiendo el comportamiento esperado antes de comenzar a implementar cualquier código.

#### Escenario para Cotización (Feature)
**Feature:** Administrar Clientes  
  **Como** Personal administrativo  
  **Quiero** administrar clientes en el sistema  
  **Para** poder crear, visualizar, actualizar y eliminar clientes  

**Scenario:** Crear Cliente  
    **Given** que el Personal navega a la página de administración de clientes  
    **And** selecciona ""Crear nuevo cliente""  
    **And** no ingresa datos enviando el formulario  
    **And** envía el formulario  
    **Then** el sistema muestra un mensaje de error ""Los campos del formulario no pueden estar vacíos""  
    **And** completa el formulario con la información del cliente  
    **And** envía el formulario  
    **Then** el sistema guarda el nuevo cliente en la base de datos  
    **And** muestra un mensaje de confirmación  

**Scenario:** Visualizar Clientes  
    **Given** que el Personal navega a la página de administración de clientes  
    **Then** el sistema muestra la lista de clientes disponibles  

**Scenario:** Actualizar Cliente  
    **Given** que el Personal navega a la página de administración de clientes  
    **And** selecciona un cliente para actualizar  
    **And** modifica la información del cliente  
    **And** envía el formulario  
    **Then** el sistema actualiza el cliente en la base de datos  
    **And** muestra un mensaje de confirmación  

**Scenario:** Eliminar Cliente  
    **Given** que el Personal navega a la página de administración de clientes  
    **And** selecciona un cliente para eliminar  
    **And** confirma la eliminación  
    **Then** el sistema elimina el cliente de la base de datos  
    **And** muestra un mensaje de confirmación  

#### Resultado del Escenario

**Feature:** Administrar Permisos  
  **As** Personal administrativo  
  **I want to** administrar los permisos de los usuarios en el sistema  
  **So that I can** otorgar y revocar permisos  

**Scenario:** Otorgar y Revocar Permisos  
    **Given** el Personal navega a la página de administración de permisos  
    **And** selecciona los permisos a otorgar o revocar  
    **Then** el sistema actualiza los permisos en la base de datos  
    **And** muestra un mensaje de confirmación para permisos  

#### Resultado del Escenario

**Feature:** Administrar Productos  
  **As** Personal administrativo  
  **I want to** administrar productos en el sistema  
  **So that I can** crear, visualizar, actualizar y eliminar productos  

**Scenario:** Crear Producto  
    **Given** el Personal ha navegado a la página de administración de productos  
    **When** crea un nuevo producto con nombre ""Nuevo Producto"", precio ""100"" y descripción ""Descripción del nuevo producto""  
    **Then** el sistema debería guardar el nuevo producto en la base de datos  
    **And** debería mostrar un mensaje de confirmación  

**Scenario:** Visualizar Productos  
    **Given** el Personal ha navegado a la página de administración de productos  
    **Then** el sistema debería mostrar la lista de productos disponibles  

**Scenario:** Actualizar Producto  
    **Given** el Personal ha navegado a la página de administración de productos  
    **And** hay un producto llamado ""Producto a Actualizar""  
    **When** actualiza el producto con nombre ""Producto a Actualizar"" para que tenga precio ""150"" y descripción ""Descripción actualizada del producto""  
    **Then** el sistema debería actualizar el producto en la base de datos  
    **And** debería mostrar un mensaje de confirmación  

**Scenario:** Eliminar Producto  
    **Given** el Personal ha navegado a la página de administración de productos  
    **And** hay un producto llamado ""Producto a Eliminar""  
    **When** elimina el producto con nombre ""Producto a Eliminar""  
    **Then** el sistema debería eliminar el producto de la base de datos  
    **And** debería mostrar un mensaje de confirmación  

#### Resultado del Escenario

**Feature:** Administrar Roles  
  **As** Personal administrativo  
  **I want to** administrar los roles de los usuarios en el sistema  
  **So that I can** otorgar y modificar roles  

**Scenario:** Otorgar y Modificar Roles  
    **Given** el Personal navega a la página de administración de roles  
    **And** selecciona el rol a otorgar o modificar  
    **Then** el sistema actualiza el rol en la base de datos  
    **And** muestra un mensaje de confirmación para roles  

#### Resultado del Escenario

**Feature:** Administrar Usuarios  
  **As** Personal administrativo  
  **I want to** administrar usuarios en el sistema  
  **So that I can** crear, visualizar, actualizar y eliminar usuarios  

**Scenario:** Crear Usuario  
    **Given** el Personal navega a la página de administración de usuarios  
    **And** selecciona ""Crear nuevo usuario""  
    **And** no ingresa datos enviando el formulario de usuarios  
    **And** envía el formulario de usuarios  
    **Then** el sistema muestra un mensaje de error ""Los campos del formulario de usuarios no pueden estar vacíos""  
    **And** completa el formulario con la información del usuario  
    **And** envía el formulario de usuarios  
    **Then** el sistema guarda el nuevo usuario en la base de datos  
    **And** muestra un mensaje de confirmación para usuarios  

**Scenario:** Visualizar Usuarios  
    **Given** el Personal navega a la página de administración de usuarios  
    **Then** el sistema muestra la lista de usuarios disponibles  

**Scenario:** Actualizar Usuario  
    **Given** el Personal navega a la página de administración de usuarios  
    **And** selecciona un usuario para actualizar  
    **And** modifica la información del usuario  
    **And** envía el formulario de usuarios  
    **Then** el sistema actualiza el usuario en la base de datos  
    **And** muestra un mensaje de confirmación para usuarios  

**Scenario:** Eliminar Usuario  
    **Given** el Personal navega a la página de administración de usuarios  
    **And** selecciona un usuario para eliminar de la lista  
    **And** confirma la eliminación del usuario  
    **Then** el sistema elimina el usuario de la base de datos  
    **And** muestra un mensaje de confirmación para usuarios  
  
#### Resultado del Escenario

**Feature:** Administrar Ventas  
  **As** Personal administrativo  
  **I want to** administrar ventas en el sistema  
  **So that I can** visualizar, actualizar y eliminar ventas  

**Scenario:** Visualizar Ventas  
    **Given** el Personal navega a la página de administración de ventas  
    **Then** el sistema muestra la lista de ventas disponibles  

**Scenario:** Actualizar Venta  
    **Given** el Personal navega a la página de administración de ventas  
    **And** selecciona una venta para actualizar  
    **And** modifica la información de la venta con datos incompletos  
    **And** envía el formulario de ventas  
    **Then** el sistema muestra un mensaje de error para ventas ""Los campos del formulario no pueden estar vacíos""  
    **And** completa el formulario con la información correcta de la venta  
    **And** envía el formulario de ventas  
    **Then** el sistema actualiza la venta en la base de datos  
    **And** muestra un mensaje de confirmación para ventas actualizado  

**Scenario:** Eliminar Venta  
    **Given** el Personal navega a la página de administración de ventas  
    **And** selecciona una venta para eliminar  
    **And** confirma la eliminación de la venta  
    **Then** el sistema elimina la venta de la base de datos  
    **And** muestra un mensaje de confirmación para ventas eliminado  

#### Resultado del Escenario
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/0931aeaa-5a03-4339-824b-c7e7aa1b0a1d)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/4c45ad2d-6998-4b2e-8f3a-db0f95b45440)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/05118d7b-e5fa-4de5-a1ea-ccc4ff465526)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/5b90e06b-2590-4dd0-b063-71e5d10ab907)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/742755f6-cd95-47c9-ad65-d2ab3cc52206)
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/cf349c41-f7f9-476d-b71f-474350a835f4)

### Reporte General BDD
![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/031e3693-aa31-4391-b062-2897198819e9)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/d420334b-cee7-4e10-9849-d8199efb0f12)

![image](https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-i-u2-svm_apaza_paco_lupaca_escobar/assets/103132465/3476ea54-8243-4ae8-b422-aaf5f51ad5e6)

### SonarCloud
![image](https://github.com/user-attachments/assets/8d2e9798-3fe1-4597-820d-5f555544e689)

### Reporte de cobertura
![image](https://github.com/user-attachments/assets/2affc22a-a99d-4198-be41-4ade92a43eb3)
![image](https://github.com/user-attachments/assets/620510e3-7c3f-4b73-8eed-30c2d76be87a)
![image](https://github.com/user-attachments/assets/87e354e0-70b1-4114-8337-8cfaa22817de)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u3-chambilla_cano_jarro_rivera_valverde,proyecto,si885-2024-i-u3-chambilla_cano_jarro_rivera_valverde,True,1045,False,7,True,False,True,"](https://classroom.github.com/a/gcj0o7p7)
](https://classroom.github.com/online_ide?assignment_repo_id=15393681&assignment_repo_type=AssignmentRepo)

# Proyecto Unidad 3

## Generacion de almacen de datos y reportes con prediccion de datos.

![logo](media/logo-upt.png)

#### Estudiantes:

| Nombre y Apellido                | Código     |
| -------------------------------- | ---------- |
| Cano Sucso, Anthony Alexander    | 2020067573 |
| Chambilla Zuñiga, Josue Abraham  | 2020067575 |
| Jarro Jachi, Jose Luis           | 2020067148 |
| Rivera Mendoza, Jhonny           | 2020067144 |
| Valverde Zamora, Jean Pier Elias | 2020066920 |

### Diagrama de arquitectura:

![logo](/diagramas/DiagramaArquitectura.jpeg)

### Diagrama Despliegue

![alt text](/diagramas/despliegue.png)

### Dashboard de la métrica de Partidas salariales:

![diagrana](media/PartidasSalariales.png)

### Dashboard de la métrica de Ordenes:

![diagrana](media/Ordenes.png)

### Dashboard de la métrica de Costos de Telefonía:

![diagrana](media/CostosTelefonia.png)"
UPT-FAING-EPIS/proyecto-si784-2024-i-u3-pysistemamaquinariassosa,proyecto,si784-2024-i-u3-pysistemamaquinariassosa,True,5233,False,0,True,True,False,"](https://classroom.github.com/a/5D-6Xqe4)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15342167)

<!-- Título -->
<h1 align=""center"">Proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil ""</h1>

<!-- Descripción del proyecto -->
<p align=""center"">El proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil"" para la empresa SOSA e Hijas S.A.C. tiene como objetivo desarrollar una plataforma web que simplifique el proceso de reserva y gestión de equipos pesados. Esta solución mejorará la experiencia del usuario y aumentará la eficiencia operativa de la empresa al ofrecer una interfaz intuitiva para seleccionar, reservar y gestionar equipos. En el contexto actual de digitalización y competitividad en la industria, esta iniciativa se presenta como una herramienta estratégica para optimizar procesos y satisfacer las necesidades del mercado.</p>

<!-- Separador -->
<hr>

<!-- Sección de detalles del proyecto -->
<h2 align=""center"">Descripción del Proyecto</h2>

<p align=""center"">El proyecto ""Sistema de Alquiler de Equipos para Minería y Construcción Civil"" se centra en proporcionar soluciones efectivas para mejorar la calidad de los servicios de alquiler de equipos pesados, optimizando la gestión y ofreciendo una experiencia de usuario mejorada.</p>

<!-- Tecnologías Utilizadas -->
<h2 align=""center"">Tecnologías Utilizadas</h2>

<p align=""center"">El proyecto está desarrollado utilizando las siguientes tecnologías:</p>

<p align=""center"">
    <a href=""https://sosa.sytes.net"">
        <img src=""https://img.shields.io/badge/SOSA-8A2BE2?style=for-the-badge&color=yellow"" alt=""SOSA Badge"">
    </a>
    <a href=""https://www.php.net/"">
        <img src=""https://img.shields.io/badge/PHP-777BB4?style=for-the-badge&logo=php&logoColor=white"" alt=""PHP Badge"">
    </a>
    <a href=""https://www.mysql.com/"">
        <img src=""https://img.shields.io/badge/MySQL-4479A1?style=for-the-badge&logo=mysql&logoColor=white"" alt=""MySQL Badge"">
    </a>
    <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript"">
        <img src=""https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black"" alt=""JavaScript Badge"">
    </a>
    <a href=""https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5"">
        <img src=""https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&logo=html5&logoColor=white"" alt=""HTML Badge"">
    </a>
    <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS"">
        <img src=""https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&logo=css3&logoColor=white"" alt=""CSS Badge"">
    </a>
    <a href=""https://tailwindcss.com/"">
        <img src=""https://img.shields.io/badge/Tailwind_CSS-38B2AC?style=for-the-badge&logo=tailwind-css&logoColor=white"" alt=""Tailwind CSS Badge"">
    </a>
</p>

<!-- Enlaces importantes -->
<h2 align=""center"">Enlaces Importantes</h2>

<p align=""center"">A continuación, encontrarás enlaces a recursos clave relacionados con el proyecto:</p>

<!-- Reporte de Cobertura de Pruebas -->
https://github.com/jesushuallpaEPIS3/sosa.git

<div align=""center"" style=""border: 2px solid #007bff; border-radius: 10px; background-color: #f8f9fa; padding: 15px; margin: 10px 0;"">
    <h3><a href=""https://jesushuallpaepis3.github.io/sosa/"" style=""text-decoration: none; color: #007bff;"">📊 Reporte de Cobertura de Pruebas</a></h3>
    <p>Consulta el reporte de cobertura de pruebas para conocer el estado de las pruebas automatizadas en el proyecto.</p>
</div>

<!-- Desarrollo Guiado por Comportamiento -->
https://github.com/AlbertApaza/sosau3
<div align=""center"" style=""border: 2px solid #17a2b8; border-radius: 10px; background-color: #f8f9fa; padding: 15px; margin: 10px 0;"">
    <h3><a href=""https://albertapaza.github.io/sosau3/index.html/"" style=""text-decoration: none; color: #17a2b8;"">🔍 Desarrollo Guiado por Comportamiento (BDD)</a></h3>
    <p>Accede a nuestra documentación sobre Desarrollo Guiado por Comportamiento (BDD), que detalla cómo se ha aplicado esta metodología en el proyecto.</p>
</div>

<!-- Video de Presentación -->
<div align=""center"" style=""border: 2px solid #dc3545; border-radius: 10px; background-color: #f8f9fa; padding: 15px; margin: 10px 0;"">
    <h3><a href=""https://www.youtube.com/watch?v=4CEYmzDozMs"" style=""text-decoration: none; color: #dc3545;"">🎥 Video de Presentación</a></h3>
    <p>Mira el video de presentación del proyecto para una visión general de las funcionalidades y características del sistema.</p>
</div>

<!-- Sección de Unit Testing -->
<h2 align=""center"">Unit Testing</h2>

<p align=""center"">El proyecto utiliza **PHPUnit** para las pruebas unitarias del código. Puedes encontrar los tests y sus resultados en el <a href=""https://jesushuallpaepis3.github.io/sosa/"">Reporte de Cobertura de Pruebas</a>.</p>

<!-- Sección de Composer -->
<h2 align=""center"">Composer</h2>

<p align=""center"">El proyecto utiliza **Composer** para la gestión de dependencias. Para instalar las dependencias del proyecto, ejecuta el siguiente comando:</p>

```bash
composer install"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-renatitobot,proyecto,si888-2024-i-u3-renatitobot,True,366,False,0,False,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15394775&assignment_repo_type=AssignmentRepo)
# PROYECTO EDUCATIVO - VIDEOJUEGO RENATITOBOT
- Video del Juego: https://youtu.be/Llf78TniDhs?si=KkiZglJJ42uw3Oxp
# INTEGRANTES
- Chambilla Mardinez, Renato Eduardo
- Medina Lopez, Marcelo
- Valle Bustamante, Gustavo"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera,proyecto,si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera,True,1418,False,6,True,False,True,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15396814&assignment_repo_type=AssignmentRepo)
# Videojuego TruckMonster con temàtica de Driving Knowledge 
### Integrantes:
| Nombres | Apellidos | Codigo
| ------ | ------ |------|
| Anthony Alexander | Cano Sucso|2020067573|
| Jose Luis | Jarro Cachi| 2020067148|
|  Jhonny |Rivera Mendoza| 2020067148|
| Jean Pier Elias  |Valverde Zamora|2020066920 |

### Diagrama de secuencia

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera/assets/90206909/b899a037-3667-4766-9c0c-a155ec1c1065)

### Diagrama de actividades

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera/assets/90206909/19ea1913-0312-451c-9772-46cdb7aa39d7)

### Diagrama de caso de uso general

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera/assets/90206909/996b66a5-581d-467e-93ab-903d97499ff5)

### Diagrama de clases

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera/assets/90206909/e383867b-2312-4c20-bcad-4947efc65e05)

### Diagrama de componentes

![image](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-truckmonster_jarro-cano-valverde-rivera/assets/90206909/5fe12cfa-b133-45af-a954-e3587b1fce70)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u3-maltrain_llantay_mamani_ticahuanca,proyecto,si885-2024-i-u3-maltrain_llantay_mamani_ticahuanca,True,172,False,0,False,False,False,"](https://classroom.github.com/a/gcj0o7p7)
](https://classroom.github.com/online_ide?assignment_repo_id=15397147&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-camino_de_desafios_rv,proyecto,si888-2024-i-u3-camino_de_desafios_rv,True,556,False,1,True,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15397881&assignment_repo_type=AssignmentRepo)
# Camino de desafios VR
- https://drive.google.com/file/d/14Isitv3pZriKxCysmBciFBDtvUDcos8f/view?usp=sharing
# Video Youtube
- https://youtu.be/H98p7VSpoO0
## Integrantes
- Josue Villanueva Yucra
- Thomas Yoel Condori Vargas
- Javier Neira Machaca

![CAMINO DE DESAFIOS2](https://github.com/UPT-FAING-EPIS/proyecto-si888-2024-i-u3-camino_de_desafios_rv/assets/82143374/8ec60673-3398-4b01-bd26-4896dcf2600c)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u2-chavez_arce_lira_cutipa_soto,proyecto,si885-2024-i-u2-chavez_arce_lira_cutipa_soto,True,740,True,5,False,False,False,"# Dashboard del Estado de Ejecución del Gasto Público - MEF

## Inventario de Artefactos

### Unidad 1
- dashboard_ejecucion_general.pbix
- dashboard_gasto_programas.pbix
- dashboard_fuentes_financiamiento.pbix
- dashboard_unidades_ejecutoras.pbix
- dashboard_tendencias_temporales.pbix

### Unidad 2
- mef_datawarehouse.sql
- etl_carga_datos.py

### Unidad 3
- analisis_exploratorio.pbix
- prediccion_gasto.py

## Enlaces de Publicación

- [Dashboard de Ejecución Presupuestal General](URL)
- [Dashboard de Gasto por Programas](URL)
- [Dashboard de Fuentes de Financiamiento](URL)
- [Dashboard de Ejecución por Unidades Ejecutoras](URL)
- [Dashboard de Tendencias y Comparativas Temporales](URL)
- [Análisis Exploratorio y Predicción](URL)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u1-final-FabianChavezLinares,proyecto,si885-2024-i-u1-final-FabianChavezLinares,True,65,False,0,False,False,False,"](https://classroom.github.com/a/uwypABzL)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-pinballmath-corrales_arenas_lizarraga,proyecto,si888-2024-i-u3-pinballmath-corrales_arenas_lizarraga,True,172,False,0,False,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15398244&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-parkout-astroneer-1,proyecto,si888-2024-i-u3-parkout-astroneer-1,True,172,False,0,False,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15398604&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-parkour_jumpquest_eduventure,proyecto,si888-2024-i-u3-parkour_jumpquest_eduventure,True,302,False,0,False,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15398888&assignment_repo_type=AssignmentRepo)


# Integrantes
- Zevallos Purca Justin Zinedine (2020066924)
- Anahua Coaquira, Mayner Gonzalo (2020067145)
- Erick Javier SALINAS CONDORI (2020069046)"
UPT-FAING-EPIS/proyecto-si888-2024-i-u3-tribiaproyecto_mamani_chino,proyecto,si888-2024-i-u3-tribiaproyecto_mamani_chino,True,3532,False,7,False,False,False,"](https://classroom.github.com/a/pL8Uatlj)
](https://classroom.github.com/online_ide?assignment_repo_id=15399135&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01

# Proyecto AR trivia U3 Videojuegos
## Integrantes:
- Mamani Ramos, Jhonatan Stveve (2019063316)
- Oswaldo Jesus, Chino Conde (2017057434)
- Jhon Romario Poma Chura (2019064022)
- Angelica Beatriz Romero Roque (2019063327)


## 1. Planteamiento del Problema
En la educación moderna, la enseñanza de la biología puede ser un desafío debido a la falta de interacción y compromiso de los estudiantes con los métodos tradicionales de enseñanza. Los recursos educativos convencionales a menudo no logran captar la atención de los estudiantes, lo que resulta en un aprendizaje superficial y una comprensión limitada de los conceptos biológicos. Es necesario encontrar nuevas formas de involucrar a los estudiantes y hacer que el aprendizaje de la biología sea más dinámico y atractivo.

## 2. Justificación del proyecto
La realidad aumentada (AR) ofrece una oportunidad única para transformar la educación, proporcionando experiencias interactivas y envolventes que pueden mejorar significativamente el aprendizaje y la retención de información. Un videojuego de trivia de biología en AR puede hacer que los estudiantes se sientan más motivados y comprometidos, al tiempo que facilita una comprensión más profunda de los conceptos biológicos a través de la interacción directa con contenido visual y ejercicios prácticos.

## 3. Objetivo general
Desarrollar un videojuego de trivia de biología basado en realidad aumentada que mejore la experiencia de aprendizaje de los estudiantes, aumentando su motivación y comprensión de los conceptos biológicos a través de una interacción interactiva y lúdica.

## 4. Beneficios
- **Mejora del aprendizaje:** Aumentar la comprensión y retención de los conceptos biológicos.
- **Interactividad:** Ofrecer una experiencia de aprendizaje interactiva y atractiva.
- **Motivación:** Incrementar la motivación y el interés de los estudiantes en la biología.
- **Accesibilidad:** Facilitar el acceso a recursos educativos avanzados a través de tecnologías de realidad aumentada.
- **Innovación:** Promover el uso de tecnologías innovadoras en la educación.

## 5. Alcance
El proyecto se centrará en el desarrollo de un videojuego de trivia de biología en realidad aumentada para estudiantes de educación secundaria. El juego incluirá una variedad de preguntas y desafíos interactivos que cubrirán diferentes temas de biología, como anatomía, ecología, genética y evolución. Se diseñará para ser accesible en dispositivos móviles y tabletas, asegurando que los estudiantes puedan utilizarlo tanto en el aula como en casa.

## 6.Conclusiones
El proyecto de desarrollo de un videojuego de trivia de biología basado en realidad aumentada tiene el potencial de revolucionar la educación al aumentar la motivación y el compromiso de los estudiantes, mejorar la retención de conocimientos, fomentar el uso de tecnologías innovadoras y ofrecer una herramienta educativa accesible. Al integrar la realidad aumentada, el juego proporciona una experiencia de aprendizaje dinámica y atractiva que facilita la comprensión de conceptos biológicos complejos. Este proyecto no solo mejora el aprendizaje y la retención de los estudiantes, sino que también establece un nuevo estándar para la incorporación de tecnologías avanzadas en la educación, creando experiencias de aprendizaje más efectivas y motivadoras para los estudiantes del siglo XXI."
UPT-FAING-EPIS/proyecto-si685-2024-i-u3-proyecto_urls_u3_grupo_1,proyecto,si685-2024-i-u3-proyecto_urls_u3_grupo_1,True,290,True,0,False,False,False,"# proyecto-formatos-01

# Integrantes
- Elvis Leyva Sardon
- Jaime Flores Quispe
- Jerson Chambi Cori
- Edinson Luna Peña

# Enlace de Youtube
https://youtu.be/bhHq8UEMh7g?si=Iyckk2gkTwDlvsJ8

# Link de proyecto desplegado
miapppython.azurewebsites.net/

Configuración de git flow realizada"
UPT-FAING-EPIS/proyecto-si784-2024-i-u3-pysistemaalquilerdevehiculos,proyecto,si784-2024-i-u3-pysistemaalquilerdevehiculos,True,13805,False,26,True,False,False,"](https://classroom.github.com/a/wBx8xMPt)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15404052)

<div align=""center"">
  <h1 style=""font-size: 36px;"">Sistema Automatizado Alquiler de Vehículos</h1>
</div>

<div align=""center"">
  <table border=""2"">

  <tr>
    <tr>
    <h2>INTEGRANTES</h2>
      <th>Nombre</th>
      <th>Código</th>
    </tr>
    <tr>
      <td>LOPEZ CATUNTA, Brayar Christian</td>
      <td>2021069822</td>
    </tr>
    <tr>
      <td>BRICEÑO DIAZ, Jorge Luis</td>
      <td>2017059611</td>
    </tr>
    <tr>
      <td>CUADROS GARCIA, Mirian</td>
      <td>2021071083</td>
    </tr>
    <tr>
      <td>CASTAÑEDA CENTURION, Jorge Enrique</td>
      <td>2021069822</td>
    </tr>
  </table>
</div>

## LINK DEL VIDEO: https://youtu.be/KzeBk0IgpXc

# I. INTRODUCCION

El presente trabajo aborda la creación de un sistema automatizado para la gestión de alquiler de vehículos, desarrollado con PHP8 y MySQL. El sistema se basa en la arquitectura MVC (Modelo-Vista-Controlador) para estructurar el código de manera eficiente y mantener una clara separación entre la lógica de negocios, la presentación y el control de la aplicación. Este sistema busca resolver problemas comunes en la gestión de alquiler de vehículos, como errores en las reservas, duplicaciones y una experiencia de usuario deficiente.

El proyecto se centra en la creación de una plataforma en línea que permite a los usuarios registrarse y realizar reservas de vehículos de manera sencilla y segura. Los administradores pueden gestionar el inventario de vehículos, las reservas y los clientes, así como generar reportes y enviar notificaciones por correo electrónico. La aplicación está diseñada para ser intuitiva y permite una fácil personalización para adaptarse a diferentes necesidades empresariales.

El sistema proporcionará una solución centralizada para la gestión de alquiler de vehículos, mejorando la eficiencia operativa y reduciendo los errores humanos. Además, ofrecerá una mejor experiencia al usuario, facilitando el proceso de alquiler y brindando un servicio más confiable y accesible.

# II. RESUMEN

El proyecto tiene como objetivo principal desarrollar un sistema automatizado que facilite el proceso de alquiler de vehículos mediante una plataforma en línea. Este sistema permitirá a los usuarios registrarse y realizar reservas de vehículos, mientras que los administradores podrán gestionar el inventario de vehículos, las reservas y los clientes. Además, incluirá la generación de reportes y el envío de notificaciones por correo electrónico.

El sistema está diseñado para ser intuitivo y adaptable a diferentes necesidades empresariales, permitiendo una fácil personalización. La arquitectura MVC utilizada en el desarrollo del sistema garantiza una clara separación entre la lógica de negocios, la presentación y el control, facilitando así el mantenimiento y la escalabilidad del sistema.

## Abstract

The main objective of the project is to develop an automated system that facilitates the vehicle rental process through an online platform. This system will allow users to register and make vehicle reservations, while administrators can manage vehicle inventory, bookings, and customers. Additionally, it will include report generation and email notification functionalities.

The system is designed to be intuitive and adaptable to various business needs, enabling easy customization. The MVC architecture used in the system development ensures a clear separation between business logic, presentation, and control, thereby facilitating system maintenance and scalability.

# III. OBJETIVOS

## Objetivo General

Desarrollar un sistema automatizado que optimice la gestión de alquiler de vehículos, mejorando la eficiencia operativa y la experiencia del cliente.

## Objetivos Específicos

- Implementar la funcionalidad de registro y autenticación de usuarios: Garantizando la seguridad y privacidad de la información.
- Desarrollar un módulo para la gestión de inventarios de vehículos: Permitiendo agregar, modificar y eliminar vehículos.
- Facilitar el proceso de reserva y alquiler de vehículos: Asegurando que los usuarios puedan realizar estas acciones de manera sencilla y rápida.
- Proveer herramientas administrativas para la gestión eficiente de clientes y reservas: Incluyendo la posibilidad de modificar y cancelar reservas.
- Integrar un sistema de notificaciones por correo electrónico: Para enviar confirmaciones y recordatorios a los usuarios.
- Implementar la generación de reportes detallados: Para análisis y toma de decisiones estratégicas.

# IV. PLANTEAMIENTO DEL PROBLEMA

## Problema

Las empresas de alquiler de vehículos enfrentan diversos desafíos en la gestión eficiente de sus operaciones. Los sistemas manuales o no automatizados pueden llevar a errores en las reservas, duplicaciones y una experiencia de usuario insatisfactoria. Además, la falta de un sistema centralizado dificulta la gestión efectiva del inventario de vehículos, las reservas y los clientes.

Un sistema manual de gestión puede resultar en una operación ineficiente, pérdida de clientes y una mala reputación para la empresa. Por lo tanto, es necesario un sistema automatizado que permita gestionar estos procesos de manera eficiente, reduciendo los errores humanos y mejorando la satisfacción del cliente.

## Justificación

La implementación de un sistema automatizado para la gestión de alquiler de vehículos es crucial para aumentar la eficiencia operativa y reducir los errores. Un sistema centralizado proporciona una plataforma para gestionar de manera efectiva las reservas, los clientes y el inventario de vehículos, mejorando así la experiencia del usuario y la operatividad del negocio.

Un sistema automatizado permite realizar tareas de manera más rápida y precisa, reduciendo la carga de trabajo manual y permitiendo a los empleados concentrarse en tareas más estratégicas. Además, mejora la satisfacción del cliente al ofrecer un proceso de reserva sencillo y confiable, y proporciona una mejor visibilidad y control sobre las operaciones del negocio.

## Alcance

El sistema abarcará:

- Gestión de inventarios de vehículos: Permitiendo la alta, baja y modificación de vehículos en el sistema.
- Procesos de reserva y alquiler de vehículos: Los usuarios podrán realizar reservas y alquilar vehículos de manera sencilla y segura.
- Administración de clientes: Gestión de información de los clientes y sus reservas.
- Generación de reportes: Reportes detallados sobre las actividades del sistema para análisis y toma de decisiones estratégicas.
- Envío de notificaciones por correo electrónico: Confirmaciones y recordatorios automáticos para los usuarios.
- Interfaz de usuario intuitiva y personalizable: Adaptable a diferentes tipos de negocios de alquiler de vehículos.

# V. DESARROLLO DEL TRABAJO

## 1. Diagrama de Caso de Uso

![Diagrama de Caso de Uso](path/to/Caso_de_Uso.png)

## 2. Diagrama de Paquetes

![Diagrama de Paquetes](path/to/Paquete.png)

## 3. Diagrama de Clases

![Diagrama de Clases](path/to/Diag_Clases.png)

## 4. Diagrama de Componentes

![Diagrama de Componentes](path/to/Componentes.png)

## 5. Análisis de la Aplicación con SonarQube y Snyk

### Análisis con SonarQube

SonarQube es una plataforma para la inspección continua de la calidad del código que realiza un análisis automático para identificar errores y vulnerabilidades en el código fuente. Utiliza métricas para evaluar la calidad del código y proporciona una visión detallada sobre las áreas que necesitan mejora.

### Análisis con Snyk

Snyk es una herramienta de seguridad que encuentra, reporta y soluciona vulnerabilidades en las dependencias de proyectos. Se integra con la mayoría de los lenguajes de programación y herramientas de desarrollo, ayudando a mantener el software seguro al identificar y arreglar problemas en las librerías de terceros.

## 6. Reporte de Cobertura

El reporte de cobertura mide el porcentaje de código que está siendo cubierto por pruebas automatizadas. Este reporte es esencial para asegurar que el código está adecuadamente probado y que no hay partes críticas sin pruebas. Un alto porcentaje de cobertura generalmente indica una mayor probabilidad de detectar errores antes de que el software llegue a producción.

![Reporte de Cobertura](path/to/Cobertura_test.jpeg)

## 7. Reporte de Pruebas Guiadas por el Comportamiento (BDD Given When Then)

Las pruebas guiadas por el comportamiento (BDD) son una técnica de desarrollo ágil que fomenta la colaboración entre desarrolladores, QA y no técnicos o partes interesadas en un proyecto de software. Utiliza un lenguaje simple y estructurado para describir el comportamiento deseado de la aplicación. Un ejemplo de formato Given-When-Then es el siguiente:

- **Given**: El contexto inicial del escenario.
- **When**: El evento que ocurre.
- **Then**: El resultado esperado.

Este enfoque asegura que todos los miembros del equipo comprendan claramente cómo debe comportarse el software y permite escribir pruebas automatizadas que validen ese comportamiento.

![Reporte de Pruebas BDD](path/to/Reporte_BDD.png)

## 8. Reporte de Pruebas Guiadas por el Comportamiento (BDD Given When Then)

<div style=""display: flex; align-items: flex-start;"">
  <div style=""flex: 1;"">
    GitHub Actions es una plataforma de integración continua y entrega continua (CI/CD) que permite automatizar flujos de trabajo de desarrollo de software directamente desde un repositorio de GitHub. Utiliza archivos YAML para definir procesos que se ejecutan en respuesta a eventos específicos como push, pull requests, issues, y más. Las características principales incluyen la capacidad de construir, probar y desplegar código, así como integrar con otros servicios y herramientas mediante el uso de acciones predefinidas o personalizadas. Esta herramienta facilita la automatización y mejora la eficiencia en el ciclo de vida del desarrollo del software.
  </div>
  <div style=""flex: 0 0 250px; margin-left: 20px;"">
    <img src=""path/to/github_action.png"" alt=""Contenido de GitHub Actions"" style=""max-width: 65%;"">
  </div>
</div>

## 9. Configuración del proyecto dentro de la plataforma de SonarQube

Ingresamos los datos requeridos

![Configuracion 01](path/to/Configuracion01.png)

## 10. La configuración de un proyecto en SonarQube bajo la metodología

Esta configuración permite definir qué parte del código se considerará como nuevo código:Seleccionamos ""Previous version"", lo que significa que se considera nuevo código cualquier cambio desde la versión anterior.

![Configuracion 02](path/to/Configuracion02.png)

## 11. Claves Importantes Asociadas con el proyecto

Esta sección proporciona una visión general rápida de la configuración y las claves importantes asociadas con el proyecto, así como la puerta de calidad utilizada para evaluar la calidad del código. 

![Configuracion 02](path/to/Configuracion03.png)

## 12. Configuracion del archivo ci.yml

El archivo YAML muestra cómo configurar un flujo de trabajo automatizado en GitHub Actions para ejecutar pruebas y realizar análisis de calidad de código con SonarQube. Esto asegura que el proyecto esté siempre bajo control de calidad continua y se mantenga en buen estado conforme se realizan cambios en el código.

![Configuracion 02](path/to/Configuracion04.png)

## 13. Construccion de la rama de bddreporte

Sección de configuración de GitHub Pages para un repositorio. La sección resaltada indica que el sitio de GitHub Pages se está construyendo actualmente desde la rama ""bddreporte"". 

![Configuracion 02](path/to/Configuracion05.png)

## 14. Proceso continua de ci.yml

Se ve que se están ejecutando pruebas automáticas y se configura el entorno de desarrollo para el proyecto. Además, se muestra el estado de las pruebas y la configuración del repositorio de código. 

![Configuracion 02](path/to/Configuracion06.png)

## 15. Diagrama de Flujo

Este diagrama de flujo del trabajo configurado en el archivo ci.yml se ejecutó exitosamente en respuesta a un evento de ""push""

![Configuracion 02](path/to/Configuracion09.png)

## 16. Se uso la herramienta para Automatiza el Analisis para la muestra de la Cobertura


Se usa una herramienta de análisis de código que muestra la cobertura de línea para un proyecto llamado ""ProyectoUnidad3"". La cobertura de línea es una medida de la cantidad de código que se ha probado. En este caso, la cobertura de línea para el código nuevo es del 92,2%. 

![Configuracion 02](path/to/Configuracion07.png)

## 17. Se uso la herramienta para Automatiza el Analisis para los features

<div align=""center"">
  <table style=""width: 80%; border: 2px solid #4CAF50; border-collapse: collapse;"">
    <thead>
      <tr style=""background-color: #f2f2f2;"">
        <th style=""border: 2px solid #4CAF50; padding: 8px; text-align: center; color: #4CAF50;"">Descripción</th>
        <th style=""border: 2px solid #4CAF50; padding: 8px; text-align: center; color: #4CAF50;"">Enlace</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style=""border: 2px solid #4CAF50; padding: 8px; text-align: center;"">Reporte automatizado de pruebas</td>
        <td style=""border: 2px solid #4CAF50; padding: 8px; text-align: center;""><a href=""https://j0rgz.github.io/ProyectoUnidad3/index.html"" style=""color: #4CAF50;"">https://j0rgz.github.io/ProyectoUnidad3/index.html</a></td>
      </tr>
    </tbody>
  </table>
</div>


Este reporte demuestra que todas las pruebas automatizadas ejecutadas fueron exitosas, lo cual es un buen indicador de la calidad y estabilidad del sistema en su estado actual. 

![Configuracion 02](path/to/Configuracion08.png)"
UPT-FAING-EPIS/proyecto-si885-2024-i-u3-lira_soto_cutipa_c_a,proyecto,si885-2024-i-u3-lira_soto_cutipa_c_a,True,172,False,0,False,False,False,"](https://classroom.github.com/a/gcj0o7p7)
](https://classroom.github.com/online_ide?assignment_repo_id=15409917&assignment_repo_type=AssignmentRepo)
# proyecto-formatos-01"
UPT-FAING-EPIS/si885_2024-ii-proyecto_si885_2024_i_u1_final-proyecto-formatos-01,si885_2024,ii-proyecto_si885_2024_i_u1_final-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/si885_2024-ii-proyecto_si885_2024-ii_u1-proyecto-formatos-01,si885_2024,ii-proyecto_si885_2024-ii_u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-formatos-02,proyecto,formatos-02,True,22,True,0,False,False,False,# proyecto-formatos-02
UPT-FAING-EPIS/si784_2024-ii-proyecto_si784_2024_ii_u1-proyecto-formatos-02,si784_2024,ii-proyecto_si784_2024_ii_u1-proyecto-formatos-02,True,22,True,0,False,False,False,# proyecto-formatos-02
UPT-FAING-EPIS/proyecto-si885-2024-ii-u1-tgu01lopezbricenocuadrosmelendezhurtado,proyecto,si885-2024-ii-u1-tgu01lopezbricenocuadrosmelendezhurtado,True,993,True,4,False,False,True,"# Proyecto: Dashboard de Detección Temprana de Abandono Estudiantil

## Descripción
Este proyecto tiene como objetivo desarrollar un **Dashboard de Detección Temprana de Abandono Estudiantil** para el área de tutoría de **EPIS UPT**. Se busca proporcionar herramientas analíticas que ayuden a identificar a los estudiantes en riesgo de abandono y a implementar medidas preventivas eficaces.

## Curso
**Inteligencia de Negocios**

## Docente
**Ing. Cuadros Quiroga, Patrick José**

## Integrantes

| Nombre                                      | Código      |
|---------------------------------------------|-------------|
| Melendez Huarachi, Gabriel Fari            | 2021070311  |
| Lopez Catunta, Brayar Christian             | 2020068946  |
| Briceño Diaz, Jorge Luis                    | 2017059611  |
| Cuadros Garcia, Mirian                      | 2021071083  |
| Hurtado Ortiz, Leandro                      | 2015052384  |
| Chino Rivera, Angel Alessandro               | 2021069830  |"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u1-tg01ximenajorgejesusivanalvaro,proyecto,si885-2024-ii-u1-tg01ximenajorgejesusivanalvaro,True,2526,False,4,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560290)

#  Plataforma de análisis de datos de matriculados en la carrera de ingeniería de sistemas para la universidad privada de Tacna - PAMIS

El propósito de PAMIS es proporcionar una plataforma tecnológica que permita a los estudiantes de la Escuela Profesional de Ingeniería de Sistemas abordar varios desafíos relacionados con el análisis del desempeño académico de sus compañeros. Estos desafíos incluyen la falta de acceso a herramientas analíticas detalladas, la necesidad de identificar patrones de rendimiento a lo largo del tiempo y la importancia de tomar decisiones estratégicas basadas en datos concretos.

## Integrantes
- **Agreda Ramirez, Jesus Eduardo			(2021069823)** 
- **Castañeda Centurion, Jorge Enrique		(2021069822)** 
- **Contreras Lipa, Alvaro Javier			(2021070020)** 
- **Málaga Espinoza, Ivan Francisco		(2021071086)**
- **Ortiz Fernandez, Ximena Andrea			(2021071080)**

## Curso
- Inteligencia de Negocios

## Docente
- Mag. Patrick Cuadros Quiroga

## Enlace a los datos
-  [Consolidado Semestre 2020 - I](https://docs.google.com/spreadsheets/d/1cIg5tDGIJB3h0LbpFJx4EUgkOMIlYVMK/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2020 - II](https://docs.google.com/spreadsheets/d/1eaYI-YMzZYpGdQ3vCbRQ28YCHEucd3Fi/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2021 - I](https://docs.google.com/spreadsheets/d/1oR_VQalTpQ3ZywmnBypG0NKYe4vTw7sf/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2021 - II](https://docs.google.com/spreadsheets/d/1x3-4pQaRQgEPI5ymfbOjxNAuNmJLEyI3/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2022 - I](https://docs.google.com/spreadsheets/d/1rwH7N_DOPicpMzaNN9rf5wD1CHzeQA0E/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2022 - II](https://docs.google.com/spreadsheets/d/10kJhI5DXXkWpJ0_mLp-LQxszpHnUWk9N/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

# Enlace de publicación Dashboards PowerBI 
Se requiere ingresar con una cuenta institucional @upt.pe
- [Link a PowerBI](https://app.powerbi.com/reportEmbed?reportId=74e61f6c-0ba3-4134-ab66-81a35821c724&autoAuth=true&ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a)

---"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u1-tgu3apaaz,proyecto,si885-2024-ii-u1-tgu3apaaz,True,246,False,0,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560303)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u1-tg01apazachuracutcutiescohuallpa,proyecto,si885-2024-ii-u1-tg01apazachuracutcutiescohuallpa,True,7087,True,12,True,True,True,"# Proyecto Formatos 01

### Integrantes

| Nombre                             | Insights Totales |
|------------------------------------|-------------------|
| Escobar Rejas, Carlos Andrés  | (2021070016) |
| Apaza Ccalle, Albert Kenyi   | (2021071075) |
| Ricardo Cutipa Gutierrez     | (2021069827) |
| Erick Churacutipa Blass     | (2020067578) |
| Jesus Huallpa Maron          | (2021071085) |

[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560310)

# Video : [Ver video aquí](https://youtu.be/SscESSNv6vQ)
# Proyecto: Herramienta de Seguimiento y Evaluación del Desempeño de Red y Hardware en Computadoras UPT

## Dashboard y Reportes

- **Dashboard**:
  
  ![Dashboard](images/dashboard1.png)

- **Reporte 1**:
  
  ![Reporte 1](images/reporte1.png)

- **Reporte 2**:
  
  ![Reporte 2](images/reporte2.png)

- **Reporte 3**:
  
  ![Reporte 3](images/reporte3.png)

- **Reporte 4**:
  
  ![Reporte 4](images/reporte4.png)

- **Reporte 5**:
  
  ![Reporte 5](images/reporte5.png)

## Inventario de Artefactos

| Archivo                      | Descripción                               |
|------------------------------|-------------------------------------------|
| `trafico_red_db.sql`          | Base de datos MySQL que contiene las tablas y registros necesarios para el seguimiento del tráfico de red en los laboratorios.|
| `DesempeñoRed.twbx`           | Archivo empaquetado de Tableau que contiene los informes y visualizaciones del desempeño de la red. |

## Enlace a Tableau Public

Puedes ver el informe interactivo completo en Tableau Public a través del siguiente enlace: 


[![Ver en Tableau Public](https://img.shields.io/badge/Ver_Informe_Tableau-E97627?style=for-the-badge&logo=tableau&logoColor=white)](https://public.tableau.com/app/profile/albert.kenyi.apaza.ccalle/viz/DashboardTraficodeRedUPT/DASHBOARD?publish=yes)



## Contexto del Proyecto

Hablamos con el personal de soporte de los turnos de mañana y tarde. En particular, discutimos con el encargado del turno de la tarde sobre la posibilidad de realizar un análisis detallado del consumo de internet por laboratorio. Se destacó que este análisis permitiría evaluar rápidamente si los problemas en un laboratorio podrían estar relacionados con el alto consumo de internet en otros laboratorios. Además, facilitaría la elaboración de informes sobre el consumo de internet para el laboratorio específico en cuestión.

Se estuvo de acuerdo con esta propuesta, pero se recomendó consultar con el ingeniero encargado para obtener la autorización necesaria para el despliegue del sistema en uno de los laboratorios.

## ¿Cómo se realiza?

* Se utiliza un script de Python 
* Tareas programada de Windows

### Librerías utilizadas en el código

- **psutil**: Para obtener estadísticas de uso de recursos del sistema, como CPU, memoria y red.
- **time**: Para manejar operaciones relacionadas con tiempo, como pausas en la ejecución del script.
- **mysql-connector**: Para interactuar con bases de datos MySQL desde Python, permitiendo la inserción y consulta de datos.
- **socket**: Para obtener información de red, como la IP del equipo.
- **ctypes**: Para realizar llamadas a funciones del sistema operativo Windows.


### Problemas encontrados

- **Uso de Python en lugar de PowerShell (.ps1)**: Inicialmente, se intentó realizar el script en PowerShell, pero no proporcionaba correctamente el consumo de red, por lo que decidimos optar por Python, un intérprete muy conocido y con una amplia comunidad de ayuda en foros.
- **Falta de Python en algunas PCs de los laboratorios**: Algunas PCs no tienen Python instalado, lo que dificultaría la instalación del script.
- **Dependencias adicionales**: Ciertas librerías necesarias (como `psutil` y `mysql-connector`) no vienen instaladas de forma predeterminada con Python.
- **Riesgo de eliminación del script**: Es fácil para los estudiantes eliminar el contenido del script en cualquier ordenador.
- **Mover archivos manualmente**: Trasladar archivos a directorios de forma manual lleva tiempo y puede implicar errores humanos.
- **Fácil daño de archivos XLSX por sobreescritura en tiempo real**: Trabajar con archivos Excel para registrar información de red en tiempo real puede generar errores debido a la constante sobreescritura, dañando los archivos y perdiendo datos importantes.


### Soluciones

- **Archivos BAT para instalación**:
  - `instalar_python.bat`: Buscará el archivo `python-3.12.5-amd64.exe` en el lugar donde se encuentre, sin buscar en otras carpetas, y procederá a su instalación.
  - `instalar_dependencias.bat`: Deberá ejecutarse después de finalizar `instalar_python.bat` para instalar las dependencias necesarias.
  - **Tercer archivo BAT**: Copiará un archivo `.vbs` y el script `.py` en un lugar menos accesible para los estudiantes.
  - **Uso de VBS**: Se utiliza un archivo VBS para que al ejecutarse el script no se muestre una consola o ventana de compilación, evitando que el alumno la cierre e interrumpa el proceso de compilación.

### ¿Cómo funciona?

El script actualiza la base de datos `trafico_red_db` en lugar de crear un archivo `trafico_red.xlsx`. La información se divide en columnas y se almacena en la tabla `trafico_red`, obteniendo los siguientes datos:

- Fecha
- IP
- Clase
- Horario
- Día
- Turno
- Laboratorio
- Total Enviado (MB)
- Total Recibido (MB)
- Tema
- Navegador
- Sección
- Docente
- Total Mbps
- Total GB
- Tiempo de Sesión
- Consumo de Energía (kWh)

Lo más importante es el total recibido y enviado, junto al total general de ambos. 

El script realiza actualizaciones en la base de datos respecto al consumo de la computadora (IP) y ya no envía más reportes por Gmail.

### Estructura de la Base de Datos

```sql
DROP TABLE IF EXISTS `trafico_red`;
CREATE TABLE IF NOT EXISTS `trafico_red` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `fecha` date NOT NULL,
  `ip` varchar(255) NOT NULL,
  `clase` varchar(255) NOT NULL,
  `horario` varchar(255) NOT NULL,
  `dia` varchar(255) NOT NULL,
  `turno` varchar(255) NOT NULL,
  `laboratorio` varchar(255) NOT NULL,
  `total_enviado_mb` decimal(10,2) NOT NULL,
  `total_recibido_mb` decimal(10,2) NOT NULL,
  `tema` varchar(255) NOT NULL,
  `navegador` varchar(255) NOT NULL,
  `seccion` varchar(255) NOT NULL,
  `docente` varchar(255) NOT NULL,
  `total_mbps` decimal(20,6) DEFAULT NULL,
  `total_GB` decimal(20,6) DEFAULT NULL,
  `tiempo_sesion` time DEFAULT NULL,
  `consumo_energia_kwh` decimal(20,6) DEFAULT NULL,
  PRIMARY KEY (`id`)
);
```

### Software

- [![Python](https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white)](https://www.python.org/)
- [![Tableau](https://img.shields.io/badge/Tableau-E97627?style=for-the-badge&logo=tableau&logoColor=white)](https://www.tableau.com/)"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u1-tgu01lunaquispemamanihernandezmeza,proyecto,si885-2024-ii-u1-tgu01lunaquispemamanihernandezmeza,True,1936,False,3,True,True,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560313)
# proyecto-formatos-01
# Despliegue de infraestructura en Azure con Terraform

Este proyecto configura los siguientes recursos en Azure utilizando Terraform:

- **Grupo de recursos** llamado `topicos_grupo_MAJEC_rg`.
- **Red virtual** llamada `topicos_grupo_MAJEC_vnet` con un espacio de direcciones `10.0.0.0/16`.
- **Subred** llamada `topicos_grupo_MAJEC_subnet` con el prefijo de direcciones `10.0.1.0/24`.
- **Interfaz de red** llamada `topicos_grupo_MAJEC_nic`.
- **Máquina virtual Linux** llamada `topicos_grupo_MAJEC_vm`, configurada con Ubuntu Server 18.04-LTS y autenticación SSH.

## Información de la máquina virtual

Se ha creado una máquina virtual en Azure con los siguientes detalles:

| **Nombre de la VM**        | **Grupo de recursos**     | **Ubicación** | **Tamaño**        | **Disco del sistema operativo**  | **Dirección IP pública** |
|----------------------------|---------------------------|---------------|-------------------|---------------------------------|--------------------------|
| topicos_grupo_MAJEC_vm      | topicos_grupo_MAJEC_rg    | East US       | Standard_B1ls     | /subscriptions/.../osdisk       | 20.45.10.10              |

## Requisitos

- Terraform
- Cuenta de Azure con los permisos adecuados
- Clave SSH pública en la ruta `C:/Users/PC/.ssh/id_rsa.pub`

## Pasos

1. Clona este repositorio.
2. Define tus variables de Azure en el archivo `terraform.tfvars`.
3. Inicializa Terraform:
    ```bash
    terraform init
    ```
4. Verifica el plan de ejecución:
    ```bash
    terraform plan
    ```
5. Aplica el plan para crear los recursos:
    ```bash
    terraform apply
    ```
Los recursos se crearán en el grupo de recursos de Azure en la región **East US**."
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-pruebas-cano-valverde,proyecto,si8811a-2024-ii-u1-pruebas-cano-valverde,True,3908,False,16,True,True,True,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560930)

# UNIVERSIDAD PRIVADA DE TACNA
## Facultad de Ingeniería
## Escuela profesional de Ingeniería de Sistemas
![Logo de upt](https://net.upt.edu.pe/tdv/assets/dist/img/logo_upt_2024.png)
### Proyecto: Juegos Florales
### Pruebas de Aceptación/Interfaz

### Integrantes:
| ID  | Nombres           | Apellidos           | Código      |
| --- | ----------------- | ------------------- | ----------- |
| 1   | Jean Pier Elias   | Valverde Zamora     | 2020066920  |
| 2   | Anthony Alexander | Cano Sucso          | 2020067573  |
___

## Creacion de test y reportes usando Selenium Grid
- Primero se crea un entorno virtual en la raíz del proyecto y luego se instala las dependencias necesarias:

```python
myenv\Scripts\activate
```
  
### Instalar pytest :

```python
pip install pytest
```
### Instalar allure-pytest para generar reportes con Allure
```python
pip install allure-pytest
```
### Instalar Selenium WebDriver
```python
pip install selenium
```
### Instalar pytest-selenium
```python
pip install pytest-selenium
```
### Instalar pytest-xdist

```python
pip install pytest-xdist
```
### Codigo para correr las pruebas en paralelo:
```python
pytest -n 3 --alluredir=./allure-results
```

### Código para visualizar los reportes en allure:
```powershell
allure serve ./allure-results
```
### Diagrama de selenium grid con allure
```mermaid
graph TD
    A[VS Code - Ejecución de pruebas] -->|Envía pruebas| B[Selenium Grid]
    B -->|Distribución de pruebas| C[Chrome]
    B -->|Distribución de pruebas| D[Firefox]
    B -->|Distribución de pruebas| E[Edge]
    C -->|Resultados de pruebas| F[Allure Reporter]
    D -->|Resultados de pruebas| F[Allure Reporter]
    E -->|Resultados de pruebas| F[Allure Reporter]
    F -->|Generación de reporte| G[Allure Serve]
    C -->|Grabación de video| H[Chrome Video Recorder]
    D -->|Grabación de video| I[Firefox Video Recorder]
    E -->|Grabación de video| J[Edge Video Recorder]
    H --> K[Video de prueba disponible]
    I --> K[Video de prueba disponible]
    J --> K[Video de prueba disponible]
```
### Diagrama del pipeline
```mermaid
graph TD
    Commit([Commit / Push]) --> A[Build]
    A --> B[Test-Setup]
    B --> C[Test]
    C --> D[Test-Complete]
    D --> E[Deploy]

    style A fill:#333,stroke:#fff,stroke-width:2px
    style B fill:#333,stroke:#fff,stroke-width:2px
    style C fill:#333,stroke:#fff,stroke-width:2px
    style D fill:#333,stroke:#fff,stroke-width:2px
    style E fill:#333,stroke:#fff,stroke-width:2px
    style Commit fill:#333,stroke:#fff,stroke-width:2px
```

### Diagrama del funcionamiento del pipeline
```mermaid
graph TD
 
    subgraph Deploy
        E1[Job: deploy]
        E1 --> E2[Deploy Application]
    end

    subgraph Test-Complete
        D1[Job: test-complete]
        D1 --> D2[Complete Testmo Run]
    end

    subgraph Test
        C1[Job: test]
        C1 --> C2[Setup Selenium Services]
        C2 --> C3[Run Pytest Across Browsers: Chrome, Firefox, Edge]
        C3 --> C4[Send Results to Testmo]
        C4 --> C5[Generate Allure Reports]
    end

    subgraph Test-Setup
        B1[Job: test-setup]
        B1 --> B2[Setup Python Environment]
        B2 --> B3[Install Testmo CLI]
        B3 --> B4[Create Testmo Run ID]
    end

    subgraph Build
        A1[Job: build]
        A1 --> A2[Checkout Code]
        A2 --> A3[Run Build Command]
    end

    style A1 fill:#66cc66,stroke:#333,stroke-width:2px
    style B1 fill:#66cc66,stroke:#333,stroke-width:2px
    style C1 fill:#66cc66,stroke:#333,stroke-width:2px
    style D1 fill:#66cc66,stroke:#333,stroke-width:2px
    style E1 fill:#66cc66,stroke:#333,stroke-width:2px

```"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-desarrollo-api-back,proyecto,si8811a-2024-ii-u1-desarrollo-api-back,True,2781,False,14,True,True,False,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560937)

# Terraform Infrastructure as Code for Multi-Component Application

Este proyecto utiliza Terraform para desplegar una infraestructura escalable en AWS que soporta una aplicación con componentes móviles (Flutter), web (React) y un backend API.

## Estructura del Proyecto

```mermaid
graph TD
    A[project] --> B[main.tf]
    A --> C[variables.tf]
    A --> D[outputs.tf]
    A --> E[modules]
    E --> F[mobile_app]
    E --> G[web_app]
    E --> H[docker_host]
    E --> I[mongodb]
    E --> J[grafana]
```

## Componentes

- **Aplicación Móvil (Flutter)**: Alojada en AWS S3.
- **Aplicación Web (React)**: Alojada en AWS S3.
- **Backend API**: Desplegada en instancias EC2 con Docker.
- **Base de Datos**: MongoDB Atlas.
- **Monitoreo**: Grafana Cloud.

## Variables Principales

### Globales
- `environment`: Entorno de despliegue.
- `ec2_key_name`: Nombre de la clave EC2 para acceso SSH.

### Aplicación Móvil (Flutter)
- `flutter_app_bucket_name`: Nombre del bucket S3 para la app Flutter.

### Aplicación Web (React)
- `react_app_bucket_name`: Nombre del bucket S3 para la app React.

### Backend API
- `backend_images`: Lista de imágenes Docker para el backend.

### MongoDB Atlas
- `mongodb_atlas_org_id`: ID de la organización en MongoDB Atlas.
- `mongodb_project_name`: Nombre del proyecto en MongoDB Atlas.
- `mongodb_cluster_name`: Nombre del cluster de MongoDB.
- `mongodb_region`: Región para el cluster de MongoDB.

### Grafana
- `grafana_cloud_api_key`: API Key para Grafana Cloud.

## Uso

1. Asegúrate de tener Terraform instalado y configurado para trabajar con AWS.
2. Clona este repositorio.
3. Navega al directorio del proyecto.
4. Inicializa Terraform: 
terraform init
text
5. Revisa el plan de ejecución:

terraform plan
text
6. Aplica la configuración:

terraform apply
text

## Notas Importantes

- Asegúrate de tener los permisos necesarios en tu cuenta de AWS.
- Revisa y ajusta las variables en `variables.tf` según tus necesidades específicas.
- Considera usar un backend remoto para el estado de Terraform para facilitar la colaboración.

## Contribuciones

Las contribuciones son bienvenidas. Por favor, abre un issue o un pull request para sugerir cambios o mejoras.

## Diagrama
![WhatsApp Image 2024-08-31 at 5 00 33 PM](https://github.com/user-attachments/assets/e3c8a7ba-7751-4262-bae1-f04646c828ba)
https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-automatizado-huallpa_apaza/tree/DesarrolloApiBack

## Licencia

[MIT](https://choosealicense.com/licenses/mit/)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-desarrollo-web,proyecto,si8811a-2024-ii-u1-desarrollo-web,True,266,False,0,True,False,False,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560939)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-pruebas-2-rivera-lupaca,proyecto,si8811a-2024-ii-u1-pruebas-2-rivera-lupaca,True,5028,False,19,True,True,True,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560940)

# UNIVERSIDAD PRIVADA DE TACNA

## Facultad de Ingeniería

## Escuela profesional de Ingeniería de Sistemas

### Proyecto: Juegos Florales

### Pruebas de Aceptación/Interfaz

### Integrantes:

| ID  | Nombres      | Apellidos      | Código     |
| --- | ------------ | -------------- | ---------- |
| 1   | Jhonny       | Rivera Mendoza | 2020067144 |
| 2   | Ronal Daniel | Lupaca Mamani  | 20200671.. |

---

### Diagrama de ejecucion de pruebas local

```mermaid
graph TD
    A[VS Code - Ejecución de pruebas] -->|Código en Python| B[Pytest - Selenium]
    B -->|Conexión a Appium Server| C[Appium Server]
    C -->|Ejecución de pruebas en dispositivo| D[Dispositivo Android]
    B -->|Obtención de elementos| E[Appium Inspector]
    D -->|Resultados de pruebas| F[Allure Reporter]
    D -->|Grabación de video| G[Video de la prueba]
    F -->|Generación de reporte| H[Allure Serve]
    G --> I[Video disponible localmente]

    %% Estilos personalizados
    classDef background fill:#333,stroke:#FFF,stroke-width:2px,color:#FFF;
    classDef steps fill:#444,stroke:#FFF,stroke-width:2px,color:#FFF;

    %% Aplicación de estilos
    class A,B,C,D,E,F,G,H,I background;



```

### Diagrama de ejecucion de pruebas usando BrowserStack

```mermaid
graph TD
    A[VS Code - Ejecución de pruebas] -->|Envía pruebas| B[BrowserStack - Appium]
    B -->|Ejecución en dispositivo Android| C[Dispositivo Android]
    C -->|Resultados de pruebas| D[BrowserStack - Gestión de resultados]
    D -->|Gestión de reportes| E[BrowserStack Reporter]
    D -->|Videos de pruebas| F[BrowserStack - Videos]
    E --> G[Visualización de reportes]
    F --> H[Videos disponibles en BrowserStack]

    style A fill:#333,stroke:#FFF,stroke-width:2px,color:#FFF;
    style B fill:#333,stroke:#FFF,stroke-width:2px,color:#FFF;
    style C fill:#444,stroke:#FFF,stroke-width:2px,color:#FFF;
    style D fill:#444,stroke:#FFF,stroke-width:2px,color:#FFF;
    style E fill:#555,stroke:#FFF,stroke-width:2px,color:#FFF;
    style F fill:#555,stroke:#FFF,stroke-width:2px,color:#FFF;
    style G fill:#666,stroke:#FFF,stroke-width:2px,color:#FFF;
    style H fill:#666,stroke:#FFF,stroke-width:2px,color:#FFF;


```

### Diagrama del pipeline CI/CD

```mermaid
graph TD
    B[Commit al repositorio]
    B --> C[Build del Proyecto]
    C --> D[Test en BrowserStack]
    D --> E[Pruebas con Appium]
    E --> F[Genera Videos y Reportes]
    F --> G[Resultados en Actions]
    G --> H[Publica reportes en Allure]

    %% Estilos personalizados
    classDef background fill:#000,stroke:#FFF,stroke-width:2px,color:#FFF;
    classDef steps fill:#444,stroke:#FFF,stroke-width:2px,color:#FFF;
    classDef important fill:#1E90FF,stroke:#FFF,stroke-width:2px,color:#FFF;

    %% Aplicación de estilos
    class A,B,C,D,E,F,G,H background;
    class D,E,F,G,H important;


```

# Pruebas a la interfaz de Login

### Reporte

Despliegue con github pages
https://upt-faing-epis.github.io/proyecto-si8811a-2024-ii-u1-pruebas-2-rivera-lupaca/#

## Preparando entorno de pruebas

Enlace a la configuracion:
https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-pruebas-2-rivera-lupaca/issues/6

### Requerimientos

- Python
- Appium
- Appium Inspector
- Librerias: Selenium, pytest, allure-pytest, appium-python-client.
- Allure
- Vscode

### Comandos

Instalando las librerias:
Selenium: 

```
pip install selenium
```

Para instalar Appium-python

```
pip install appium-Python-Client==2.0.0
```

Instalando allure-pytest

```
pip install allure-pytest
```

Instalando pytest

```
pip install pytest
```

## BrowserStack para pruebas automatizadas

### Clonamos la plantilla

```
git clone https://github.com/browserstack/pytest-appium-app-browserstack
cd pytest-appium-app-browserstack
```

### Creando entorno de trabajo venv

Dentro del repositorio de pruebas

```
python -m venv env
env\Scripts\activate
pip install -r requirements.txt

```

### Configuramos el browserstack.yml

```
userName: <TuUsuario>
accessKey: <TuAccessKey>
framework: pytest
app: bs://sample.app
platforms:
  - platformName: android
    deviceName: Samsung Galaxy S22 Ultra
    platformVersion: 12.0
  - platformName: android
    deviceName: Google Pixel 7 Pro
    platformVersion: 13.0
  - platformName: android
    deviceName: OnePlus 9
    platformVersion: 11.0
parallelsPerPlatform: 1
browserstackLocal: true
buildName: browserstack-build-1
projectName: BrowserStack Sample
```

### Ejecutamos la prueba

```
cd android
browserstack-sdk pytest -s bstack_sample.py
```

## Resultados

![alt text](/img/browser1.png)
![alt text](/img/browser2.png)
![alt text](/img/browser3.png)

## Imagenes

![alt text](/img/image.png)
![alt text](/img/image-2.png)
![alt text](/img/image-3.png)
![alt text](/img/image-1.png)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle,proyecto,si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle,True,7309,False,28,True,True,True,"1.0
## Imagen de la aplicacion
La aplicacion puede encontrarse en Docker Hub con el nombre de gus322/vj_evento. Pero para ejecutarse requiere obtener la linea de conexion que trabaje con la misma base de datos en MongoDB que cumpla con el modelo trabajado en el proyecto. Por ejemplo: 
```bash
docker run -e VJ_CONNECTION_STRING=""cadena de conexion"" -p 9091:9091 gus322/vj_evento:latest
```
## Base de datos y coleccion
La base de datos debe tener el nombre de ""juegos_florales"" y la coleccion debe tener el nombre de ""Evento""

## Readme de  develop 1 

docker build -t eventos_vj .

docker run -d -p 9091:80 eventos_vj

http://localhost:9091/swagger

## Índice

- [Tecnologías Utilizadas](#tecnologías-utilizadas)
- [Configuración del Proyecto](#configuración-del-proyecto)
- [Uso de Git](#uso-de-git)
- [GitHub Actions-(DockerHub)](#github-actions-DockerHub)
- [Publicación](#publicación)
- [Contribución](#contribución)
- [Documentación](#documentación)

  # Proyecto SI-8811-A

Bienvenido al proyecto SI-8811, una API para gestionar eventos utilizando .NET y MongoDB. Este proyecto está diseñado para facilitar la creación, lectura, actualización y eliminación de eventos en un entorno académico.

  
# Integrantes 
 - Jose Luis Jarro C.
 - Gustavo Alonso Valle Bustamante 

# Diagrama de Uso de la API

# Diagrama de Uso de la API

## Componentes del Diagrama
- **Cliente (Móvil/Web)**: La interfaz que interactúa con la API.
- **API en Elastic**: La API que se despliega en Elastic Beanstalk.
- **MongoDB**: La base de datos donde se almacenan los datos.
- **Docker Hub**: Repositorio de imágenes Docker (si estás usando Docker para contenedores).

## Flujo de Datos
1. El **Cliente** realiza solicitudes a la **API**.
2. La **API** se comunica con **MongoDB** para realizar operaciones CRUD (Crear, Leer, Actualizar, Eliminar).
3. **Docker** puede ser utilizado para empaquetar y desplegar la API, mientras que **Docker Hub** sirve como repositorio de la imagen de la API.

## Diagrama de Uso
```plaintext
+---------------+       +------------------+       +-----------------+
|               |       |                  |       |                 |
|  Cliente      | ----> |      API         | ----> |     MongoDB     |
| (Móvil/Web)   |       |   (Elastic)      |       |   (Base de     |
|               | <---- |                  | <---- |    datos)       |
+---------------+       +------------------+       +-----------------+
      |                         |
      |                         |
      |                         |
      |                         |
      +------------------------>|
            (Docker Hub)       |
                                 |
                                 |
                                 +------------------+
                                 |    Docker Hub     |
                                 +------------------+
  ```

## Explicacion del Diagrama DockerHub implementando en la API (GRafic)

![image](https://github.com/user-attachments/assets/ebe94371-44e8-4410-902a-5d55b8c3030c)

## Detalles de las Operaciones
- GET /api/nombre: Obtiene un recurso por nombre desde MongoDB.
- GET /api/id: Obtiene un recurso por ID desde MongoDB.
- PUT /api/id: Actualiza un recurso existente en MongoDB.
- DELETE /api/id: Elimina un recurso de MongoDB

# Link de docker hub 
'''
https://hub.docker.com/layers/palbertt/proyecto-si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle/latest/images/sha256-c3f301fe87bab319eeea16870779fe9e272c406a5750b307d51e2091440a35f6?context=explore
'''
- ![image](https://github.com/user-attachments/assets/404da337-88f0-4d29-a852-3e467ad9d66d)



## Diagrama Api .Net

![image](https://github.com/user-attachments/assets/0dfa566b-32c6-45bc-b3f7-a10eae949cac)

### Descripción de Componentes APIEventos

- **Cliente**: El usuario o aplicación que hace solicitudes a la API.
- **EventosController**: Controlador que maneja las solicitudes HTTP.
- **MongoDB Eventos**: Base de datos para almacenar los eventos.
- **Validaciones**: Lógica para validar los datos de entrada.
- **Autenticación**: Mecanismo de seguridad para acceso a la API.
- **Manejo de Errores**: Gestión de errores y respuestas adecuadas.
  
### Diagrama de la ApiEventoLocal . net 
```mermaid
flowchart TD
    A[Inicio] --> B[Solicitar evento]
    B --> C{Tipo de operación}
    C -->|Leer| D[Obtener eventos]
    C -->|Crear| E[Crear nuevo evento]
    C -->|Actualizar| F[Actualizar evento existente]
    C -->|Eliminar| G[Eliminar evento]
    
    D --> H[Retornar lista de eventos]
    E --> I[Retornar evento creado]
    F --> J[Retornar evento actualizado]
    G --> K[Retornar confirmación de eliminación]

    H --> L[Fin]
    I --> L
    J --> L
    K --> L

```

## Swagger 

## Pruebas Unitarias Api Eventos 

![image](https://github.com/user-attachments/assets/95e925f7-4585-4db8-80e1-af95a3088cbc)


![image](https://github.com/user-attachments/assets/ac102f8b-4b9a-49ba-add3-803c89ab8419)



## Swagger UI
# API Documentation

Este proyecto incluye una API para gestionar eventos. A continuación se detallan los puntos finales de la API definidos en la interfaz de usuario de Swagger.

## Base URL
`http://161.132.48.189:9091/swagger/index.html`

## Endpoints
![image](https://github.com/user-attachments/assets/937999eb-1c36-4e65-b38e-6e1106279a15)


## Tecnologías Utilizadas

- **.NET Core**: Framework para construir la API.
- **MongoDB**: Base de datos NoSQL para almacenar información de eventos.
- **Git**: Control de versiones.


## Configuración del Proyecto

1. **Clonar el Repositorio**:
   ```bash
   git clone https://github.com/tuusuario/proyecto-si-8811.git
   cd proyecto-si-8811
   ```


## Uso de Git

- Este proyecto utiliza **GitFlow** como modelo de branching. Las ramas se crean para cada nueva característica o corrección de errores, asegurando un flujo de trabajo organizado.
- **Tareas completadas**: Las tareas del proyecto están registradas en **GitHub Projects** y están vinculadas a las respectivas ramas.

## GitHub Actions (DockerHub ) 

- Se han implementado **GitHub Actions** para automatizar la construcción y el despliegue del proyecto, asegurando una integración continua y un despliegue seguro.

## Publicación

- El proyecto ha sido publicado para consumo, pero **no** se encuentra disponible en GitHub.
- Se utilizó **Elastika** para la gestión y despliegue de la API, facilitando el acceso y la escalabilidad del servicio.





## Exposición

- El proyecto ha sido presentado, y se ha utilizado herramientas adecuadas para su exposición. 
- El enfoque y la claridad en la presentación fueron bien recibidos, y se respondieron a las preguntas de manera efectiva.

---

Gracias por tu interés en el proyecto SI-8811. ¡Esperamos tus contribuciones y feedback!

## Swagger UI

## Base URL
`http://161.132.48.189:9091/swagger/index.html`

## Endpoints
![image](https://github.com/user-attachments/assets/937999eb-1c36-4e65-b38e-6e1106279a15)


### Evento
```json
{
  ""id"": ""string"",
  ""nombre"": ""string"",
  ""fechaInicio"": ""string($date-time)"",
  ""fechaTermino"": ""string($date-time)"",
  ""facultad"": ""string"",
  ""resultado"": ""string"",
  ""descripcion"": ""string""
}
```


## mejoras correcciones 
   - Visualizacion de docker hub con automatizacion ( haciendo referencia al proyecto  de apis y funicones valle y jarro )"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-automatizado-huallpa_apaza,proyecto,si8811a-2024-ii-u1-automatizado-huallpa_apaza,True,3962,True,4,False,True,False,"# Documentación del Proyecto

Este repositorio contiene la documentación y los detalles del proyecto relacionado con la automatización y el desarrollo de APIs utilizando Docker. El proyecto es parte de los Juegos Florales de la Universidad Privada de Tacna (UPT) y corresponde al curso de ""Tópicos de Base de Datos Avanzados I"".

## Repositorios de Docker

A continuación, se presentan los enlaces a los repositorios de Docker relacionados con este proyecto:

1. **Proyecto SI8811A 2024-II U1 - APIs y Funciones Meza y Churacutipa**  
   [Repositorio Docker: proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa](https://hub.docker.com/r/palbertt/proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa)

2. **Proyecto SI8811A 2024-II U1 - APIs y Funciones Jarro y Valle**  
   [Repositorio Docker: proyecto-si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle](https://hub.docker.com/r/palbertt/proyecto-si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle)

3. **Proyecto SI8811A 2024-II U1 - API y Funciones Zevallos y Anahua**  
   [Repositorio Docker: proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua](https://hub.docker.com/r/palbertt/proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua)

4. **Automatización**  
   [Repositorio Docker: Automatización](https://hub.docker.com/r/palbertt/automatizacion)

5. **Proyecto SI8811A 2024-II U1 - Pruebas Cano y Valverde**  
   [Repositorio Docker: proyecto-si8811a-2024-ii-u1-pruebas-cano-valverde](https://hub.docker.com/r/palbertt/proyecto-si8811a-2024-ii-u1-pruebas-cano-valverde)

6. **Desarrollo de API Back**  
   [Repositorio Docker: proyecto-si8811a-2024-ii-u1-desarrollo-api-back](https://hub.docker.com/r/palbertt/proyecto-si8811a-2024-ii-u1-desarrollo-api-back)

## Flujo del Trabajo

El siguiente diagrama ilustra el proceso automatizado para realizar el push de las imágenes de Docker a Docker Hub. Este flujo es parte del CI/CD implementado con GitHub Actions:

```mermaid
graph TD;
    A[Inicio: Push a la rama automatizacion] --> B[Checkout del repositorio];
    B --> C[Login en Docker Hub];
    C --> D[Crear un Dockerfile temporal];
    D --> E[Construir la imagen Docker];
    E --> F[Publicar la imagen en Docker Hub];
    F --> G[Fin del flujo de trabajo];
```
## Descripción de las Ramas

Cada rama tiene un propósito específico en el proyecto y está diseñada para facilitar la organización del trabajo y la implementación de diferentes funcionalidades.

- **ApiFuncion**: Esta rama está orientada al desarrollo del CI/CD Pipeline para la API creada con .NET. Se configura para automatizar el proceso de integración y despliegue continuo, utilizando GitHub Actions para construir y enviar la imagen Docker a Docker Hub.

- **ApiFunciones**: En esta rama se enfoca en la automatización del despliegue de una API relacionada con la gestión de lugares. Utiliza GitHub Actions y Docker para la automatización, garantizando que cualquier cambio realizado en el código se despliegue automáticamente en el contenedor.

- **DesarolloApiBack**: Designada por Helbert, esta rama se utiliza para diseñar y documentar la infraestructura del proyecto, incluyendo diagramas y esquemas. Es el espacio donde se desarrollan mejoras en la arquitectura del backend y se prueban nuevas configuraciones.

- **Automatizacion**: En esta rama se implementan pruebas de automatización, asegurando que las configuraciones de los pipelines y las tareas automatizadas funcionen correctamente. Es el entorno principal para experimentar con nuevas estrategias de automatización antes de integrarlas al flujo principal.

## Tecnologías Usadas

El proyecto utiliza las siguientes tecnologías:

- **Docker Hub**
- **GitHub Actions**
- **Terraform**
- **.NET**

Cada una de estas tecnologías juega un papel importante en la automatización, despliegue y gestión de la infraestructura del proyecto.
# videos
https://drive.google.com/file/d/1kC7-Db5IxIF-7vpMhV7qExs1aNemdv30/view?usp=sharing"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua,proyecto,si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua,True,11269,False,14,True,True,True,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560954)
![GitHub release (latest by date)](https://img.shields.io/github/v/release/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua)
![Docker Image Version](https://img.shields.io/docker/v/palbertt/proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua?label=docker&logo=docker)

## API de Lugares

Este repositorio incluye el desarrollo y la documentación de una API diseñada para gestionar lugares, direcciones y categorías. La API utiliza FastAPI como framework y CouchDB para la base de datos. El proyecto permite realizar operaciones CRUD (crear, leer, actualizar, eliminar) sobre estos recursos mediante solicitudes HTTP, y está preparado para ser desplegado con Docker.

## Índice

- [API de Lugares](#api-de-lugares)
- [Índice](#índice)
- [Requisitos](#requisitos)
- [Estructura del Proyecto](#estructura-del-proyecto)
- [Desplegando con Docker Compose](#desplegando-con-docker-compose)
- [Instalación Local](#instalación-local)
- [Usando docker run utilizando la IP del servicio de CouchDB](#usando-docker-run-utilizando-la-ip-del-servicio-de-couchdb)
- [Usando docker run con una red personalizada](#usando-docker-run-con-una-red-personalizada)
- [Eliminar los contenedores creados](#eliminar-los-contenedores-creados)
- [Endpoints](#endpoints)
- [Diagramas](#diagramas)
- [Pruebas](#pruebas)
- [Comandos](#comandos)
- [Video](#video)

## Requisitos

- **Python 3.7+**
- **CouchDB**: Se requiere tener CouchDB corriendo para poder almacenar y recuperar la información de los lugares, direcciones y categorías.
- **FastAPI**: Framework web para construir APIs rápidas y eficientes.
- **Uvicorn**: Servidor ASGI para correr la aplicación de FastAPI.

## Estructura del Proyecto

```plaintext
api_lugares/
│
├── app/
│   ├── __init__.py
│   ├── main.py
│   ├── crud.py
│   ├── models.py
│   ├── schemas.py
│   └── config.py
│
├── tests/
│   ├── __init__.py
│   ├── test_schemas.py
│   └── test_config.py
│
├── docker-compose.yml
├── Dockerfile
└── requirements.txt
└── dev-requirements.txt

```

## Desplegando con Docker Compose

Para levantar los servicios definidos en el archivo docker-compose.yml, utilizamos el comando:

```bash
docker-compose up
```

Otra opcion es ejecutar los contenedores en segundo plano, evitando que los logs se muestren en la consola con la opción -d (detached mode):

```bash
docker-compose up -d
```

Puedes consultar la imagen del proyecto en Docker Hub:

🐳 [Ver imagen en Docker Hub](https://hub.docker.com/repository/docker/maynerac/api-lugares/general)

📦 [Ver imagen en GitHub Container Registry](https://github.com/users/MAYnerAC/packages/container/package/api-lugares)

## Instalación Local

1. Clonar el repositorio:

   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua.git
   ```

2. Navegar al directorio del proyecto:

   ```bash
   cd proyecto-si8811a-2024-ii-u1-api-y-funciones-zevallos-y-anahua/api_lugares
   ```

3. Crear un entorno virtual e instalar las dependencias:

   ```bash
   python -m venv env

   .\env\Scripts\activate

   pip install -r requirements.txt
   ```

4. Configurar las variables de entorno:

   El archivo `config.py` obtiene la URL de CouchDB de las variables de entorno. Debe seguir el formato:

   ```bash
   export COUCHDB_URL=http://usuario:contrasena@localhost:5984
   ```

5. Iniciar el servidor:

   ```bash
   uvicorn main:app --reload
   ```

## Usando docker run utilizando la IP del servicio de CouchDB

1. Iniciamos el contenedor de CouchDB

```bash
docker run -d --name couchdb -p 5984:5984 -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=admin couchdb:latest
```

2. Iniciamos el contenedor de la API Lugares, asegurarnos que ""172.17.0.2"" sea la IP correcta, podemos usar `docker inspect couchdb` para verificarlo

```bash
docker run -d --name fastapi -p 8000:8000 -e COUCHDB_URL=http://admin:admin@172.17.0.2:5984 maynerac/api-lugares:latest
```

## Usando docker run con una red personalizada

1. Creamos la red personalizada antes de crear los servicios por separado

```bash
docker network create apidb_network
```

2. Creamos el servicio `couchdb`, podemos cambiar las variables de entorno `COUCHDB_USER` y `COUCHDB_PASSWORD`

```bash
docker run -d --name couchdb --network apidb_network -p 5984:5984 -v couchdb_data:/opt/couchdb/data -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=admin couchdb:latest
```

3. Creamos el servicio `fastapi`, el formato de `COUCHDB_URL` es `http://usuario:contrasena@localhost:5984`

```bash
docker run -d --name fastapi --network apidb_network -p 8000:8000 -e COUCHDB_URL=http://admin:admin@couchdb:5984 maynerac/api-lugares:latest
```

## Eliminar los contenedores creados

1. Listamos los contenedrores activos y detenidos

```bash
docker ps -a
```

2. Si estan en ejecucion, detenemos los contenedores

```bash
docker stop couchdb
docker stop fastapi
```

3. Eliminamos los contenedores

```bash
docker rm couchdb
docker rm fastapi
```

4. Verificamos su correcta eliminacion

```bash
docker ps -a
```

5. Revisamos si tenemos un volumen creado

```bash
docker volume ls
```

6. Eliminamos los volumnes en caso lo necesitemos (Opcional)

```bash
docker volume rm couchdb_data
```

7. Eliminamos la red personalizada `apidb_network` (Opcional)

```bash
docker network rm apidb_network
```

8. Verificamos que se haya eliminado `apidb_network`

```bash
docker network ls
```

## Endpoints

- **Lugares**

  - `GET /lugares/`: Obtener todos los lugares.
  - `POST /lugares/`: Crear un nuevo lugar.
  - `GET /lugares/{id_lugar}`: Obtener un lugar por su ID.
  - `PUT /lugares/{id_lugar}`: Actualizar un lugar por su ID.
  - `DELETE /lugares/{id_lugar}`: Desactivar un lugar por su ID.

- **Direcciones**

  - `GET /direcciones/`: Obtener todas las direcciones.
  - `POST /direcciones/`: Crear una nueva dirección.
  - `GET /direcciones/{id_direccion}`: Obtener una dirección por su ID.
  - `PUT /direcciones/{id_direccion}`: Actualizar una dirección por su ID.
  - `DELETE /direcciones/{id_direccion}`: Desactivar una dirección por su ID.

- **Categorías**

  - `GET /categorias/`: Obtener todas las categorías.
  - `POST /categorias/`: Crear una nueva categoría.
  - `GET /categorias/{id_categoria}`: Obtener una categoría por su ID.
  - `PUT /categorias/{id_categoria}`: Actualizar una categoría por su ID.
  - `DELETE /categorias/{id_categoria}`: Desactivar una categoría por su ID.

- **Documentación**

  - `GET /docs`: [Documentación Swagger](http://localhost:8000/docs).
  - `GET /redoc`: [Documentación ReDoc](http://localhost:8000/redoc).

- **CouchDB Dashboard**
  - `GET http://localhost:5984/_utils`: [Acceso a la interfaz de CouchDB](http://localhost:5984/_utils).

## Diagramas

- Diagrama de Clases

```mermaid

classDiagram
    class Lugar {
        +int id_lugar
        +string nombre_lugar
        +int direccion_id
        +int capacidad
        +string descripcion
        +float latitud
        +float longitud
        +int id_categoria
    }

    class Direccion {
        +int direccion_id
        +string calle
        +string numero
        +string ciudad
        +string codigo_postal
        +string pais
    }

    class Categoria {
        +int id_categoria
        +string nombre_categoria
    }

    Lugar --> Direccion : tiene
    Lugar --> Categoria : pertenece

```

Este diagrama de clases muestra la relación entre las entidades principales de la API. Cada **Lugar** está asociado con una **Dirección** y una **Categoría**.

- Diagrama de casos de uso

  ![alt text](assets/image-4.png)

- Diagrama del funcionamiento de la API Lugares

```mermaid

graph TD
    subgraph Elastika[Servidor Elastika]
        subgraph Docker[Contenedor - Docker]
            API[API de Lugares]
        end

        subgraph ElasticSearchServer[Contenedor - Docker]
            CouchDB[(CouchDB)]
        end
    end

    Cliente[Cliente - Servicio Web/Móvil]

    API --> |NoSQL| CouchDB
    Cliente --> |Métodos GET, POST, PUT, DELETE| API
    API --> |Respuestas HTTP| Cliente

    style Cliente fill:#b3d9ff,stroke:#333,stroke-width:2px
    style ElasticSearchServer fill:#ffb3b3,stroke:#333,stroke-width:2px
    style Docker fill:#d1e0e0,stroke:#333,stroke-width:2px
    style Elastika fill:#f7d794,stroke:#333,stroke-width:2px
```

## Pruebas

Las pruebas unitarias se ejecutaron correctamente utilizando `pytest`, confirmando que todos los casos de prueba para la API de lugares pasaron sin problemas.

- Se recolectaron 9 items de prueba, incluyendo pruebas para la configuración, el CRUD de lugares, direcciones y categorías.

![alt text](assets/image-6.png)

Puedes acceder a la documentación generada por Swagger en la ruta `/docs`. Esta interfaz permite probar los diferentes endpoints directamente desde el navegador. Para acceder, abre `http://localhost:8000/docs`.

![alt text](assets/image.png)

![alt text](assets/image-5.png)

![alt text](assets/image-1.png)

![alt text](assets/image-2.png)

![alt text](assets/image-3.png)

## Comandos

| **Comando**                     | **Descripción**                                                                   |
| ------------------------------- | --------------------------------------------------------------------------------- |
| `python -m venv env`            | Crea un entorno virtual en Python.                                                |
| `.\env\Scripts\activate`        | Activa el entorno virtual en Windows.                                             |
| `deactivate`                    | Desactiva el entorno virtual.                                                     |
| `pip install fastapi uvicorn`   | Instala FastAPI y Uvicorn en el entorno actual.                                   |
| `pip install couchdb`           | Instala la librería de Python para interactuar con CouchDB.                       |
| `pip freeze > requirements.txt` | Guarda una lista de las dependencias instaladas en un archivo `requirements.txt`. |
| `pytest -v`                     | Ejecuta pruebas unitarias con un nivel detallado de salida (verbose).             |
| `docker ps`                     | Muestra una lista de los contenedores Docker que están corriendo.                 |
| `docker ps -a`                  | Muestra una lista de todos los contenedores Docker, incluyendo los detenidos.     |
| `docker-compose up`             | Levanta los servicios definidos en el archivo docker-compose.yml.                 |
| `docker-compose up -d`          | Ejecuta los servicios de Docker Compose en segundo plano (modo detached).         |
| `uvicorn main:app --reload`     | Ejecuta el servidor FastAPI con recarga automática en caso de cambios.            |

## Video

Explicacion de diferentes aspectos sobre la API de Lugares:

📂 [Ver video de la API de Lugares (Release v0.1.0) - YouTube](https://drive.google.com/file/d/13M5tyNbeWF1lK9fwnD9u-SMbgLkQa6nI/view?usp=sharing)

🎥 [Ver video de la API de Lugares (Release v0.1.0) - Google Drive](https://www.youtube.com/watch?v=_J36U9vYtoo)"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u1-tg05chavezcutipaliraarce,proyecto,si885-2024-ii-u1-tg05chavezcutipaliraarce,True,767,False,1,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15581361)
# PROYECTO “Dashboard de Evaluación Docente: Insights Estadísticos de 'Tu Opinión Cuenta' en la UPT 2024-II”

Alumnos:
- Cesar Fabian Chavez Linares
- Sebastian Arce Bracamonte
- Arnold Cutipa Machaca
- Rodrigo Lira Alvarez
- Duanet Soto

# Artefactos:
- Reportes por Facultad, Escuela y Curso.

## Fuente de Datos:
- Tabla de Datos Generales
- Tabla de FAING
- Tabla de FAU
- Tabla de FACSA
- Tabla de FAEDCOH
- Tabla de FACEM
- Tabla de FADE

URL DE DATOS: https://drive.google.com/drive/folders/1ODCjo8euzIC_VQrtFT2A505b-vVp6dkf?usp=sharing"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u1-hernandez_paja_contreras,proyecto,si784-2024-ii-u1-hernandez_paja_contreras,True,757,False,0,True,False,False,"](https://classroom.github.com/a/OT8lK55O)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15603977)
# **CONTROL ASISTENCIA**
El proyecto de Sistema de Control de Asistencia tiene como objetivo implementar una solución informática que permita gestionar y controlar de manera eficiente la asistencia de empleados o estudiantes en un determinado contexto, como una empresa, institución educativa o cualquier otro entorno donde sea necesario llevar un registro preciso de la asistencia.
Integrantes:
* Alvaro Javier Contres Lipa
* Angel Gadiel Hernandez Cruz  
* Piero Alexander Paja de la Cruz"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u1-ayma_poma_tapia,proyecto,si784-2024-ii-u1-ayma_poma_tapia,True,2297,False,4,True,False,False,"](https://classroom.github.com/a/OT8lK55O)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15603992)

<div align=""center"">
## Proyecto ""Sistema de Gestión Bibliotecaria y Préstamo de Libros""

**INTEGRANTES**  
**Erick Ayma**  
**Fabiola Poma**  
**Dylan Tapia**

---

## Descripción del Proyecto

Este proyecto consiste en el desarrollo de un sistema de gestión bibliotecaria y préstamo de libros que optimiza la administración de recursos bibliográficos. La plataforma permitirá a los bibliotecarios gestionar eficientemente los libros y sus préstamos, al tiempo que facilitará el acceso a la información para los usuarios. Mediante la digitalización de recursos y una interfaz intuitiva, se busca fomentar el uso de la biblioteca, incrementar la participación comunitaria en actividades culturales y educativas, y liberar al personal para que se enfoque en iniciativas que promuevan la lectura.

---

## 💻 Tecnologías Utilizadas
![CSS3](https://img.shields.io/badge/css3-%231572B6.svg?style=for-the-badge&logo=css3&logoColor=white)  
![HTML5](https://img.shields.io/badge/html5-%23E34F26.svg?style=for-the-badge&logo=html5&logoColor=white)  
![MySQL](https://img.shields.io/badge/mysql-4479A1.svg?style=for-the-badge&logo=mysql&logoColor=white)  
![PHP](https://img.shields.io/badge/php-%23777BB4.svg?style=for-the-badge&logo=php&logoColor=white)  
![JavaScript](https://img.shields.io/badge/javascript-%23323330.svg?style=for-the-badge&logo=javascript&logoColor=%23F7DF1E)  

---

## Funcionalidades Principales

- **Gestión de usuarios**: Registro, edición y eliminación de usuarios del sistema.
- **Gestión de libros**: Agregar, modificar y eliminar libros en el sistema.
- **Gestión de préstamos**: Registrar, actualizar y finalizar préstamos de libros.
- **Gestión de autores, editoriales y materias**: Registrar, editar y eliminar autores, editoriales y materias asociadas a los libros.
- **Generación de reportes**: Generación de archivos PDF relacionados con los préstamos y el catálogo de libros.
- **Carga de archivos**: Cargar y gestionar archivos relacionados con los libros, como imágenes de portada o PDFs.


</div>"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u1-FloresR_Salinas_ticahuanca,proyecto,si784-2024-ii-u1-FloresR_Salinas_ticahuanca,True,14805,False,32,True,False,True,"<center>

![Escudo de la Universidad](./media/media/image1.png)

![Logo de la UPT](./media/logo-upt.png)

# **UNIVERSIDAD PRIVADA DE TACNA**

## **FACULTAD DE INGENIERIA**

### **Escuela Profesional de Ingeniería de Sistemas**

## **Proyecto: MEJORAMIENTO DE LA APLICACIÓN PDF SOLUTIONS**

**Curso:** Calidad y Pruebas de Software

**Docente:** Ing. Patrick Jose Cuadros Quiroga

### **Integrantes**

- Mario Antonio Flores Ramos (2018000597)  
- Erick Javier Salinas Condori (2020069046)  
- Fiorela Milady Ticahuanca Cutipa (2020068765)

**Tacna – Perú**
***2024***
</center>

# **Sistema: MEJORAMIENTO DE LA APLICACIÓN PDF SOLUTIONS**

## **Informe de Factibilidad**

### **Versión:** {1.0}

| CONTROL DE VERSIONES | Hecha por | Revisada por | Aprobada por | Fecha        | Motivo               |
| :------------------: | :-------: | :----------: | :----------: | :----------: | :------------------: |
| 1.0                  | MPV      | ELV         | ARV          | 10/10/2020   | Versión Original     |

# **<u>Tema: Mejoramiento de la Aplicación PDF SOLUTIONS</u>**

## 1. **Antecedentes o Introducción**

El presente informe aborda el mejoramiento de la aplicación PDF Solutions, desarrollada para gestionar documentos PDF de manera eficiente y segura. Esta aplicación se ha construido con una arquitectura que integra un sistema de login y suscripciones, ofreciendo diferentes niveles de acceso a los usuarios según su tipo de suscripción. El proyecto se enfoca en proporcionar herramientas para el manejo de archivos PDF, permitiendo a los usuarios realizar tareas como juntar y cortar documentos de manera sencilla y rápida.

PDF Solutions busca resolver problemas comunes en la manipulación de archivos PDF, como la falta de opciones para combinar varios documentos o dividir un archivo grande en secciones más pequeñas. La aplicación está diseñada para ser intuitiva y funcional, ofreciendo una experiencia de usuario amigable y eficiente. Con opciones de suscripción, los usuarios pueden acceder a funcionalidades avanzadas según sus necesidades, asegurando un servicio personalizado y adaptable.

La mejora de esta aplicación tiene como objetivo proporcionar una solución centralizada y accesible para la gestión de archivos PDF, reduciendo los errores y simplificando procesos que tradicionalmente son manuales y tediosos. Además, ofrece una experiencia de usuario optimizada, facilitando la manipulación de documentos y brindando un servicio confiable y eficiente para individuos y empresas que requieren un manejo eficaz de sus archivos PDF.

## 2. **Título**

MEJORAMIENTO DE LA APLICACIÓN PDF SOLUTIONS

## 3. **Autores**

- Flores Ramos, Mario Antonio (2018000597)  
- Salinas Condori, Erick Javier (2020069046)  
- Ticahuanca Cutipa, Fiorela Milady (2020068765)

## 4. **Planteamiento del Problema**

### 4.1. Problema

El manejo y la manipulación de archivos PDF presentan desafíos para muchos usuarios, especialmente cuando se requiere combinar o dividir documentos de manera eficiente. Las herramientas tradicionales o la falta de un sistema especializado dificultan la gestión de archivos, resultando en procesos tediosos y propensos a errores. Además, la ausencia de una plataforma que ofrezca funcionalidades avanzadas de manera intuitiva afecta la productividad y la experiencia del usuario.

Esta situación genera ineficiencias, pérdida de tiempo y una experiencia poco satisfactoria al trabajar con documentos PDF. Por lo tanto, es necesario contar con una aplicación que proporcione una solución centralizada y fácil de usar, que permita gestionar y manipular archivos PDF de forma segura, eficiente y adaptable a las necesidades de los usuarios.

### 4.2. Justificación

La mejora de la aplicación PDF Solutions es fundamental para proporcionar a los usuarios una herramienta eficiente y segura en la gestión de archivos PDF. La implementación de funcionalidades como el login, suscripciones y opciones avanzadas para juntar y cortar PDF permite optimizar la experiencia del usuario y facilita la manipulación de documentos de manera efectiva.

Contar con una solución centralizada y automatizada reduce la complejidad y el tiempo necesario para gestionar archivos PDF, permitiendo a los usuarios realizar estas tareas de manera rápida y precisa. Esto no solo mejora la productividad, sino que también ofrece una experiencia más satisfactoria y accesible, adaptándose a las diversas necesidades de los usuarios. Al brindar un sistema confiable y fácil de usar, se contribuye a la optimización de procesos y a la mejora general de la gestión de documentos PDF.

### 4.3. Alcance

Este documento se enfoca en el mejoramiento de la aplicación PDF Solutions, implementando mejoras en la vista lógica del sistema y asegurando una experiencia de usuario eficiente para la gestión de archivos PDF. Se describen los aspectos fundamentales de las funcionalidades principales, omitiendo detalles específicos de las vistas de procesos.

- **Gestión de archivos PDF**: Implementación de funciones para juntar y cortar archivos PDF, permitiendo a los usuarios manipular documentos de manera sencilla y eficiente.  
- **Sistema de autenticación y suscripciones**: Desarrollo de un sistema de login y gestión de suscripciones, proporcionando acceso controlado a funciones avanzadas según el tipo de suscripción.  
- **Experiencia de usuario optimizada**: Creación de una interfaz de usuario intuitiva y fácil de usar para mejorar la interacción con la aplicación.  
- **Administración de suscripciones**: Gestión de los niveles de acceso y suscripciones de los usuarios, facilitando la administración y actualización de sus permisos.  
- **Seguridad y privacidad**: Garantizar la integridad y confidencialidad de los datos del usuario, ofreciendo un sistema de autenticación seguro.  
- **Vista lógica**: Gestión de usuarios, manipulación de archivos PDF, administración de suscripciones y funcionalidades de control de acceso.  
- **Vista de desarrollo**: Implementación del patrón MVC con C# y ASP.NET Core, estructura organizada del código y uso de buenas prácticas de programación.  
- **Vista física**: Despliegue de la aplicación en un entorno web, asegurando la compatibilidad y el rendimiento en servidores y bases de datos.

## 5. **Objetivos**

### 5.1. General

Optimizar la aplicación PDF Solutions para mejorar la gestión y manipulación de archivos PDF, brindando funcionalidades avanzadas de manera eficiente y fácil de usar.

### 5.2. Específicos

- Implementar la funcionalidad de login y suscripciones: Garantizando un acceso seguro y personalizado para los usuarios según su nivel de suscripción.  
- Desarrollar las opciones para juntar y cortar archivos PDF: Permitiendo que los usuarios realicen estas acciones de manera sencilla y eficiente.  
- Optimizar la experiencia del usuario en la manipulación de archivos PDF: Asegurando un proceso intuitivo y fácil de utilizar.  
- Integrar herramientas de administración para gestionar las suscripciones de los usuarios: Facilitando la modificación y actualización de sus niveles de acceso.  
- Implementar un sistema de validación de usuarios para asegurar la integridad y privacidad de la información.  
- Proveer una interfaz amigable y accesible que permita a los usuarios gestionar y manipular sus documentos PDF de manera efectiva.

## 6. **Referentes Teóricos**

Diagramas de Casos de Uso, Diagrama de Clases, Diagrama de Componentes y Arquitectura.

### Diagrama de Caso de Uso
![Diagrama de Caso de Uso](https://github.com/user-attachments/assets/5d43f136-c0fe-40f2-96fb-d50d65aaafc3)

### Diagrama de Clases
![Diagrama de Clases](https://github.com/user-attachments/assets/b716c096-991f-42a9-9e3c-a017e09fca92)

### Diagrama de Paquetes
![Diagrama de Paquetes](https://github.com/user-attachments/assets/a6e40e6b-df28-4391-ac73-2f9664635c6f)

### Diagrama de Componentes
![Diagrama de Componentes](https://github.com/user-attachments/assets/d1ebb9ec-b4cd-4b74-b24e-f4b3029a8d64)

### Diagramas de Secuencia
- **Caso de Uso: Iniciar Sesión**
  ![Caso de Uso: Iniciar Sesión](https://github.com/user-attachments/assets/911eec05-6dfd-4f75-876b-5c693ebc6237)
- **Caso de Uso: Comprar Suscripción Premium**
  ![Caso de Uso: Comprar Suscripción Premium](https://github.com/user-attachments/assets/10dba624-f948-4bee-bb78-7f1fa05e11ba)
- **Caso de Uso: Fusionar PDF**
  ![Caso de Uso: Fusionar PDF](https://github.com/user-attachments/assets/ebd01d02-586d-45a5-bee5-313e0e56a65b)
- **Caso de Uso: Cortar PDF**
  ![Caso de Uso: Cortar PDF](https://github.com/user-attachments/assets/e0b05229-897c-423c-a3bb-d06b4d599ccf)
- **Caso de Uso: Ver Operaciones Realizadas**
  ![Caso de Uso: Ver Operaciones Realizadas](https://github.com/user-attachments/assets/ad37d5e5-eb57-42ed-8364-b5b290385808)

### Diagrama de Objetos
![Diagrama de Objetos](https://github.com/user-attachments/assets/ab1f4e2c-70f2-4683-9955-756660e89903)

### Diagrama de Arquitectura Software
![Diagrama de Arquitectura Software](https://github.com/user-attachments/assets/c0f661c8-0f71-480b-bea0-c3e6d5e1d9cc)

### Diagrama de Despligue
![image](https://github.com/user-attachments/assets/c04195dd-4d0e-44fa-b64e-9811a891f635)

### Diagrama de Base de datos Relacional
![image](https://github.com/user-attachments/assets/d912c4bf-f7e1-4c77-91c4-a42bb170cba5)

## 10. Desarrollo de la Propuesta

### Análisis de la Aplicación con SonarQube

Aquí podemos ver que pudimos solucionar algunos errores del NUnit.
![Análisis SonarQube 1](https://github.com/user-attachments/assets/443aa8cf-2b79-4a6c-bbcf-096919623123)
![Análisis SonarQube 2](https://github.com/user-attachments/assets/fc12c103-e404-4743-948e-2f9eaf8f8b6f)

Actualmente el código se encuentra así:
![Código Actual](https://github.com/user-attachments/assets/1c2ca288-b04b-48de-a314-ea5c283d6b7f)
![Código Actual 2](https://github.com/user-attachments/assets/46a0f6be-e868-4500-8f90-7f53d00cbc6e)
![Código Actual 3](https://github.com/user-attachments/assets/ff9aa5bb-0791-42fe-bc95-0fb63d66ae3c)
![Código Actual 4](https://github.com/user-attachments/assets/09ae69b8-ddff-42dd-a2e5-3dc4b2c124f7)
![Código Actual 5](https://github.com/user-attachments/assets/e4723c01-4ce7-4c9c-af42-e2f350223d1a)
![Código Actual 6](https://github.com/user-attachments/assets/c6bfc082-9dd0-4bdd-93f0-10b0e49c2737)
![Código Actual 7](https://github.com/user-attachments/assets/33dd65f3-75f2-4f88-9fda-b605664f6812)
![Código Actual 8](https://github.com/user-attachments/assets/f469f806-0f0e-4d52-b7d4-0f20f032b9c9)

### Análisis de la Aplicación con Snyk

![Análisis Snyk 1](https://github.com/user-attachments/assets/b298cae7-3084-4c5b-81ad-d88a131c4e3f)
![Análisis Snyk 2](https://github.com/user-attachments/assets/3de0bca0-3fe6-427a-a21c-7f1848604fa7)
![Análisis Snyk 3](https://github.com/user-attachments/assets/ed723086-3552-42d9-a6b8-103326ec683c)
![Análisis Snyk 4](https://github.com/user-attachments/assets/cafd96cd-af5e-46ba-8c40-b89bad692060)
![Análisis Snyk 5](https://github.com/user-attachments/assets/afb5352c-8109-44c7-998c-5d679ea917ca)
![Análisis Snyk 6](https://github.com/user-attachments/assets/40d0de0d-09b9-4dac-89da-960f5578b84d)
![Análisis Snyk 7](https://github.com/user-attachments/assets/78fa3bf3-e97a-4a3e-a7f1-191f77f46b27)
![Análisis Snyk 8](https://github.com/user-attachments/assets/f779b59c-bedf-4712-b0db-329e15196126)

### Análisis de la Aplicación con Semgrep

![Análisis Semgrep 1](https://github.com/user-attachments/assets/a5d98e8a-b61f-4567-b1d7-71b7eae71a0d)
![Análisis Semgrep 2](https://github.com/user-attachments/assets/8ff40fb3-dbfe-4031-a94d-786656b97d80)

## 7.1. Tecnología de Información

**SonarQube**: Es una herramienta de análisis estático de código que permite revisar automáticamente la calidad del código fuente de la aplicación. SonarQube analiza la base de código y genera reportes sobre posibles errores, vulnerabilidades, deuda técnica, código duplicado y áreas donde se pueden aplicar mejoras. Además, realiza un seguimiento continuo de la calidad del código, integrándose con herramientas de CI/CD como GitHub Actions.

**Snyk**: Snyk es una plataforma de seguridad que se enfoca en la gestión de vulnerabilidades en las dependencias y bibliotecas de código abierto. Durante el análisis, se identifican posibles vulnerabilidades en las dependencias de terceros, lo que permite corregir problemas de seguridad antes de que afecten la producción.

**ASP.NET Core y C#**: El proyecto está desarrollado en ASP.NET Core utilizando el lenguaje de programación C#. Esto permite implementar una aplicación web robusta y escalable, con soporte para múltiples plataformas.

**GitHub y GitHub Actions**: Se utilizó GitHub como sistema de control de versiones y plataforma de colaboración. GitHub Actions se empleó para la integración continua, ejecutando automáticamente los análisis de calidad del código con SonarQube y los análisis de seguridad con Snyk en cada push al repositorio.

**MariaDB/MySQL**: Para la base de datos se utilizó MariaDB, que es una bifurcación de MySQL. Esta tecnología permitió gestionar el almacenamiento de datos de manera eficiente, con soporte para transacciones y consultas complejas.

## 7.2. Metodología y Técnicas Usadas

Para el desarrollo de la aplicación, se adoptaron diversas metodologías y técnicas que permitieron optimizar el flujo de trabajo y asegurar la calidad del producto final. Entre las principales metodologías y técnicas utilizadas se destacan:

- **Desarrollo Ágil con GitHub Projects**: Se utilizó GitHub Projects para la planificación y gestión del trabajo en un entorno ágil. Las tareas se organizaron en tableros Kanban, permitiendo una visibilidad clara del progreso, asignación de tareas y establecimiento de prioridades. Cada tarea se vinculó con issues y pull requests dentro del repositorio, facilitando la colaboración y el seguimiento del avance de las funcionalidades.

- **Integración Continua (CI)**: Se implementó un flujo de integración continua a través de GitHub Actions. Cada vez que se realizaba un cambio en el código (mediante un push o pull request), se ejecutaban pruebas automáticas, análisis de calidad con SonarQube y análisis de seguridad con Snyk, asegurando que el código estuviera siempre en condiciones óptimas para ser fusionado con la rama principal.

- **Análisis Estático de Código**:
  - **SonarQube**: Para garantizar la calidad del código, se realizaron análisis estáticos con SonarQube, que permitió detectar errores, vulnerabilidades, duplicación de código y deuda técnica. Esto ayudó a mantener un código más limpio, eficiente y mantenible.
  - **Snyk**: Se utilizó Snyk para identificar vulnerabilidades en las dependencias de terceros, ofreciendo soluciones y actualizaciones a las bibliotecas vulnerables, mejorando la seguridad general de la aplicación."
UPT-FAING-EPIS/proyecto-si784-2024-ii-u1-chambi_floresq_leyva,proyecto,si784-2024-ii-u1-chambi_floresq_leyva,True,404,False,0,True,False,False,"](https://classroom.github.com/a/OT8lK55O)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15603999)
# proyecto-Softvet
Integrantes:
- Elvis Ronald Leyva Sardon
- Jaime Elias Flores Quispe
- Jerson Roni Chambi Cori
- creacion del release2"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u1-aguilar_caxi_chata,proyecto,si784-2024-ii-u1-aguilar_caxi_chata,True,9564,False,0,True,False,True,"](https://classroom.github.com/a/OT8lK55O)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15604050)


<div align=""center"">
 PROYECTO RUMI
  
![image](https://github.com/user-attachments/assets/2f5eb2d2-d671-49f3-8fd3-7c1416f8fcb3)
  
| Integrantes                       |
|-----------------------------------|
| AGUILAR PINTO Victor Eleazar      |
| CAXI CALANI Luis Eduardo          |
| CHATA CHOQUE Brant Antony         |

</div>


<!DOCTYPE html>
<html lang=""es"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Informe de Auditoría - Proyecto RUMI</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        h1, h2, h3, h4, h5 {
            text-align: center;
        }
        table {
            width: 80%;
            margin: auto;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #000;
            padding: 8px;
            text-align: center;
        }
        ul {
            list-style-type: none;
            text-align: center;
        }
        .center {
            text-align: center;
        }
        .button-container {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin: 20px 0;
        }
        .button-container a img {
            width: 200px;
            height: auto;
        }
        img {
            display: block;
            margin: auto;
        }
    </style>
</head>
<body>

   <center>
        <img src=""./media/logo-upt.png"" alt=""Logo UPT"" style=""width:100px;height:100px;"">
        <h1>UNIVERSIDAD PRIVADA DE TACNA</h1>
        <h2>FACULTAD DE INGENIERIA</h2>
        <h3>Escuela Profesional de Ingeniería de Sistemas</h3>
        <h3>Proyecto <i>RUMI</i></h3>
        <h4>Curso: Calidad y Pruebas de Software</h4>
        <h4>Docente: MSc. Ing. Patrick Jose Cuadros Quiroga</h4>
        <h4>Integrantes:</h4>
        <ul>
            <li><b>CAXI CALANI Luis Eduardo</b> (2018062487)</li>
            <li><b>AGUILAR PINTO Victor Eleazar</b> (2018062487)</li>
            <li><b>CHATA CHOQUE Brant Antony</b> (2018062487)</li>
        </ul>
        <h4>Tacna – Perú, 2024</h4>
    </center>

   <div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

   <h1 class=""center"">Sistema Web de Recompensas por Participaciones para Jóvenes</h1>
    <h2 class=""center"">Informe de Auditoría de Seguridad y Código</h2>
    <h3 class=""center"">Versión 1.0</h3>

    <!-- Botones de revisión -->
   <div class=""button-container"">
        <a href=""https://classroom.github.com/a/OT8lK55O"" target=""_blank"">
            <img src=""https://classroom.github.com/assets/deadline-readme-button-22041afd0340ce965d47ae6ef1cefeee28c7c493a6346c4f15d667ab976d596c.svg"" alt=""Review Assignment Due Date"">
        </a>
        <a href=""https://classroom.github.com/open-in-codespaces?assignment_repo_id=15604050"" target=""_blank"">
            <img src=""https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg"" alt=""Open in Codespaces"">
        </a>
   </div>

   <div align=""center"">
        <h3>PROYECTO RUMI</h3>
        <img src=""https://github.com/user-attachments/assets/2f5eb2d2-d671-49f3-8fd3-7c1416f8fcb3"" alt=""Proyecto RUMI Image"" style=""width:600px;height:auto;"">
        
   <table>
            <thead>
                <tr>
                    <th>Integrantes</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>AGUILAR PINTO Victor Eleazar</td>
                </tr>
                <tr>
                    <td>CAXI CALANI Luis Eduardo</td>
                </tr>
                <tr>
                    <td>CHATA CHOQUE Brant Antony</td>
                </tr>
            </tbody>
        </table>
   </div>

   <div style=""page-break-after: always; visibility: hidden""></div>

   <h3>CONTROL DE VERSIONES</h3>
    <table>
        <thead>
            <tr>
                <th>Versión</th>
                <th>Hecha por</th>
                <th>Revisada por</th>
                <th>Aprobada por</th>
                <th>Fecha</th>
                <th>Motivo</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>1.0</td>
                <td>AC VA LC</td>
                <td>PCQ</td>
                <td>PCQ</td>
                <td>17/09/2024</td>
                <td>Versión Inicial</td>
            </tr>
         <tr>
                <td>2.0</td>
                <td>AC VA LC</td>
                <td>PCQ</td>
                <td>PCQ</td>
                <td>21/09/2024</td>
                <td>Segunda Revision</td>
            </tr>
         <tr>
                <td>3.0</td>
                <td>AC VA LC</td>
                <td>PCQ</td>
                <td>PCQ</td>
                <td>03/10/2024</td>
                <td>Versión Final</td>
            </tr>
        </tbody>
    </table>

   <div style=""page-break-after: always; visibility: hidden""></div>

   <h3 id=""indice-general"">INDICE GENERAL</h3>
    <ul>
        <li><a href=""#resumen"">Resumen</a></li>
        <li><a href=""#antecedentes"">Antecedentes o Introducción</a></li>
        <li><a href=""#planteamiento"">Planteamiento del Problema</a></li>
        <li><a href=""#objetivos"">Objetivos</a></li>
        <li><a href=""#metodologia"">Metodología</a></li>
        <li><a href=""#resultados"">Resultados del Análisis</a></li>
        <li><a href=""#conclusiones"">Conclusiones</a></li>
    </ul>

   <h3 id=""resumen"">Resumen</h3>
    <p>Este informe documenta las auditorías de seguridad y calidad realizadas en la aplicación RUMI utilizando las herramientas Snyk y SonarQube. Los resultados muestran vulnerabilidades y problemas de calidad que deben ser abordados para mejorar la seguridad y mantenibilidad de la aplicación.</p>

   <h3 id=""antecedentes"">Antecedentes o Introducción</h3>
    <p>El proyecto RUMI es una aplicación web que promueve la participación de jóvenes a través de un sistema de recompensas. La auditoría fue realizada como parte del curso ""Calidad y Pruebas de Software"" con el objetivo de identificar vulnerabilidades de seguridad y problemas de calidad del código fuente.</p>

   <h3 id=""planteamiento"">Planteamiento del Problema</h3>
    <p>La auditoría de la aplicación RUMI identificó una serie de problemas críticos en la seguridad y calidad del código, incluyendo:</p>
    <ul>
        <li>Uso de algoritmos de hash inseguros para contraseñas.</li>
        <li>Falta de validación de tokens anti-forgery, exponiendo la aplicación a ataques CSRF.</li>
        <li>Versión obsoleta de bibliotecas, facilitando ataques de XSS.</li>
        <li>Alta duplicación de código que incrementa la deuda técnica y dificulta el mantenimiento.</li>
    </ul>

   <h3 id=""objetivos"">Objetivos</h3>
    <h4>Objetivo General</h4>
    <p>Mejorar la seguridad y la calidad del código de la aplicación RUMI mediante la corrección de vulnerabilidades identificadas y la optimización de las prácticas de desarrollo.</p>
    <h4>Objetivos Específicos</h4>
    <ul>
        <li>Implementar un algoritmo de hash seguro para las contraseñas.</li>
        <li>Habilitar la validación de tokens anti-forgery en los formularios POST.</li>
        <li>Reducir la duplicación de código y mejorar la mantenibilidad.</li>
        <li>Desactivar características de depuración en entornos de producción.</li>
    </ul>

   <h3 id=""metodologia"">Metodología</h3>
    <p>Se utilizaron las siguientes herramientas y metodologías para la auditoría:</p>
    <ul>
        <li><b>Snyk:</b> Para la identificación de vulnerabilidades en las dependencias y código fuente.</li>
        <li><b>SonarQube:</b> Para el análisis estático del código y evaluación de la calidad de desarrollo.</li>
    </ul>
   <!-- Imagen agregada en la sección de Metodología -->
    <h4>Diagrama de Integración Continua</h4>
    <p>A continuación se muestra el flujo del proceso de integración continua para la auditoría de seguridad y calidad del código:</p>
    ![integracion_continua](https://github.com/user-attachments/assets/c4b7c590-dbe1-437d-b79d-1e2eecf997cc)


   <h3 id=""resultados"">Resultados del Análisis</h3>
    <h4>Análisis con Snyk</h4>
    <p>El análisis con Snyk identificó un total de 45 vulnerabilidades, clasificadas como:</p>
    <ul>
        <li>1 de severidad media (habilitación de características de depuración).</li>
        <li>44 de severidad baja (uso de MD5, dependencias obsoletas, falta de validación de tokens).</li>
    </ul>
    <h4>Análisis con SonarQube</h4>
    <p>El análisis con SonarQube reveló:</p>
    <ul>
        <li>2 problemas críticos de seguridad.</li>
        <li>46 Security Hotspots que requieren revisión.</li>
        <li>849 problemas de fiabilidad, incluyendo 9 de alta prioridad.</li>
        <li>25.3% de duplicación de código.</li>
        <li>Cobertura de pruebas del 0%.</li>
    </ul>

   <h3 id=""conclusiones"">Conclusiones</h3>
    <p>Se han identificado varias áreas críticas de mejora en la aplicación RUMI. Se recomienda corregir los problemas de seguridad y reducir la duplicación de código para optimizar la mantenibilidad y reducir la deuda técnica.</p>

   <div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>
</body>
</html>"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa,proyecto,si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa,True,5853,True,17,False,True,True,"# API Flask con Azure AD y MongoDB

## Descripción General

Este proyecto es una API desarrollada en **Flask**, que utiliza **Azure Active Directory (Azure AD)** para la autenticación y **MongoDB** para almacenar perfiles de usuarios y roles. Se implementa un sistema de **control de acceso basado en roles (RBAC)** que asegura que los usuarios solo puedan acceder a las secciones autorizadas de la aplicación.

---

## Objetivos del Proyecto

### 1. **Autenticación con Azure Active Directory (Azure AD)**
- Implementar un sistema de inicio de sesión utilizando **Azure AD** que restringe el acceso solo a los correos electrónicos autorizados de la organización.
  
### 2. **Control de Acceso Basado en Roles**
- Definir y gestionar roles de usuario asignados en **Azure AD** para controlar el acceso a diferentes partes de la aplicación:
  - Los usuarios con el rol **admin** tienen acceso a las secciones administrativas.
  - Los usuarios con el rol **user** tienen acceso a la interfaz de usuario.

### 3. **Seguridad Mejorada**
- Asegurar la validación de tokens y la protección de información sensible mediante conexiones seguras (TLS) y la autenticación de usuarios a través de **Azure AD**.

---

## Flujo de Autenticación

Esta API sigue un flujo de autenticación utilizando **Azure AD** y **MSAL**. El flujo completo se describe a continuación.

### Diagrama de Flujo de Autenticación

```mermaid
graph TD
    A[Usuario] -->|No autenticado| B[Redirige a<br>/login]
    B --> C[Azure AD:<br> autenticación]
    B --> H[Google Cloud:<br> autenticación]
    C --> D[Azure AD<br>devuelve código<br>de autorización]
    H --> I[Google Cloud<br>devuelve código<br>de autorización]
    D --> E[API intercambia<br>código por token]
    I --> E
    E --> F[Obtiene info<br>de perfil y roles]
    F --> G[Redirige a<br>página principal]

```
### Flujo de Control de Acceso Basado en Roles

```mermaid
graph TD
    A[Usuario] --> B[Accede a área restringida]
    B --> C{El usuario tiene<br> el rol adecuado?}
    C -- Sí --> D[Permitir acceso]
    C -- No --> E[Error 403: Acceso denegado]
```
## Tecnologías Utilizadas
- **Flask**: Framework web minimalista para Python.
- **Azure Active Directory (Azure AD)**: Proveedor de autenticación para permitir el acceso con cuentas de Microsoft.
- **MSAL (Microsoft Authentication Library)**: Biblioteca que gestiona la autenticación y la obtención de tokens de Azure AD.
- **MongoDB**: Base de datos NoSQL para almacenar la información de los usuarios.
- **Python Dotenv**: Maneja variables de entorno desde un archivo `.env`.
- **Certifi**: Para asegurar conexiones TLS confiables con MongoDB.
- **Gunicorn**: Servidor WSGI para servir la aplicación Flask en producción.
- **Google Cloud**: Plataforma en la nube que proporciona servicios adicionales como autenticación alternativa, almacenamiento y análisis, y puede complementar la infraestructura junto con Azure, permitiendo un entorno híbrido.

## Instalación y Configuración

### Requisitos Previos
Python 3.12.5 o superior. Cuenta de Azure AD registrada. MongoDB Atlas o cualquier servidor MongoDB.

### Pasos para la Instalación
Clonar el repositorio:
```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa.git
```
Instalar las dependencias:

```bash
cd proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa
pip install -r requirements.txt
```
Configurar las variables de entorno: Crea un archivo .env basado en el archivo .env.example y completa las variables requeridas:
```bash
SECRET_KEY=valor_a_reemplazar
CLIENT_ID=valor_a_reemplazar
CLIENT_SECRET=valor_a_reemplazar
AUTHORITY=valor_a_reemplazar
REDIRECT_PATH=valor_a_reemplazar
MONGO_URI=valor_a_reemplazar
```

Iniciar la aplicación: Ejecuta la aplicación localmente:
```bash
python api_login.py
```

Para entornos de producción, usa Gunicorn:
```bash
gunicorn api_login:app
```
## Uso de Docker Hub
La imagen de la API está disponible en Docker Hub, lo que facilita su despliegue en diferentes entornos sin necesidad de construirla localmente. Puedes acceder a ella en el siguiente enlace:

[Docker Hub - Login API](https://hub.docker.com/repository/docker/marcomeza14/login_api)

## Uso de Docker
El proyecto incluye un archivo `Dockerfile` para facilitar la construcción y despliegue de la aplicación en un contenedor.

### Dockerfile
```dockerfile
# Usa una imagen base oficial de Python
FROM python:3.12.5-slim

# Establece el directorio de trabajo en el contenedor
WORKDIR /app

# Copia los archivos de requisitos al contenedor
COPY requirements.txt ./

# Instala las dependencias
RUN pip install --no-cache-dir -r requirements.txt

# Copia el resto de los archivos de la aplicación al contenedor
COPY . .

# Exponer el puerto en el que la aplicación Flask se ejecutará
EXPOSE 5000

# Define la variable de entorno para Flask
ENV FLASK_APP=api_login.py
ENV FLASK_RUN_HOST=0.0.0.0

# Ejecuta la aplicación Flask
CMD [""flask"", ""run""]
```
Docker Compose
El archivo docker-compose.yml permite gestionar la aplicación y las variables de entorno de forma sencilla.
```yaml
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ""5000:5000""
    env_file:
      - .env
```
### Pasos para ejecutar con Docker

Construir la imagen y ejecutar los contenedores:

```bash
docker-compose build
docker-compose up -d
```
### Base de Datos (MongoDB Atlas)

La API utiliza MongoDB para almacenar la información de los usuarios:

- **Base de Datos**: `db_Upt_Usuarios`
- **Colección**: `Accesos_users`

Los datos almacenados incluyen:

- **email**: Correo electrónico del usuario.
- **name**: Nombre del usuario.
- **roles**: Roles asignados al usuario.
- **status**: Estado de autenticación.
- **last_login**: Última fecha de inicio de sesión.

Video :
[URL Video](https://youtu.be/e52IbrZbrQQ)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-disenio-castaneda-escobar,proyecto,si8811a-2024-ii-u1-disenio-castaneda-escobar,True,55,True,0,False,False,False,# proyecto-si8811a-2024-ii-u1-disenio-castaneda-escobar
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-documentacion,proyecto,si8811a-2024-ii-u1-documentacion,True,31061,True,11,True,True,True,"# Manual de Usuario
## 1. historia de usuario

   ### Desarrollo Web

   Activar filtro de eventos

   https://youtu.be/HW3N5lUZK30

|   Filtrar Eventos               | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Usar un filtro para visualizar los eventos vigentes                                                                                                                              |
| **Para que:**                   | Pueda ver solo los eventos actuales que se encuentran activos y programados                                                                                                       |
| **Criterios de Aceptación**     | - El usuario debe poder ver solo los eventos vigentes una vez aplicado el filtro.<br> - El filtro debe mostrar eventos organizados por fecha y categoría.                          |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con filtros dinámicos que permitan al usuario seleccionar y visualizar los eventos vigentes. También debe contar con un sistema de seguridad robusto para proteger los datos de autenticación y la información de los eventos. |


   Filtrar Eventos por Escuela entre otros:
   
   Facultad Arquitectura y Urbanismo
   
   https://youtu.be/kVukoFvcdJc
   
| Filtro Arquitectura y Urbanismo | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Filtrar los eventos por la Facultad de Arquitectura y Urbanismo                                                                                                                  |
| **Para que:**                   | Pueda ver solo los eventos organizados por la Facultad de Arquitectura y Urbanismo                                                                                                |
| **Criterios de Aceptación**     | - El usuario debe poder aplicar un filtro que muestre únicamente eventos relacionados con la Facultad de Arquitectura y Urbanismo.<br> - Los eventos deben estar organizados por fecha y categoría. |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con un filtro específico para que el usuario seleccione eventos de la Facultad de Arquitectura y Urbanismo. También debe garantizar la seguridad de la información. |
 
   Facultad Ciencias de la Salud

   https://youtu.be/39KIQJcTtpM
   
| Filtro Ciencias de la Salud     | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Filtrar los eventos por la Facultad de Ciencias de la Salud                                                                                                                      |
| **Para que:**                   | Pueda ver solo los eventos organizados por la Facultad de Ciencias de la Salud                                                                                                    |
| **Criterios de Aceptación**     | - El usuario debe poder aplicar un filtro que muestre únicamente eventos relacionados con la Facultad de Ciencias de la Salud.<br> - Los eventos deben estar organizados por fecha y categoría. |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con un filtro específico para que el usuario seleccione eventos de la Facultad de Ciencias de la Salud. También debe garantizar la seguridad de la información. |

   Facultad de Ingeniería

   https://youtu.be/37J0TCnbiII

| Filtro Ingeniería               | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Filtrar los eventos por la Facultad de Ingeniería                                                                                                                                |
| **Para que:**                   | Pueda ver solo los eventos organizados por la Facultad de Ingeniería                                                                                                             |
| **Criterios de Aceptación**     | - El usuario debe poder aplicar un filtro que muestre únicamente eventos relacionados con la Facultad de Ingeniería.<br> - Los eventos deben estar organizados por fecha y categoría. |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con un filtro específico para que el usuario seleccione eventos de la Facultad de Ingeniería. También debe garantizar la seguridad de la información. |

   Facultad Derecho y Ciencias Políticas

   https://youtu.be/Iy6awq4nASg

| Facultad Derecho y Ciencias P.  | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Filtrar los eventos por la Facultad de Ingeniería                                                                                                                                |
| **Para que:**                   | Pueda ver solo los eventos organizados por la Facultad de Ingeniería                                                                                                             |
| **Criterios de Aceptación**     | - El usuario debe poder aplicar un filtro que muestre únicamente eventos relacionados con la Facultad de Ingeniería.<br> - Los eventos deben estar organizados por fecha y categoría. |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con un filtro específico para que el usuario seleccione eventos de la Facultad de Ingeniería. También debe garantizar la seguridad de la información. |

   Facultad de Ciencias Empresariales

   https://youtu.be/h_f-CLEEn5Y

| Facultad de Ciencias Emp.       | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Filtrar los eventos por la Facultad de Ciencias Empresariales                                                                                                                    |
| **Para que:**                   | Pueda ver solo los eventos organizados por la Facultad de Ciencias Empresariales                                                                                                  |
| **Criterios de Aceptación**     | - El usuario debe poder aplicar un filtro que muestre únicamente eventos relacionados con la Facultad de Ciencias Empresariales.<br> - Los eventos deben estar organizados por fecha y categoría. |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con un filtro específico para que el usuario seleccione eventos de la Facultad de Ciencias Empresariales. También debe garantizar la seguridad de la información. |

   Facultades en general

   https://youtu.be/St7qzknR9_A

| Facultades en general           | **Descripción**                                                                                                                                                                   |
|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Como:**                       | Usuario del sistema de juegos florales                                                                                                                                           |
| **Quiero:**                     | Filtrar los eventos entre todas las facultades                                                                                                                                    |
| **Para que:**                   | Pueda ver los eventos organizados por todas las facultades de la universidad                                                                                                      |
| **Criterios de Aceptación**     | - El usuario debe poder aplicar un filtro que muestre todos los eventos de las diferentes facultades.<br> - Los eventos deben estar organizados por fecha y categoría.              |
| **Pantalla de Inicio de Sesión:** | La pantalla inicial debe solicitar al usuario su correo institucional para acceder al sistema. El usuario tiene opción de iniciar sesión manualmente o automáticamente.             |
| **Redirección a Microsoft:**    | Si el usuario selecciona autenticarse con su cuenta institucional, el sistema lo redirige a la página de inicio de sesión de Microsoft para autenticar sus credenciales.           |
| **Autenticación:**              | Una vez autenticado, el sistema debe validar las credenciales y verificar que el usuario esté autorizado a ingresar al sistema de juegos florales. En caso de éxito, el usuario es redirigido al dashboard principal. |
| **Inicio de Sesión Automático:** | Si el usuario ya ha iniciado sesión previamente en el sistema, el inicio de sesión automático permite que acceda directamente sin necesidad de introducir nuevamente las credenciales. |
| **Infraestructura:**            | El sistema debe estar integrado con Azure Active Directory para la autenticación, y debe contar con un filtro que permita seleccionar y visualizar eventos de todas las facultades. También debe garantizar la seguridad de la información. |


   https://youtu.be/akh48sIgeqU

   
## 2. Especificaciones

   
   ### 2.1 Inicio de Sesión

      Requisitos del Sistema
   
     - Pagina Web: React librería necesaria para construir la interfaz de usuario
     - App Mobile: Flutter framework utilizado para crear aplicaciones móviles, web y de escritorio
     - Backend: Python lenguaje de programación de alto nivel, interpretado y de propósito general, conocido por su 
       simplicidad y legibilidad.
   
   ### 2.2 Listar Eventos
  
     Requisitos del Sistema
  
   - Pagina Web: React librería necesaria para construir la interfaz de usuario
   - App Mobile: Flutter framework utilizado para crear aplicaciones móviles, web y de escritorio
   - Backend: C# para el codigo donde se uso MongoDB.Driver



# Manual Tecnico
## 1. Diagrama de Clases

   ### Desarrollo Web
   
```mermaid

classDiagram
    class CountdownTimer {
        +calculateTimeLeft()
        +render()
        -timeLeft: Object
    }
    
    class EventCard {
        +render()
    }
    
    class Footer {
        +render()
    }
    
    class Header {
        +render()
    }
    
    class Home {
        +render()
    }
    
    class Navbar {
        +render()
    }
    
    class Event {
        +nombre: String
        +fechaInicio: String
        +fechaTermino: String
        +facultad: String
    }
    
    class AuthSlice {
        +onChecking()
        +onLogin(payload)
        +onLogout(payload)
    }
    
    class EventSlice {
        +onAddNewEvent(payload)
        +onDeleteEvent()
        +onLoadEvents(payload)
        +onSetActiveEvent(payload)
    }
    
    class Store {
        +configureStore()
    }
    
    class useAuthStore {
        +loginWithGoogle()
        +checkAuthToken()
        +startLogout()
    }
    
    class useEventStore {
        +startLoadingEvents()
    }
    
    class categoriasApi {
        +getCategorias()
    }
    
    class equipoApi {
        +getEquipos()
    }
    
    class eventoApi {
        +getEvents()
    }
    
    class lugaresApi {
        +getLugares()
    }
    
    class participanteApi {
        +getParticipantes()
    }

    Header --> Navbar
    Home --> Header
    Home --> Footer
    Home --> CountdownTimer
    Home --> EventCard
    Home --> Event
    
    EventCard --> Event
    
    AuthSlice --> Store
    EventSlice --> Store
    
    useAuthStore --> AuthSlice
    useEventStore --> EventSlice

    categoriasApi --> Home
    equipoApi --> Home
    eventoApi --> Home
    lugaresApi --> Home
    participanteApi --> Home

    ```
```
Descripción: Este diagrama de clases muestra la estructura de una aplicación web .Consta de tres clases principales: ""App"", ""Login"" y ""Eventos"". La clase ""App"" es la clase central, con un método render(), y se conecta a las otras dos clases mediante relaciones etiquetadas como ""Renders"". La clase ""Login"" tiene métodos para manejar el inicio de sesión (handleLogin()) y renderizar su interfaz. La clase ""Eventos"" maneja la visualización y carga de eventos, con atributos para eventos, estado de carga y errores, y métodos para renderizar y obtener eventos (fetchEvents()). Esta estructura sugiere una arquitectura de componentes típica de frameworks modernos de desarrollo web, donde cada componente es responsable de su propia lógica y representación visual.

### Desarrollo Movil

   ![image](https://github.com/user-attachments/assets/a6a72dcc-68a4-48c2-b672-2725b587b2e2)
   
   Descripción: Este diagrama de clases muestra la estructura de una aplicación, desarrollada con Flutter, que gestiona equipos, participantes y eventos. La aplicación se compone de una clase principal (MyApp), una página de inicio (MyHomePage), un servicio de autenticación (AuthService), y varias pantallas específicas para diferentes funcionalidades. La estructura incluye modelos de datos (Equipo, Participante, Evento) y utiliza navegación entre pantallas, sugiriendo una aplicación bien organizada para la gestión de torneos o eventos deportivos.

   ![diagrama listo 1](https://github.com/user-attachments/assets/63aaf00b-a2c7-41ae-9d5e-c0e3d4c83514)

Descripción: Este diagrama de clases muestra la estructura de una aplicación con tres clases principales: Main, MyApplication y GeneratedPluginRegistrant. La clase Main contiene el método main(), punto de entrada de la aplicación. MyApplication hereda de GtkApplication y gestiona el ciclo de vida de la aplicación con métodos como OnCreate() y OnDestroy(). También utiliza GeneratedPluginRegistrant para registrar plugins. Esta estructura sugiere una aplicación basada en GTK, posiblemente desarrollada con Flutter para desktop, que maneja plugins y tiene una configuración inicial definida.

   ![diagrama 2 listo](https://github.com/user-attachments/assets/f143cb86-66b7-4f3a-83d9-1b87658960c9)
   
Descripción: Este diagrama de clases muestra la estructura de una aplicación Flutter para Windows. Consta de cuatro clases principales: Main (punto de entrada), Runner (inicializa la aplicación), FlutterWindow (maneja la ventana principal de Flutter) y Win32Window (implementación específica para Windows). La jerarquía ilustra cómo la aplicación Flutter se integra con la plataforma Windows, gestionando el ciclo de vida de la ventana y los eventos del sistema. Esta estructura permite que una aplicación Flutter se ejecute como una aplicación de escritorio nativa en Windows.
   

   ### API EVENTOS
```
```
```mermaid

classDiagram
    class Evento {
        +String? Id
        +String Nombre
        +DateTime FechaInicio
        +DateTime FechaTermino
        +String Facultad
        +String Resultado
        +String Descripcion
    }

    class MongoDBSettings {
        +String ConnectionString
        +String DatabaseName
    }

    class EventoService {
        +List<Evento> GetAsync()
        +Evento GetByIdAsync(String id)
        +Evento CreateAsync(Evento nuevoEvento)
        +Evento UpdateAsync(String id, Evento evento)
        +void DeleteAsync(String id)
    }

    class EventoController {
        +ActionResult<IEnumerable<Evento>> GetEventos()
        +ActionResult<Evento> GetEvento(String id)
        +ActionResult<Evento> CreateEvento(Evento evento)
        +ActionResult<Evento> UpdateEvento(String id, Evento evento)
        +ActionResult DeleteEvento(String id)
    }

    EventoController --> EventoService : uses
    EventoService --> Evento : manages
    EventoService --> MongoDBSettings : configures

```

- Clase `Evento`: La clase `Evento` representa la estructura de un evento en el sistema, conteniendo propiedades como el identificador, nombre, fechas de inicio y término, facultad asociada, resultado y una descripción del evento. Esta clase se utiliza para almacenar y transferir datos relacionados con los eventos en la aplicación.

- Clase `MongoDBSettings`: La clase `MongoDBSettings` encapsula la configuración necesaria para conectarse a una base de datos de MongoDB, incluyendo la cadena de conexión y el nombre de la base de datos. Proporciona una forma de gestionar y acceder a estos parámetros de configuración de manera estructurada.

- Clase `EventoService`: La clase `EventoService` se encarga de la lógica de negocio relacionada con la gestión de eventos. Se encarga de interactuar con la base de datos de MongoDB, facilitando operaciones de lectura y escritura sobre los documentos de eventos y asegurando que la lógica del sistema se mantenga separada de los detalles de la base de datos.

- Clase `EventoController`: El `EventoController` actúa como intermediario entre las solicitudes HTTP y el servicio de eventos. Se encarga de recibir y procesar las solicitudes relacionadas con los eventos, delegando la lógica de negocio al `EventoService` y devolviendo las respuestas adecuadas al cliente.

   API LUGARES

```mermaid
classDiagram
    class Lugar {
        +String id_lugar
        +String nombre_lugar
        +String direccion_id
        +int capacidad
        +String descripcion
        +float latitud
        +float longitud
        +String id_categoria
        +int estado
    }

    class Direccion {
        +String direccion_id
        +String calle
        +String numero
        +String ciudad
        +String codigo_postal
        +String pais
        +int estado
    }

    class Categoria {
        +String id_categoria
        +String nombre_categoria
        +int estado
    }

    class LugarCreate {
        +String nombre_lugar
        +String direccion_id
        +int capacidad
        +String descripcion
        +float latitud
        +float longitud
        +String id_categoria
    }

    class DireccionCreate {
        +String calle
        +String numero
        +String ciudad
        +String codigo_postal
        +String pais
    }

    class CategoriaCreate {
        +String nombre_categoria
    }

    Lugar <|-- LugarCreate
    Direccion <|-- DireccionCreate
    Categoria <|-- CategoriaCreate

```
- Clase Lugar: Representa un lugar en el sistema, con propiedades que incluyen el identificador, nombre, dirección, capacidad, descripción, coordenadas geográficas y estado. Esta clase es fundamental para la gestión de lugares dentro de la API, permitiendo operaciones relacionadas con su creación y consulta.

- Clase Direccion: Define la estructura de una dirección, con atributos como identificador, calle, número, ciudad, código postal y país. Incluye un estado que permite gestionar su validez y asociación con los lugares.

- Clase Categoria: Representa la categoría a la que pertenece un lugar, con propiedades que incluyen un identificador y nombre de la categoría. Su estado permite organizar los lugares según diferentes clasificaciones.

- Clase LugarCreate: Extiende la clase Lugar, proporcionando un modelo simplificado para la creación de nuevos lugares. Incluye las propiedades necesarias sin el identificador y estado, facilitando la entrada de datos.

- Clase DireccionCreate: Similar a Direccion, esta clase proporciona un modelo para la creación de nuevas direcciones, omitiendo el identificador y estado para simplificar la entrada de datos.

- Clase CategoriaCreate: Proporciona un modelo para la creación de nuevas categorías, incluyendo solo el nombre de la categoría, lo que permite la adición sencilla de nuevas clasificaciones a la API.

## 2. Arquitectura del Sistema

Desarrollo web

![image](https://github.com/user-attachments/assets/20590a30-b605-4251-ad2b-f80df775d2cc)



Descripción Este diagrama muestra la arquitectura del proyecto de desarrollo web, probablemente utilizando React y Vite. La estructura se divide en carpetas 'public' y 'src', con 'index.html' como punto de entrada. El archivo 'main.jsx' inicializa la aplicación, que renderiza componentes como 'eventos.jsx' y 'login.jsx'. Se incluyen archivos de configuración para herramientas como ESLint, PostCSS y Tailwind, así como archivos de gestión de paquetes y documentación. Esta organización refleja una arquitectura moderna de desarrollo frontend con separación clara de componentes y configuraciones.

Desarrollo Movil

![image](https://github.com/user-attachments/assets/e2ff1da5-5913-4aa1-a881-24c3ecad2228)

API eventos

![image](https://github.com/user-attachments/assets/3820c1ea-801f-4044-8c49-703d98af396f)

Descripción: La estructura sigue un patrón MVC (Model-View-Controller) con capas adicionales de Servicios y Configuración. El núcleo es 'Program.cs', que interactúa con componentes como 'EventoController.cs', 'EventoService.cs', y 'Evento.cs' (modelo). La configuración incluye 'MongoDBSettings.cs' y 'launchSettings.json'. El proyecto parece estar preparado para despliegue con Docker, como lo indica la presencia del 'Dockerfile'.

API Lugares

![image](https://github.com/user-attachments/assets/1a0cc968-7120-4765-805b-93633b92ff1f)

Descripción: Se divide en dos carpetas principales: 'app' y 'tests'. La carpeta 'app' contiene los archivos core de la aplicación (main.py, models.py, crud.py, schemas.py), mientras que 'tests' incluye archivos para pruebas unitarias. El proyecto utiliza Docker para el despliegue (Dockerfile y docker-compose.yml) y maneja dependencias con requirements.txt. Esta estructura sugiere una API bien organizada con separación clara entre código de producción y pruebas.


## 3. Diagrama de Despliegue
Obtenido del Repositorio de Api back donde uso terraform como infraestructura
https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-desarrollo-api-back/tree/main

Infraestructura 

![image](https://github.com/user-attachments/assets/f74bf3a0-662c-4dc8-9a89-13dc59a5fad5)

Backend_api 

![image](https://github.com/user-attachments/assets/495c7c73-6392-4fb8-9be8-e697661165ea)

mobile_app infraestructura

![image](https://github.com/user-attachments/assets/5b5da772-c1b8-4c67-85c3-3819846f86fb)

web_app Infraestructura

![image](https://github.com/user-attachments/assets/fc87ebc4-1524-4fd0-83d3-a033a319bf37)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-desarrollomovil_corrales_viveros,proyecto,si8811a-2024-ii-u1-desarrollomovil_corrales_viveros,True,5016,True,11,True,False,False,"# UPT Eventos App
- Corrales Solis, Moisés Alessandro
- Viveros Blanco, Farley Eduardo
- Poma Manchego, Rene Manuel
  
## Descripción
UPT Eventos es un aplicativo móvil diseñado para la gestión y presentación de Juegos Florales, abarcando disciplinas como canto, baile y declamación. Desarrollado en Dart utilizando Flutter, el sistema está basado en una arquitectura de microservicios para ofrecer escalabilidad y flexibilidad.

## Características
- Visualización de eventos universitarios
- Información detallada de equipos y sus participantes
- Lista de coordinadores (estudiantes y docentes)
- Ubicaciones de eventos con integración de mapas
- Interfaz intuitiva y fácil de usar
  
## Objetivos
- Desarrollar una plataforma móvil que centralice información sobre las disciplinas de los Juegos Florales.
- Implementar microservicios para gestionar el flujo de datos y la interacción entre componentes.
- Proveer una experiencia de usuario intuitiva para inscripción y consulta de información.
- Facilitar la organización del evento mediante herramientas administrativas accesibles

## Tecnologías Utilizadas
- Lenguaje de programación: Dart
- Framework: Flutter
- Microservicios: Node.js y Express
- Base de datos: MongoDB
- Herramientas de desarrollo: Visual Studio Code, Postman, GitHub
- Plataforma de despliegue: Heroku o AWS

## Alacance
El aplicativo incluye:

- Registro de participantes y disciplinas.
- Visualización de horarios y eventos.
- Notificaciones en tiempo real.
- Administración de jurados y evaluación de performances.

## Instalación
1. Clona este repositorio:
git clone https://github.com/tu-usuario/upt-eventos-app.git

2. Navega al directorio del proyecto:
cd upt-eventos-app

3. Instala las dependencias:
flutter pub get

4. Ejecuta la aplicación:
flutter run

El desarrollo comenzó con la definición de requerimientos y la creación de una arquitectura de microservicios. Se implementaron endpoints RESTful para la interacción entre la aplicación y el backend. La interfaz de usuario se diseñó para ser intuitiva, y se integraron notificaciones push para mantener a los usuarios informados sobre cambios relevantes.

## Uso
Después de iniciar la aplicación, podrás:
Ver la lista de eventos próximos
Explorar equipos y sus participantes
Consultar información de coordinadores
Ver ubicaciones de eventos en el mapa

El aplicativo móvil para los Juegos Florales es una solución innovadora que mejora la organización y gestión de eventos culturales. La arquitectura de microservicios optimiza la experiencia del usuario y promueve el interés en disciplinas artísticas. Se recomienda realizar pruebas de usuario y mejoras continuas para asegurar la satisfacción del público objetivo.

## Diagrama de Arquitectura
![Arquitectura](https://github.com/user-attachments/assets/81dc50a8-f548-4c9d-914a-73c57b63b5d7)
La arquitectura de la aplicación móvil está organizada en módulos dentro de la carpeta `lib`, donde cada pantalla gestiona aspectos clave del evento, como el menú, eventos, ubicaciones, equipos y participantes. Además, hay módulos específicos para la coordinación de docentes y estudiantes. La aplicación también incluye servicios, como la autenticación y el archivo principal de inicio. Todo esto se conecta a varias APIs en la nube que gestionan la autenticación, eventos, ubicaciones, equipos y participantes, permitiendo una interacción fluida con datos externos.

## Diagrama de Componentes
![Componentes](https://github.com/user-attachments/assets/1fe9bc2e-0d0a-4d6f-9ac3-5229d9b50a7c)
El diagrama de componentes presenta la arquitectura de la aplicación móvil y su conexión con apis en la nube. La aplicación se divide en varios módulos, cada uno con una funcionalidad específica. El Módulo de Autenticación gestiona el acceso de usuarios a la aplicación, mientras que el Módulo de Eventos se encarga de la administración de los eventos de los Juegos Florales. El Módulo de Ubicaciones proporciona información sobre los lugares donde se llevarán a cabo los eventos, y el Módulo de Equipos facilita la gestión de los equipos participantes. Además, el Módulo de Participantes organiza a los participantes, y existen módulos dedicados a los Coordinadores Docentes y Estudiantes.

## Diagrama de Casos de uso
![Diagrama de casos de uso](https://github.com/user-attachments/assets/385cddbd-daae-4ce2-acfa-e2dc0aeefb66)
En este diagrama de casos de uso se pueden ver los requerimientos con los cumple la aplicación movil y con los que los usuarios van a poder observar y realizar dentro de la aplicación tales como iniciar sesión, visualizar informacion de los juegos florales, contactos, , eventos, participantes etc.

## Diagrama de Clases
![Topicos](https://github.com/user-attachments/assets/88af4503-31bd-4892-8454-27c6e5bb4a72)
En el diagrama de clases, definimos los campos que vamos a utilizar para el desarrollo de la aplicacion, considerando que cuatro clases son las que van vinculadas con las API'S y las otras dos son clases que contienen campos con valores estáticos."
UPT-FAING-EPIS/proyecto-si784-2024-ii-u1-pyfanpage,proyecto,si784-2024-ii-u1-pyfanpage,False,0,False,0,False,False,False,
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u1-documentacion-pruebas-chavez-soto,proyecto,si8811b-2024-ii-u1-documentacion-pruebas-chavez-soto,True,18390,True,44,False,True,True,"# Documentacion del proyecto ""Desarrollo de una aplicación web y móvil para el control de asistencia de estudiantes""

## Requerimientos Funcionales y No Funcionales

### Requerimientos del Sistema

#### Requerimientos Funcionales

1. Rol de Docente:
   - RF1: Permitir a los docentes iniciar sesión de forma segura.
   - RF2: Permitir a los docentes registrar la asistencia de los estudiantes para cada clase.
   - RF3: Generar reportes de asistencia en forma de tablas y gráficos.
   - RF4: Permitir la visualización de tendencias de asistencia por estudiante, clase o período.
   - RF5: Permitir a los docentes modificar registros de asistencia pasados en caso de errores.
   - RF6: Proporcionar una función de búsqueda para encontrar rápidamente estudiantes o clases específicas.
   - RF7: Permitir la exportación de reportes de asistencia en formatos comunes (PDF, Excel).

2. Rol de estudiante:
   - RF8: Permitir a los estudiantes iniciar sesión de forma segura.
   - RF9: Mostrar el resumen de asistencia del estudiante para cada clase.
   - RF10: Enviar notificaciones push a los estudiantes sobre su cantidad de inasistencias.
   - RF11: Permitir a los estudiantes ver un calendario con sus días de asistencia e inasistencia.
   - RF12: Proporcionar una función para que los estudiantes puedan justificar sus inasistencias.

3. Backend:
   - RF13: Implementar una API RESTful para la comunicación entre el frontend y el backend.
   - RF14: Gestionar la autenticación y autorización de usuarios (docentes y estudiantes).
   - RF15: Procesar y almacenar los datos de asistencia en tiempo real.
   - RF16: Generar y enviar notificaciones automáticas basadas en reglas predefinidas.
   - RF17: Proporcionar endpoints para la generación de reportes y análisis de datos.

#### Requerimientos No Funcionales

1. Rendimiento:
   - RNF1: El sistema debe ser capaz de manejar al menos 1000 usuarios concurrentes sin degradación significativa del rendimiento.
   - RNF2: El tiempo de respuesta para las operaciones comunes (como registro de asistencia o consulta) debe ser inferior a 2 segundos.

2. Seguridad:
   - RNF3: Todas las comunicaciones deben estar encriptadas utilizando HTTPS.
   - RNF4: Las contraseñas de los usuarios deben almacenarse de forma segura utilizando algoritmos de hash modernos.
   - RNF5: El sistema debe implementar protección contra ataques comunes (SQL injection, XSS, CSRF).

3. Disponibilidad:
   - RNF6: El sistema debe estar disponible al menos el 99.9% del tiempo (menos de 9 horas de inactividad al año).

4. Escalabilidad:
   - RNF7: La arquitectura debe permitir escalar horizontalmente para manejar un aumento en la carga de usuarios.

5. Usabilidad:
   - RNF8: La interfaz de usuario debe ser intuitiva y requerir un mínimo de entrenamiento para su uso.
   - RNF9: La aplicación móvil debe ser compatible con las últimas versiones de iOS y Android.

6. Mantenibilidad:
   - RNF10: El código debe seguir las mejores prácticas de desarrollo y estar bien documentado.
   - RNF11: Deben implementarse pruebas automatizadas con una cobertura mínima del 80%.

7. Compatibilidad:
   - RNF12: La aplicación web debe ser compatible con las últimas versiones de los navegadores más comunes (Chrome, Firefox, Safari, Edge).

8. Cumplimiento:
   - RNF13: El sistema debe cumplir con las regulaciones de protección de datos aplicables (por ejemplo, GDPR si es aplicable).

9. Recuperación ante desastres:
   - RNF14: Debe implementarse un sistema de respaldo y recuperación que permita la restauración completa de los datos en menos de 4 horas.

10. Internacionalización:
    - RNF15: El sistema debe ser diseñado para soportar múltiples idiomas y formatos de fecha/hora.


## Plan de Proyecto: Sistema de Control de Asistencia de Estudiantes


### 1. Fase de Inicio

- Definir el alcance detallado del proyecto

- Identificar a los stakeholders

- Establecer el equipo del proyecto

- Crear la carta del proyecto

### 2. Fase de Planificación

- Desarrollar el plan de gestión del proyecto

- Crear el cronograma detallado

- Estimar el presupuesto

- Planificar la gestión de riesgos

- Definir los planes de comunicación y calidad

### 3. Fase de Diseño

- Realizar el análisis de requisitos detallado

- Diseñar la arquitectura del sistema

- Diseñar la base de datos

- Crear prototipos de la interfaz de usuario (web y móvil)

- Planificar la infraestructura en Azure

### 4. Fase de Desarrollo

- Configurar el entorno de desarrollo

- Desarrollar el backend (Node.js y Go)

- Desarrollar la aplicación web (JavaScript y JSON)

- Desarrollar la aplicación móvil (MAUI)

- Implementar la infraestructura en Azure usando Terraform

### 5. Fase de Pruebas

- Desarrollar plan de pruebas

- Realizar pruebas unitarias

- Realizar pruebas de integración

- Realizar pruebas de usuario

- Realizar pruebas de seguridad

- Corregir errores y optimizar el rendimiento

### 6. Fase de Implementación

- Preparar la documentación del usuario

- Realizar la capacitación de usuarios (docentes y estudiantes)

- Migrar datos existentes (si es necesario)

- Desplegar el sistema en producción

- Realizar pruebas finales en el entorno de producción

### 7. Fase de Cierre

- Obtener la aceptación formal del cliente

- Cerrar los contratos con proveedores

- Realizar una reunión de retrospectiva del proyecto

- Archivar la documentación del proyecto

- Celebrar el éxito del proyecto

### 8. Fase de Mantenimiento y Soporte

- Establecer procedimientos de soporte
  
- Monitorear el rendimiento del sistema
  
- Realizar actualizaciones y mantenimiento según sea necesario
  
- Recopilar feedback de los usuarios para futuras mejoras

### Consideraciones Adicionales

- Gestión continua de riesgos a lo largo del proyecto
  
- Reuniones regulares de seguimiento con el equipo y los stakeholders
  
- Actualización constante de la documentación del proyecto
  
- Asegurar el cumplimiento de las regulaciones legales sobre manejo de datos de estudiantes
  

## Historias de Usuario

### Docentes

#### HU-D01: Inicio de sesión
Como docente, quiero poder iniciar sesión en la aplicación web de forma segura, para acceder a las funcionalidades del sistema.

#### HU-D02: Generación de reportes
Como docente, quiero poder generar reportes de asistencia en forma de tablas y gráficos, para analizar las tendencias de asistencia.

#### HU-D03: Modificación de registros de asistencia
Como docente, quiero poder modificar registros de asistencia pasados, para corregir errores o actualizar información.

#### HU-D04: Visualización de tendencias
Como docente, quiero poder ver tendencias de asistencia por estudiante, clase o período, para identificar patrones y tomar decisiones informadas.

### Estudiantes

#### HU-E01: Inicio de sesión móvil
Como estudiante, quiero poder iniciar sesión en la aplicación móvil de forma segura, para acceder a mi información de asistencia.

#### HU-E02: Visualización de resumen de asistencia
Como estudiante, quiero poder ver un resumen de mi asistencia para cada clase, para estar al tanto de mi participación.

#### HU-E03: Notificaciones de inasistencias
Como estudiante, quiero recibir notificaciones sobre mi cantidad de inasistencias,
para estar al tanto de mi situación académica.

#### HU-E04: Visualización de calendario de asistencia
Como estudiante, quiero ver un calendario con mis días de asistencia e inasistencia, para tener una visión general de mi participación en clases.

#### HU-E05: Justificación de inasistencias
Como estudiante, quiero poder enviar justificaciones por mis inasistencias, para informar a mis docentes sobre las razones de mis ausencias.

## Diagrama Arquitectura Completo
```mermaid
graph TB
    subgraph ""Frontend""
        WebApp[Aplicación Web JS]
        MobileApp[Aplicación Móvil Flutter]
    end

    subgraph ""Backend""
        APIGateway[API Gateway]
        AuthService[Servicio de Autenticación]
        AttendanceService[Servicio de Gestión de Asistencia]
        NotificationService[Servicio de Notificaciones]
        ReportService[Servicio de Reportes]
    end

    subgraph ""Base de Datos""
        MainDB[(Base de Datos Principal)]
        CacheDB[(Base de Datos de Caché)]
    end

    subgraph ""Azure Cloud""
        AppService[Azure App Service]
        Functions[Azure Functions]
        Storage[Azure Storage]
        RG[Resource Group]
        SA[Storage Account]
        BC[Blob Container]
    end

    WebApp --> APIGateway
    MobileApp --> APIGateway
    APIGateway --> AuthService
    APIGateway --> AttendanceService
    APIGateway --> NotificationService
    APIGateway --> ReportService

    AuthService --> MainDB
    AttendanceService --> MainDB
    AttendanceService --> CacheDB
    NotificationService --> MainDB
    ReportService --> MainDB
    ReportService --> CacheDB

    AppService --> APIGateway
    AppService --> AuthService
    AppService --> AttendanceService
    AppService --> NotificationService
    AppService --> ReportService

    Functions --> NotificationService
    Functions --> ReportService

    Storage --> BC

    RG --> SA
    SA --> BC

    style WebApp fill:#f9f,stroke:#333,stroke-width:2px
    style MobileApp fill:#f9f,stroke:#333,stroke-width:2px
    style APIGateway fill:#bbf,stroke:#333,stroke-width:2px
    style AuthService fill:#bbf,stroke:#333,stroke-width:2px
    style AttendanceService fill:#bbf,stroke:#333,stroke-width:2px
    style NotificationService fill:#bbf,stroke:#333,stroke-width:2px
    style ReportService fill:#bbf,stroke:#333,stroke-width:2px
    style MainDB fill:#bfb,stroke:#333,stroke-width:2px
    style CacheDB fill:#bfb,stroke:#333,stroke-width:2px
    style AppService fill:#fbb,stroke:#333,stroke-width:2px
    style Functions fill:#fbb,stroke:#333,stroke-width:2px
    style Storage fill:#fbb,stroke:#333,stroke-width:2px
    style RG fill:#fbb,stroke:#333,stroke-width:2px
    style SA fill:#fbb,stroke:#333,stroke-width:2px
    style BC fill:#fbb,stroke:#333,stroke-width:2px
```

## Diagrama de Arquitectura: Terraform con Backend Azure

```mermaid
graph TD
    subgraph ""Azure Cloud""
        RG[Resource Group]
        SA[Storage Account]
        BC[Blob Container]
        
        RG --> SA
        SA --> BC
    end
    
    subgraph ""Local Environment""
        TF[Terraform]
        TC[Terraform Configuration Files]
        
        TF --> TC
    end
    
    TF -.-> |Store State| BC
    TF -.-> |Read State| BC
    
    style RG fill:#f9f,stroke:#333,stroke-width:2px
    style SA fill:#bbf,stroke:#333,stroke-width:2px
    style BC fill:#bfb,stroke:#333,stroke-width:2px
    style TF fill:#ff9,stroke:#333,stroke-width:2px
    style TC fill:#f96,stroke:#333,stroke-width:2px
```

Este diagrama muestra la configuración del backend remoto de Terraform en Azure. El Resource Group en Azure contiene una Storage Account, que a su vez alberga un Blob Container. Terraform, ejecutado en el entorno local, interactúa con este Blob Container para almacenar y leer el estado de la infraestructura.

## Diagramas de Clases del Backend

### Diagrama de Clases - Autenticación

```mermaid
classDiagram
    class AuthController {
        +createAccount(email, password)
        +login(email, password)
        +requestConfirmationCode(email)
        +forgotPassword(email)
        +validateToken(token)
        +updatePasswordWithToken(token, newPassword)
        +user()
        -hashPassword(password)
        -checkPassword(password, hashedPassword)
        -generateJWT(user)
    }
    
    class User {
        +email: String
        +password: String
        +confirmed: Boolean
        +save()
        +findOne(query)
    }
    
    class Token {
        +userId: ObjectId
        +token: String
        +createdAt: Date
        +save()
        +findOne(query)
    }
    
    class EmailService {
        +sendConfirmationEmail(email, token)
        +sendPasswordResetEmail(email, token)
    }
    
    AuthController --> User : uses
    AuthController --> Token : uses
    AuthController --> EmailService : uses
```

### Diagrama de Clases - Sincronización

```mermaid
classDiagram
    class SyncController {
        +syncUserData(codigo, contrasena)
        +syncUserSchedule(codigo, contrasena)
        +syncUserAttendance(codigo, contrasena)
        +syncUserCredits(codigo, contrasena)
        -processScheduleData(rawData)
    }
    
    class IntranetSync {
        +autenticar(codigo, contrasena)
        +autenticarYExtraerHorario(codigo, contrasena)
        +autenticarYExtraerAsistencias(codigo, contrasena)
        +autenticarYExtraerCreditos(codigo, contrasena)
    }
    
    class Schedule {
        +userId: ObjectId
        +scheduleData: Object
        +save()
    }
    
    class Attendance {
        +userId: ObjectId
        +attendanceData: Object
        +save()
    }
    
    class Credit {
        +userId: ObjectId
        +creditData: Object
        +save()
    }
    
    SyncController --> IntranetSync : uses
    SyncController --> Schedule : uses
    SyncController --> Attendance : uses
    SyncController --> Credit : uses
```
### Modelo de Datos
```mermaid
classDiagram
    class User {
        +id: ObjectId
        +email: String
        +password: String
        +role: String
        +confirmed: Boolean
    }
    
    class Student {
        +id: ObjectId
        +userId: ObjectId
        +studentCode: String
        +name: String
        +lastName: String
    }
    
    class Teacher {
        +id: ObjectId
        +userId: ObjectId
        +teacherCode: String
        +name: String
        +lastName: String
    }
    
    class Course {
        +id: ObjectId
        +code: String
        +name: String
        +teacherId: ObjectId
    }
    
    class Class {
        +id: ObjectId
        +courseId: ObjectId
        +date: Date
        +startTime: Time
        +endTime: Time
    }
    
    class Attendance {
        +id: ObjectId
        +classId: ObjectId
        +studentId: ObjectId
        +status: String
        +justification: String
    }
    
    class Notification {
        +id: ObjectId
        +userId: ObjectId
        +message: String
        +createdAt: Date
        +read: Boolean
    }
    
    User <|-- Student : extends
    User <|-- Teacher : extends
    Teacher ""1"" -- ""*"" Course : teaches
    Course ""1"" -- ""*"" Class : has
    Class ""1"" -- ""*"" Attendance : records
    Student ""1"" -- ""*"" Attendance : has
    User ""1"" -- ""*"" Notification : receives
```
### Componentes Principales

1. **Frontend**
   - **Aplicación Web (JS)**: Interfaz para docentes desarrollada en JavaScript.
   - **Aplicación Móvil (Flutter)**: Aplicación para estudiantes desarrollada con Flutter.

2. **Backend**
   - **API Gateway**: Punto de entrada único para todas las solicitudes del cliente.
   - **Servicio de Autenticación**: Maneja la autenticación y autorización de usuarios.
   - **Servicio de Gestión de Asistencia**: Procesa y almacena los registros de asistencia.
   - **Servicio de Notificaciones**: Envía notificaciones a los estudiantes.
   - **Servicio de Reportes**: Genera reportes y análisis de asistencia.

3. **Base de Datos**
   - **Base de Datos Principal**: Almacena todos los datos del sistema.
   - **Base de Datos de Caché**: Mejora el rendimiento al almacenar datos frecuentemente accedidos.

4. **Servicios en la Nube (Azure)**
   - **Azure App Service**: Aloja las aplicaciones web y los servicios backend.
   - **Azure Functions**: Maneja tareas programadas y procesamiento en segundo plano.
   - **Azure Storage**: Almacena archivos y datos no estructurados.

# Documentación de la API

## Autenticación

### POST /api/v1/auth/login
Inicia sesión de un usuario.

**Request Body:**
```json
{
  ""email"": ""string"",
  ""password"": ""string""
}
```

**Response:**
```json
{
  ""token"": ""string"",
  ""user"": {
    ""id"": ""string"",
    ""email"": ""string"",
    ""role"": ""string""
  }
}
```

### POST /api/v1/auth/register
Registra un nuevo usuario.

**Request Body:**
```json
{
  ""email"": ""string"",
  ""password"": ""string"",
  ""role"": ""string""
}
```

**Response:**
```json
{
  ""message"": ""User registered successfully"",
  ""user"": {
    ""id"": ""string"",
    ""email"": ""string"",
    ""role"": ""string""
  }
}
```

## Asistencia

### POST /api/v1/attendance/record
Registra la asistencia de un estudiante.

**Request Body:**
```json
{
  ""classId"": ""string"",
  ""studentId"": ""string"",
  ""status"": ""string""
}
```

**Response:**
```json
{
  ""message"": ""Attendance recorded successfully"",
  ""attendance"": {
    ""id"": ""string"",
    ""classId"": ""string"",
    ""studentId"": ""string"",
    ""status"": ""string"",
    ""date"": ""string""
  }
}
```

### GET /api/v1/attendance/student/{studentId}
Obtiene el registro de asistencia de un estudiante.

**Response:**
```json
{
  ""studentId"": ""string"",
  ""attendanceRecords"": [
    {
      ""id"": ""string"",
      ""classId"": ""string"",
      ""status"": ""string"",
      ""date"": ""string""
    }
  ]
}
```

## Reportes

### GET /api/v1/reports/course/{courseId}
Genera un reporte de asistencia para un curso.

**Response:**
```json
{
  ""courseId"": ""string"",
  ""courseName"": ""string"",
  ""attendanceRate"": ""number"",
  ""studentRecords"": [
    {
      ""studentId"": ""string"",
      ""studentName"": ""string"",
      ""attendanceRate"": ""number""
    }
  ]
}
```

### Consideraciones de Seguridad

- Toda la comunicación entre componentes se realiza a través de HTTPS.
- Se implementa autenticación y autorización en todos los niveles del sistema.
- Los datos sensibles se encriptan en tránsito y en reposo.
- Se aplican prácticas de desarrollo seguro y se realizan auditorías de seguridad regulares.

### Escalabilidad y Rendimiento

- Los servicios backend están diseñados como microservicios, permitiendo escalarlos independientemente.
- Se utiliza una base de datos de caché para mejorar el rendimiento de las consultas frecuentes.
- Azure App Service y Azure Functions permiten el escalado automático basado en la demanda.

### Despliegue e Infraestructura

- Se utiliza Terraform para la gestión de la infraestructura como código.
- Los servicios se despliegan en contenedores Docker para garantizar la consistencia entre entornos.
- Se implementan pipelines de CI/CD para automatizar el proceso de despliegue y pruebas.

Esta arquitectura proporciona una base sólida para el sistema de control de asistencia, permitiendo flexibilidad, escalabilidad y mantenibilidad a largo plazo.

# Elaborado por: Cesar Fabian Chavez Linares"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u1-infrastructure,proyecto,si8811b-2024-ii-u1-infrastructure,True,2976,True,6,False,True,False,"# Terraform Azure Infrastructure

Este proyecto de Terraform está diseñado para desplegar y gestionar recursos en Azure. Antes de comenzar con la aplicación del plan de Terraform, debes realizar algunos pasos iniciales para configurar el backend remoto donde se almacenará el estado de Terraform.

## Pasos Iniciales

1. **Crear el Resource Group, Storage Account y Blob Storage**

   Terraform necesita un backend remoto para almacenar el estado. Debes crear manualmente un Resource Group, una Storage Account y un Blob Storage Container en Azure para que Terraform pueda utilizar este backend.

### 1.1 Crear el Resource Group

Utiliza el siguiente comando para crear un Resource Group en Azure CLI:

```bash
az group create --name <RESOURCE_GROUP_NAME> --location <LOCATION>
```
- Reemplaza <RESOURCE_GROUP_NAME> con el nombre deseado para el grupo de recursos.
- Reemplaza <LOCATION> con la región en la que deseas crear el grupo de recursos (por ejemplo, East US).

### 1.2 Crear la Storage Account

Crea una Storage Account en Azure CLI:

```bash
az storage account create --name <STORAGE_ACCOUNT_NAME> --resource-group <RESOURCE_GROUP_NAME> --location <LOCATION> --sku Standard_LRS --kind StorageV2
```
- Reemplaza `<STORAGE_ACCOUNT_NAME>` con el nombre deseado para la cuenta de almacenamiento.
- Reemplaza `<RESOURCE_GROUP_NAME>` con el nombre del grupo de recursos creado en el paso anterior.
- Reemplaza `<LOCATION>` con la región en la que deseas crear la cuenta de almacenamiento.

### 1.3 Crear el Blob Storage Container

Crea un Blob Storage Container en Azure CLI:

```bash
az storage container create --name <BLOB_CONTAINER_NAME> --account-name <STORAGE_ACCOUNT_NAME>
```
- Reemplaza `<BLOB_CONTAINER_NAME>` con el nombre deseado para el contenedor de blobs.
- Reemplaza `<STORAGE_ACCOUNT_NAME>` con el nombre de la cuenta de almacenamiento creada anteriormente.

## Configuración del Backend en Terraform
Una vez que hayas creado el Resource Group, la Storage Account y el Blob Storage Container, debes configurar el backend en tu archivo `backend.tf` para que Terraform utilice el almacenamiento remoto para el estado.
```terraform
terraform {
  backend ""azurerm"" {
    resource_group_name   = ""<RESOURCE_GROUP_NAME>""
    storage_account_name  = ""<STORAGE_ACCOUNT_NAME>""
    container_name        = ""<BLOB_CONTAINER_NAME>""
    key                   = ""terraform.tfstate""
  }
}
```
- Reemplaza `<RESOURCE_GROUP_NAME>`, `<STORAGE_ACCOUNT_NAME>`, y `<BLOB_CONTAINER_NAME>` con los valores que has utilizado para crear los recursos.
## Comandos de Terraform

1. **Inicializar el Directorio de Trabajo**

   Ejecuta el siguiente comando para inicializar el directorio de trabajo y configurar el backend remoto:

   ```bash
   terraform init
    ```
2.  **Aplicar la Configuracion**
    Ejecuta el siguiente comando para aplicar la configuración de Terraform y crear los recursos definidos en los archivos de configuración:
    ```bash
    terraform apply
    ```"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u1-web-hernandez-contreras,proyecto,si8811b-2024-ii-u1-web-hernandez-contreras,True,333,True,1,False,False,False,"# Proyecto React - [Web]

Este es un proyecto creado con **React**. Sirve como base para desarrollar una aplicación web.

## Requisitos Previos

Antes de empezar, asegúrate de tener instalado:

- [Node.js](https://nodejs.org/) (v20.17.0)
- npm (v10.8.2)

Responsables de Web
-Angel Gadiel Hernandez Cruz
-Alvaro Javier Contreras Lipa"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u1-FrontEndWeb,proyecto,si8811b-2024-ii-u1-FrontEndWeb,True,10258,False,14,True,True,False,"![./media/media/image1.png](./media/logo-upt.png)

**UNIVERSIDAD PRIVADA DE TACNA**

**FACULTAD DE INGENIERIA**

**Escuela Profesional de Ingeniería de Sistemas**

**Proyecto _Asistencia UPT_**

Curso: _Topicos de Base de Datos Avanzados I_

Docente: _Patrick Cuadros Quiroga_

Integrantes:

- **Rodrigo Samael Adonai Lira Alvarez (2019063331)**
- **Angelira Beatriz Romero Roque (2019063327)**

**Tacna – Perú**

***2024***

## Descripción General del Proyecto

El software desarrollado es una plataforma integral de gestión de **asistencia**, **sincronización de datos** y **autenticación de usuarios**, diseñada para optimizar y automatizar el control de personal en organizaciones. La solución está compuesta por varios componentes interconectados que permiten a los usuarios realizar tareas clave como el registro de asistencia, la validación de identidad y la sincronización de información entre sistemas remotos y locales.

### Funcionalidades Principales

1. **Autenticación de Usuarios**: El sistema implementa un mecanismo de autenticación robusto, utilizando tokens JWT (JSON Web Token) para gestionar el acceso a las diferentes áreas del sistema. Cada usuario puede registrarse e iniciar sesión utilizando credenciales verificadas, garantizando la seguridad de la plataforma.

2. **Gestión de Asistencia**: La aplicación permite a los usuarios (administradores y empleados) registrar y consultar asistencia en tiempo real. Los administradores pueden visualizar informes detallados de asistencia, verificar ausencias y controlar entradas y salidas en función de las horas trabajadas.

3. **Sincronización de Datos**: La plataforma incluye una funcionalidad de sincronización para gestionar eficientemente la transferencia de datos entre servidores locales y en la nube. Esto asegura que los registros de asistencia y autenticación se mantengan actualizados en tiempo real, incluso en entornos distribuidos.

4. **Interfaz de Usuario Intuitiva**: El frontend de la aplicación está diseñado con una interfaz amigable y fácil de usar, lo que permite a los usuarios acceder a las funciones de la plataforma de manera rápida y eficiente. Se ha utilizado un enfoque responsivo para que la interfaz se adapte a diferentes dispositivos.

5. **API RESTful**: La aplicación expone un conjunto de servicios a través de una API REST, lo que permite a otros sistemas interactuar con la plataforma para obtener y enviar datos. Estos servicios facilitan la integración con sistemas de terceros, como sistemas de nómina o ERPs, para automatizar procesos empresariales clave.

### Componentes Técnicos
- **Frontend**: La interfaz está desarrollada utilizando React (u otro framework JavaScript de preferencia), ofreciendo una experiencia interactiva y dinámica para los usuarios finales.
  
### Objetivos del Proyecto

El objetivo principal del software es ofrecer una solución eficiente y confiable para el manejo de personal en empresas de distintos tamaños, permitiendo:
- Automatizar el proceso de control de asistencia.
- Reducir errores manuales en el registro y validación de información.
- Facilitar la integración de sistemas de información a través de servicios REST.
- Ofrecer un entorno seguro para la gestión de usuarios y datos sensibles.

Este sistema está diseñado para ser escalable y adaptable a diversas necesidades empresariales, mejorando la eficiencia en la gestión de recursos humanos y optimizando los procesos internos.

## Instalación

Sigue los pasos a continuación para instalar las dependencias del proyecto y correr la aplicación correctamente en tu entorno local.

1. **Clonar el Repositorio**

   Primero, clona este repositorio en tu máquina local usando git:

   ```bash
   git clone https://github.com/usuario/nombre-del-repositorio.git](https://github.com/UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u1-FrontEndWeb.git
   
2. **Instalación de Dependencias**

Este proyecto utiliza varias dependencias que deben instalarse antes de ejecutar la aplicación. 

### El Frontend (React):

Instala Node.js: Si aún no tienes Node.js instalado en tu sistema, descárgalo e instálalo desde el sitio oficial de Node.js.

Una vez que tengas Node.js instalado, navega al directorio del frontend (si tu proyecto está separado en un subdirectorio)

```bash
cd sistema-asistencia
```
Instala las dependencias del proyecto usando el siguiente comando:

```bash
npm install
```
Esto instalará todas las dependencias listadas en el archivo package.json.

3. **Ejecutar el Proyecto**

Una vez instaladas las dependencias, puedes ejecutar  el frontend de la siguiente manera.
###Ejecutar el FrontEnd
Navega al directorio del frontend (si está separado):

```bash
cd sistema-asistencia
```
Ejecuta el siguiente comando para iniciar la aplicación frontend:

```bash
npm start
```
4. **Acceder a la aplicacion**
Una vez que el frontend estén en ejecución, puedes acceder a la aplicación desde tu navegador.

-**Interfaz del usuario (Frontend)**: Visita http://localhost:3000 para interactuar con la aplicación.

Esto iniciará la aplicación en modo de desarrollo, y podrás acceder a la interfaz en http://localhost:3000.

## Vistas de la Aplicación

### 1. Login Page (Página de inicio de sesión)
- **Descripción**: Esta es la primera vista que el usuario encuentra. En ella, el usuario ingresa su correo electrónico y contraseña para acceder a la aplicación.
- **Funcionalidad**:
  - Valida las credenciales del usuario contra el endpoint `/api/v1/auth/login`.
  - En caso de credenciales correctas, redirige a la vista de cursos del estudiante.
  - Si el login falla, muestra un mensaje de error.
- **Componentes**:
  - `input`: Para ingresar correo y contraseña.
  - `button`: Botón de envío de formulario.
- **Interacción con la API**:
  - POST a `/api/v1/auth/login` para validar las credenciales.

---

### 2. Student Courses (Cursos del Estudiante)
- **Descripción**: Vista donde se listan todos los cursos a los que está inscrito el estudiante.
- **Funcionalidad**:
  - Muestra una lista de cursos recuperados desde la API (`/api/v1/attendance`).
  - Cada curso está representado por una tarjeta que al hacer clic redirige a los detalles de asistencia del curso.
- **Componentes**:
  - `Tarjetas de curso`: Cada tarjeta representa un curso con el nombre del curso.
- **Interacción con la API**:
  - GET a `/api/v1/attendance` para obtener la lista de asistencias del usuario.

---

### 3. Attendance Details (Detalles de Asistencia)
- **Descripción**: Vista que muestra los detalles de la asistencia para un curso específico.
- **Funcionalidad**:
  - Muestra la lista de asistencias y su estado (presente, ausente, justificado, etc.) para el curso seleccionado.
  - Botón para justificar una inasistencia, que redirige a la vista de justificación.
- **Componentes**:
  - `Lista de asistencias`: Muestra el historial de asistencias por fecha.
  - `Botón Justificar Inasistencia`: Permite al estudiante justificar una falta.
- **Interacción con la API**:
  - GET a `/api/v1/sync/attendance` para obtener los detalles de asistencia del curso seleccionado.

---

### 4. No Attendance (Justificar Inasistencia)
- **Descripción**: Vista donde el estudiante puede justificar una inasistencia.
- **Funcionalidad**:
  - El estudiante puede ingresar los detalles de la justificación.
  - Envía la justificación a la API y regresa a los detalles de asistencia del curso.
- **Componentes**:
  - `Formulario`: Con campos para ingresar el asunto y los detalles de la justificación.
  - `Botón Enviar`: Envía la justificación a la API.
- **Interacción con la API**:
  - POST a `/api/v1/sync/justify-absence` para justificar la inasistencia.

---

## Descripción de las Vistas y Flujo de la Aplicación

- **Login Page**: Permite que el usuario ingrese sus credenciales y acceda a la aplicación. La autenticación se realiza a través de la API, y al autenticar correctamente, el usuario es redirigido a la página de cursos.
  
- **Student Courses**: Una vez autenticado, el estudiante verá una lista de los cursos a los que está inscrito. Cada curso está representado por una tarjeta que, al hacer clic, llevará al estudiante a la vista de detalles de asistencia de ese curso.

- **Attendance Details**: En esta página, el estudiante puede ver el historial de asistencias para el curso seleccionado, incluidas las fechas y el estado de cada asistencia (presente, ausente, justificado). Además, hay un botón para justificar una ausencia, lo que llevará al estudiante a la vista ""No Attendance"".

- **No Attendance**: Aquí, el estudiante puede llenar un formulario para justificar una inasistencia en un curso. Después de enviar el formulario, la justificación es enviada al servidor a través de la API y el estudiante es redirigido de vuelta a los detalles de asistencia del curso.

## Diagrama de Secuencia: Autenticación, Sincronización y Asistencia

```mermaid
sequenceDiagram
    participant Usuario
    participant Frontend
    participant API

    Usuario->>Frontend: Ingresa credenciales (email, contraseña)
    Frontend->>API: POST /api/v1/auth/login
    API-->>Frontend: Token de autenticación
    Frontend-->>Usuario: Redirige a StudentCourses

    Usuario->>Frontend: Ve cursos
    Frontend->>API: GET /api/v1/attendance
    API-->>Frontend: Lista de cursos y asistencias
    Frontend-->>Usuario: Muestra cursos como tarjetas

    Usuario->>Frontend: Selecciona un curso
    Frontend->>API: GET /api/v1/attendance (curso específico)
    API-->>Frontend: Detalles de asistencia del curso
    Frontend-->>Usuario: Muestra detalles de asistencia
 ```
## Diagrama de Componentes

```mermaid
graph TB
  subgraph Frontend
    component1[Login]
    component2[Student Courses]
    component3[Attendance Details]
    component4[No Attendance Justification]
  end

  subgraph Backend (API)
    api1[/api/v1/auth/login/ (POST)]
    api2[/api/v1/attendance/ (GET, POST, PUT)]
    api3[/api/v1/sync/data/ (POST)]
    api4[/api/v1/sync/schedule/ (POST)]
    api5[/api/v1/sync/attendance/ (POST)]
    api6[/api/v1/auth/create-account/ (POST)]
  end

  subgraph Database
    db1[(Users)]
    db2[(Courses)]
    db3[(Attendances)]
  end

  component1 --> api1
  component2 --> api2
  component3 --> api5
  component4 --> api5
  api1 --> db1
  api2 --> db3
  api5 --> db3
```"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u1-backend-go,proyecto,si8811b-2024-ii-u1-backend-go,True,223,False,0,True,False,False,[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15707753)
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-web-development,proyecto,si8811a-2024-ii-u1-web-development,True,5887,True,9,False,True,False,"# Juegos Florales - Proyecto React

Este proyecto es una plataforma web para visualizar las participaciones y los ganadores de cada facultad en los Juegos Florales organizados por la universidad. Está construido utilizando **React** para la interfaz de usuario y tiene como objetivo presentar de manera clara y atractiva los resultados de las competencias.

## Descripción 📄

La aplicación permite a los usuarios navegar a través de las diferentes categorías de los Juegos Florales, ver las participaciones de las distintas facultades y conocer a los ganadores de cada una de las competencias. Además, presenta una interfaz moderna y fácil de usar, diseñada para resaltar la creatividad y talento de los participantes.

## Tecnologías Utilizadas 🚀

- **React** - Framework de JavaScript para la construcción de interfaces de usuario.
- **Vite** - Herramienta de desarrollo rápida para React.
- **Tailwind CSS** - Framework de estilos para una interfaz moderna y responsiva.

## Características ✨

- Visualización de participaciones de cada facultad.
- Presentación de los ganadores de cada categoría.
- Interfaz intuitiva con un diseño responsivo.
- Navegación por categorías y facultades.
- Búsqueda rápida y filtrado de resultados.

## Requisitos 📋

Antes de ejecutar la aplicación, asegúrate de tener instalados los siguientes requisitos:

- **Node.js** (versión 14.0 o superior).
- **npm** (versión 6.0 o superior) o **yarn** como gestor de dependencias.
- **Git** para clonar el repositorio.

## Instalación 🔧

Para configurar el entorno de desarrollo en tu máquina local, sigue estos pasos:

1. Clona este repositorio:
   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-web-development.git

## Instalación 🔧

Para configurar el entorno de desarrollo en tu máquina local, sigue estos pasos:

1. Clona este repositorio:
   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-web-development.git
   ```

2. Accede al directorio del proyecto:
   ```bash
   cd proyecto-si8811a-2024-ii-u1-web-development
   ```

3. Instala las dependencias necesarias:
   ```bash
   npm install
   ```
   o, si usas **yarn**:
   ```bash
   yarn install
   ```

## Comandos Disponibles 📦

- **`npm start`** - Inicia la aplicación en modo de desarrollo en [http://localhost:3000](http://localhost:3000).
- **`npm run build`** - Genera una compilación optimizada para producción.
- **`npm test`** - Ejecuta las pruebas unitarias del proyecto.
- **`npm run lint`** - Revisa el código en busca de errores y malas prácticas.

## Estructura del Proyecto 📁

```plaintext
proyecto-si8811a-2024-ii-u1-web-development/
├── .scannerwork/         # Archivos generados por el analizador de código
├── public/               # Archivos públicos como index.html y favicons
├── src/                  # Código fuente del proyecto
│   ├── api/              # Servicios y llamadas a API
│   │   └── services/
│   ├── assets/           # Imágenes y recursos estáticos (ej. fuentes)
│   ├── components/       # Componentes reutilizables de la aplicación
│   │   └── layouts/      # Layouts y estructuras de páginas
│   ├── constants/        # Constantes y configuraciones del proyecto
│   ├── hooks/            # Custom hooks de React
│   ├── pages/            # Páginas principales de la aplicación
│   ├── router/           # Configuración de rutas
│   ├── store/            # Gestión de estado (Redux o Context API)
│   │   ├── auth/
│   │   └── event/
│   └── utils/            # Funciones utilitarias y helpers
├── tests/                # Pruebas unitarias y de integración
│   └── components/
├── .dockerignore         # Ignorar archivos para Docker
├── .env.template         # Variables de entorno (plantilla)
├── .eslintrc             # Configuración de ESLint para la calidad del código
├── .gitignore            # Archivos y directorios ignorados por Git
├── babel.config.cjs      # Configuración de Babel para la transpilación de ES6
├── eslint.config.js      # Reglas personalizadas para ESLint
├── jest.config.cjs       # Configuración para pruebas con Jest
├── jest.setup.js         # Configuración inicial de Jest
├── jsconfig.json         # Configuración para la integración con editores
├── nginx.conf            # Configuración para despliegue con Nginx
├── package-lock.json     # Información sobre las dependencias instaladas
├── package.json          # Dependencias y scripts del proyecto
├── postcss.config.js     # Configuración para PostCSS
├── tailwind.config.js    # Configuración de Tailwind CSS
├── vite.config.js        # Configuración de Vite para el entorno de desarrollo
└── README.md             # Documentación del proyecto
```

## Cómo Usar el Proyecto 🖥️

1. Asegúrate de tener Docker instalado.
2. Abre una terminal.
3. Ejecuta el siguiente comando:

```bash
docker run -d -p 8080:80 --name juegosflorales ghcr.io/upt-faing-epis/proyecto-si8811a-2024-ii-u1-web-development/juegosflorales:latest
```
4. Abre [http://localhost:8080](http://localhost:8080/) para ver la aplicación en tu navegador.


```mermaid
%%{ init : { ""theme"" : ""default"" } }%%
%%{ config: { ""themeVariables"": { ""actorFill"": ""#f9f"", ""actorStroke"": ""#f00"" } } }%%
%%{flowchart: {usecase: {}}}%%

classDiagram
    class Usuario {
        <<Actor>>
    }
    
    class VisualizarHome
    class ConsultarEventos
    class VerEquipos
    class VerParticipantes
    class ExplorarLugares
    class AccederInformacion
    class IniciarSesion

    Usuario --> VisualizarHome
    Usuario --> ConsultarEventos
    Usuario --> VerEquipos
    Usuario --> VerParticipantes
    Usuario --> ExplorarLugares
    Usuario --> AccederInformacion
    Usuario --> IniciarSesion

    VisualizarHome --> ConsultarEventos
    VisualizarHome --> VerEquipos
    VisualizarHome --> VerParticipantes
    VisualizarHome --> ExplorarLugares
    VisualizarHome --> AccederInformacion"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-pruebas-3-roberto-y-piero,proyecto,si8811a-2024-ii-u1-pruebas-3-roberto-y-piero,True,266,False,0,True,False,False,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15709142)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-disenio,proyecto,si8811a-2024-ii-u1-disenio,True,266,False,0,True,False,False,"](https://classroom.github.com/a/vK6WBQ1t)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15709320)"
UPT-FAING-EPIS/si8811a_2024-ii-proyecto_si8811a_2024_ii_u2-proyecto-formatos-01,si8811a_2024,ii-proyecto_si8811a_2024_ii_u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-qa-pruebas-valverde-cano,proyecto,si8811a-2024-ii-u2-qa-pruebas-valverde-cano,True,11128,True,39,True,True,True,"# Universidad Privada de Tacna
## Facultad de Ingenieria
### Escuela Profesional de Ingenieria de sistemas
![image](https://github.com/user-attachments/assets/71b9fd52-c686-4821-b105-6ca745d4e950)
### Paquete del Grupo de QA-WEB
### Integrantes:
| Nombres | Apellidos | Código |
|---------|-----------|---------|
| Jean Pier Elias | Valverde Zamora | 2020066920 |
| Anthony Alexander | Cano Sucso | 2020067573 |

____
## COntinuación del proyecto 
![Proyecto-Qa-Web](https://github.com/JeanValverde24/SI-8811-Pruebas_QA_U2_VALVERDE_CANO)
___

## Diagrama de Clases
![image](https://github.com/user-attachments/assets/46949599-0da3-4488-b6aa-4f3c9b3799c1)

## Diagrama de paquetes

![image](https://github.com/user-attachments/assets/6a8cb4f2-12de-43a0-8b30-2ce41b011d78)

## Diagrama de Componentes

![image](https://github.com/user-attachments/assets/8000138b-0407-45fb-a539-b1f084d420b2)


## Diagrama de Arquitectura
![image](https://github.com/user-attachments/assets/a8320d26-2ddc-4e90-802a-63a3ad79eb32)


# TeamWebQaUPT

**TeamWebQaUPT** es un paquete disenado para realizar pruebas automatizadas de interfaces web utilizando Selenium y pytest.  
Proporciona herramientas reutilizables y faciles de usar para simplificar el proceso de pruebas.

# Novedades en la Versión 1.1.31 de TeamWebQaUPT

**TeamWebQaUPT** ha sido actualizado para incluir mejoras significativas y nuevas funcionalidades que amplían las capacidades del paquete y simplifican las pruebas automatizadas en diversas plataformas.

---

## **Nuevas Funcionalidades**

### **1. Soporte para Pruebas Paralelas en Múltiples Navegadores**
- Las pruebas ahora pueden ejecutarse simultáneamente en **Chrome**, **Firefox** y **Edge**.
- Esto es posible gracias a la parametrización de navegadores en la fixture `driver` del archivo `conftest.py`.

---

### **2. Compatibilidad con Dropdowns y Menús en Frameworks Modernos**
- Las funciones para interactuar con **dropdowns** y **listboxes** ahora son compatibles con aplicaciones hechas en React, HTML estándar y otros frameworks.
- **Uso Ejemplo**:
    ```python
    from TeamWebQaUPT.utils import select_dropdown_option

    select_dropdown_option(driver, ""button[role='combobox']"", ""Option Text"")
    ```

---

### **3. Redirección Mediante LinkLabels**
- Nueva función `navigate_linklabel` para manejar redirecciones usando etiquetas de enlace (LinkLabels).
- **Uso Ejemplo**:
    ```python
    from TeamWebQaUPT.utils import navigate_linklabel

    navigate_linklabel(driver, ""a[data-testid='link']"", ""https://example.com/target"")
    ```

---

### **4. Navegación Mejorada por Menús**
- La función `navigate_menu` ha sido optimizada para validar automáticamente las redirecciones de URLs en menús dinámicos.
- **Uso Ejemplo**:
    ```python
    from TeamWebQaUPT.utils import navigate_menu

    navigate_menu(
        driver,
        menu_items={""Inicio"": ""http://161.132.50.153/""},
        base_url=""http://161.132.50.153/eventos""
    )
    ```

---

## **Mejoras Técnicas**

### **1. Pruebas Paralelas Mejoradas**
- Ejecución de pruebas en paralelo utilizando `pytest-xdist`.
- Configuración predeterminada: 3 procesos paralelos.

---

### **2. Compatibilidad con Frameworks Modernos**
- Las funciones ahora manejan casos dinámicos y asíncronos típicos de frameworks como **React**, **Angular** y **Vue.js**.

---

### **3. Reportes Detallados con Allure**
- Los resultados de las pruebas se generan en el formato `allure-results`, listos para ser visualizados con Allure.

---

## **Cambios Internos**

### **1. Fixture Parametrizada en `conftest.py`**
- La fixture `driver` ahora soporta múltiples navegadores (Chrome, Firefox y Edge).

### **2. Comando `ejecutar_pruebas` Mejorado**
- Soporte para ejecutar pruebas paralelas en múltiples navegadores.

---

## **Documentación Actualizada**
- El archivo `README.md` incluye ejemplos de las nuevas funciones reutilizables.
- Instrucciones detalladas para configurar Selenium Grid con el archivo `docker-compose.yml`.

---

## **Estructura Sugerida del Proyecto**
```bash
Nombre_De_tu_carpeta
|
|---Carpeta_""tests""
|
|---docker-compose.yml
```


## **Instalacion**

### Requisitos Previos
1. Tener instalado **Python 3.8** o superior.
2. Instalar pip (administrador de paquetes de Python).
3. Tener Selenium Grid configurado y en ejecucion (opcional para pruebas distribuidas).

### Instalacion del Paquete
1. Instala el paquete desde PyPI:
   ```bash
   pip install TeamWebQaUPT
   ```

2. Verifica la instalacion:
   ```bash
   python -c ""import TeamWebQaUPT; print('Instalacion exitosa')""
   ```

---

## **Ejecucion de Pruebas**

### Comando para Ejecutar Todas las Pruebas
El paquete incluye un script que ejecuta todas las pruebas automaticamente y genera un reporte Allure:
```bash
ejecutar_pruebas
```

Por defecto, el comando:
- Ejecuta pruebas en paralelo utilizando 3 procesos (`-n 3`).
- Genera resultados en el directorio `allure-results`.

### Ver Resultados con Allure
Para visualizar los resultados en formato Allure:
1. Instala Allure:
   ```bash
   brew install allure  # En macOS
   sudo apt install allure  # En Linux
   ```
   [Instrucciones de instalacion para Windows](https://docs.qameta.io/allure/#_get_started).

2. Visualizar los resultados generados:
   ```bash
   allure serve allure-results
   ```

---

## **Funciones Reutilizables**

El paquete incluye una serie de funciones reutilizables en el modulo `utils.py`. Aqui hay una lista de las mas utiles:

### 1. **Seleccionar Opcion en Dropdown**
```python
from TeamWebQaUPT.utils import select_dropdown_option

select_dropdown_option(driver, dropdown_selector=""button[role='combobox']"", option_text=""Todas"")
```

**Descripcion**:
- Selecciona una opcion en un combo box (dropdown) por texto visible.

**Parametros**:
- `driver`: Instancia de Selenium WebDriver.
- `dropdown_selector`: Selector CSS del dropdown.
- `option_text`: Texto visible de la opcion a seleccionar.

---

### 2. **Validar Elementos en una Lista**
```python
from TeamWebQaUPT.utils import validate_elements_in_list

validate_elements_in_list(driver, ""//h3[contains(text(), '{}')]"", [""Elemento A"", ""Elemento B""])
```

**Descripcion**:
- Verifica que una lista de elementos este visible en la pagina.

**Parametros**:
- `driver`: Instancia de Selenium WebDriver.
- `xpath_template`: Plantilla de XPath para encontrar los elementos (usa `{}` para insertar el texto del elemento).
- `items`: Lista de textos a validar.

---

### 3. **Navegar por Menus**
```python
from TeamWebQaUPT.utils import navigate_menu

navigate_menu(
    driver,
    menu_items={
        ""Inicio"": ""http://161.132.50.153/"",
        ""Eventos"": ""http://161.132.50.153/eventos""
    },
    base_url=""http://161.132.50.153/equipos""
)
```

**Descripcion**:
- Navega por un menu y valida la navegacion de URLs.

**Parametros**:
- `driver`: Instancia de Selenium WebDriver.
- `menu_items`: Diccionario con texto del menu como clave y URL esperada como valor.
- `base_url`: URL base para regresar despues de cada navegacion.

---

### 4. **LinkLabels**
```python
from TeamWebQaUPT.utils import navigate_linklabel

navigate_linklabel(driver, ""a[data-testid='link-label']"", ""http://161.132.50.153/nueva-pagina"")
```

**Descripcion**:
- Redirige usando un LinkLabel y valida la URL resultante.

**Parametros**:
- `driver`: Instancia de Selenium WebDriver.
- `link_selector`: Selector CSS del LinkLabel.
- `expected_url`: URL esperada despues de hacer clic.

---

### 5. **Procesar Tablas Gherkin**
```python
from TeamWebQaUPT.utils import process_table_data

table_data = [
    [""Columna1"", ""Columna2""],
    [""Valor1"", ""Valor2""]
]
processed_data = process_table_data(table_data)
```

**Descripcion**:
- Convierte datos de una tabla en un formato reutilizable.

**Parametros**:
- `table_data`: Lista de listas con los datos de la tabla (primera fila como encabezados).

**Retorno**:
- Una lista de diccionarios con claves basadas en la primera fila.

---

## **Pruebas Paralelas con Docker Compose**

El paquete incluye un archivo `docker-compose.yml` para ejecutar pruebas en paralelo utilizando Selenium Grid.

### **Contenido del `docker-compose.yml` para las pruebas paralelas**
```yaml
version: ""3""
services:
  selenium-hub:
    image: selenium/hub:4.25.0-20240922
    container_name: selenium-hub
    ports:
      - ""4442:4442""
      - ""4443:4443""
      - ""4444:4444""
    networks:
      - selenium-grid

  chrome:
    image: selenium/node-chrome:4.25.0-20240922
    container_name: chrome
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=3
    networks:
      - selenium-grid

  firefox:
    image: selenium/node-firefox:4.25.0-20240922
    container_name: firefox
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=3
    networks:
      - selenium-grid

  edge:
    image: selenium/node-edge:4.25.0-20240922
    container_name: edge
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=3
    networks:
      - selenium-grid

  chrome_video:
    image: selenium/video:ffmpeg-7.0.2-20240922
    container_name: chrome_video
    volumes:
      - ./videos:/videos
    depends_on:
      - chrome
    environment:
      - DISPLAY_CONTAINER_NAME=chrome
      - SE_NODE_GRID_URL=http://selenium-hub:4444
      - SE_VIDEO_FILE_NAME=auto
      - FFmpeg_Options="" -framerate 2 -video_size 1920x1080 -probesize 5000000 -analyzeduration 1000000 ""
    networks:
      - selenium-grid

  edge_video:
    image: selenium/video:ffmpeg-7.0.2-20240922
    container_name: edge_video
    volumes:
      - ./videos:/videos
    depends_on:
      - edge
    environment:
      - DISPLAY_CONTAINER_NAME=edge
      - SE_NODE_GRID_URL=http://selenium-hub:4444
      - SE_VIDEO_FILE_NAME=auto
      - FFmpeg_Options="" -framerate 2 -video_size 1920x1080 -probesize 5000000 -analyzeduration 1000000 ""
    networks:
      - selenium-grid

  firefox_video:
    image: selenium/video:ffmpeg-7.0.2-20240922
    container_name: firefox_video
    volumes:
      - ./videos:/videos
    depends_on:
      - firefox
    environment:
      - DISPLAY_CONTAINER_NAME=firefox
      - SE_NODE_GRID_URL=http://selenium-hub:4444
      - SE_VIDEO_FILE_NAME=auto
      - FFmpeg_Options="" -framerate 2 -video_size 1920x1080 -probesize 5000000 -analyzeduration 1000000 ""
    networks:
      - selenium-grid

networks:
  selenium-grid:
    driver: bridge
```

### **Como Usarlo**
1. Levanta el entorno Selenium Grid:
   ```bash
   docker-compose up -d
   ```

2. Ejecuta las pruebas en paralelo:
   ```bash
   pytest -n 3 --alluredir=allure-results
   ```

---

## **Licencia**
Este proyecto esta licenciado bajo la Licencia MIT. Consulta el archivo `LICENSE` para mas detalles."
UPT-FAING-EPIS/si885_2024-ii-proyecto_si885_2024-ii_u2-proyecto-formatos-01,si885_2024,ii-proyecto_si885_2024-ii_u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si885-2024-ii-u2-tg01apazachuracutcutiescohuallpas,proyecto,si885-2024-ii-u2-tg01apazachuracutcutiescohuallpas,True,5520,True,20,True,True,True,"# SIMGR-UPT: Sistema de Monitoreo y Gestión de Red para Laboratorios UPT

**Descripción:**  
El **Sistema de Monitoreo y Gestión de Red para Laboratorios UPT (SIMGR-UPT)** tiene como objetivo supervisar y gestionar en tiempo real el rendimiento de la red en los laboratorios de la Universidad Privada de Tacna. Esto incluye monitoreo de ancho de banda, estabilidad de la conexión y detección de problemas para optimizar los recursos y garantizar un entorno eficiente.



## Integrantes

| Nombre                             | Código             |
|------------------------------------|-------------------|
| Escobar Rejas, Carlos Andrés       | (2021070016)       |
| Apaza Ccalle, Albert Kenyi         | (2021071075)       |
| Ricardo Cutipa Gutierrez           | (2021069827)       |
| Erick Churacutipa Blass            | (2020067578)       |
| Jesus Huallpa Maron                | (2021071085)       |


## Reporte de Power BI
📊 **Puedes acceder al reporte de Power BI haciendo clic en el siguiente enlace:**

[Ver Reporte en Power BI](https://app.powerbi.com/view?r=eyJrIjoiNjMxZDkyYjQtMDFhMy00NTdkLTlkNzYtOWExODc5MGU0YmE3IiwidCI6IjE2NzFiMjY2LTJhNDktNDYyYi05Zjk1LWU4MzFjOGRlMDRkOSIsImMiOjEwfQ%3D%3D)


## Diagramas

### 1. Construcción de la Infraestructura
![Construcción de la Infraestructura](media/diagramaBrainboard.png)

### 2. Interacción del Usuario sobre lo Creado
![Interacción del Usuario](media/Brainboard-athena.png).


## Inventario de Archivos y Carpetas

### Carpeta Raíz

1. **`data/`**  
   - Contiene los archivos de datos en formato CSV utilizados por el sistema.

2. **`G02_UPTRED.pbix`**  
   - Archivo de Power BI para análisis y visualización de datos.

3. **`lambda_function.zip`**  
   - Comprimido con los siguientes componentes:
     - `s3bucket.py`: Script para subir datos al bucket S3.
     - `datos_combinados.csv`: Archivo combinado generado desde `data`.

4. **`requirements.txt`**  
   - Dependencias necesarias para los scripts Python.

5. **`s3bucket.py`**  
   - Script que sube archivos CSV al bucket S3.

6. **`sqlcsv.py`**  
   - Combina los CSV en `data` para generar `datos_combinados.csv`.

### Carpeta PruebasExpo

1. **`APPs3uploaddata.exe`**  
   - Aplicación de escritorio en Python para subir archivos CSV al bucket S3.

2. **`final data prueba.csv`**  
   - Archivo de prueba para demostración.

3. **`s3uploaddata.py`**  
   - Código fuente de `APPs3uploaddata.exe`.

### Estructura General

```
/
├── data/
│   ├── [Archivos CSV...]
├── G02_UPTRED.pbix
├── lambda_function.zip
│   ├── s3bucket.py
│   ├── datos_combinados.csv
├── requirements.txt
├── s3bucket.py
├── sqlcsv.py
├── PruebasExpo/
│   ├── APPs3uploaddata.exe
│   ├── final data prueba.csv
│   ├── s3uploaddata.py
```

## Pasos de Automatización de Recursos

### 1. Configuración Inicial

- Asegúrate de tener los siguientes archivos en el entorno local:
  - `sqlcsv.py`
  - `s3bucket.py`
  - `requirements.txt`
  - `lambda_function.zip`
  - Carpeta `data/` con los archivos CSV.

### 2. Eliminar Recursos Existentes

Si necesitas limpiar tu entorno, sigue estos pasos:

1. Eliminar datos en el bucket S3:
   ```bash
   aws s3 rm s3://netuptinteligencianegocios --recursive
   ```

2. Eliminar crawler en AWS Glue:
   ```bash
   aws glue delete-crawler --name netuptinteligencianegocios-crawler
   ```

3. Destruir la infraestructura de AWS con Terraform:
   ```bash
   terraform destroy --auto-approve
   ```

### 3. Configuración y Generación de Recursos

1. Ubícate en la carpeta que contiene `main.tf` (Terraform).

2. Inicia Terraform:
   ```bash
   terraform init
   ```

3. Crea la infraestructura:
   ```bash
   terraform apply --auto-approve
   ```

### 4. Automatización con Scripts

1. Combina los archivos CSV de `data/` con `sqlcsv.py`:
   ```bash
   python3 sqlcsv.py
   ```

2. Sube el archivo combinado al bucket S3 con `s3bucket.py`:
   ```bash
   python3 s3bucket.py
   ```

## Configuración del Controlador ODBC para Power BI

### 1. Descargar e Instalar Controlador

- Descarga el controlador desde:  
  [Amazon Athena ODBC Driver v2.0.3.0](https://downloads.athena.us-east-1.amazonaws.com/drivers/ODBC/v2.0.3.0/Windows/AmazonAthenaODBC-2.0.3.0.msi).

### 2. Configuración del ODBC

- Abre el Administrador de ODBC (64 bits).
- Configura un nuevo DSN con los siguientes parámetros:
  - **Data Source Name**: `athena-in`
  - **Description**: `athena-in in Power BI`
  - **Region**: `us-east-1`
  - **Catalog**: `AwsDataCatalog`
  - **Database**: `default`
  - **Workgroup**: `primary`
  - **S3 Output**: `s3://netuptinteligencianegocios/athena-output/`
  - **Authentication Options**: `DEFAULT CREDENTIALS`

### 3. Probar la Conexión

- Presiona **Test** en el ODBC configurado.
- Resultado esperado:
  ```
  Successfully connected to: Athena engine version 3
  Region: us-east-1
  Catalog: AwsDataCatalog
  Workgroup: primary
  Auth Type: Default Credentials
  ```

## Carga de Datos en Power BI

1. Abre Power BI y selecciona **Obtener Datos → Amazon Athena**.
2. Configura el DSN:
   - Introduce el DSN configurado: `athena-in`.
3. Selecciona las tablas disponibles desde `AwsDataCatalog` y cárgalas en Power BI.
4. Realiza ajustes en las visualizaciones según sea necesario.

## Notas Finales

- Asegúrate de que las credenciales de AWS están configuradas antes de ejecutar los scripts.
- Antes de cargar datos en Power BI, verifica que el bucket S3 contiene los datos esperados.
- Durante la exposición, utiliza `final data prueba.csv` para las pruebas de carga en tiempo real."
UPT-FAING-EPIS/si8811b_2024-ii-proyecto_si8811b_2024_ii_u2-proyecto-formatos-01,si8811b_2024,ii-proyecto_si8811b_2024_ii_u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si885-2024-ii-u2-tg3melenhurtachinolopezbricecuadr,proyecto,si885-2024-ii-u2-tg3melenhurtachinolopezbricecuadr,True,1170,True,5,False,False,True,"# Proyecto: Dashboard de Detección Temprana de Abandono Estudiantil

## Descripción
Este proyecto tiene como objetivo desarrollar un **Dashboard de Detección Temprana de Abandono Estudiantil** para el área de tutoría de **EPIS UPT**. Se busca proporcionar herramientas analíticas que ayuden a identificar a los estudiantes en riesgo de abandono y a implementar medidas preventivas eficaces.

## Curso
**Inteligencia de Negocios**

## Docente
**Ing. Cuadros Quiroga, Patrick José**

## Enlace Dashboard: 
https://app.powerbi.com/links/-6iWQRhE94?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=07bc8e79-f8a7-4f72-acec-135230fe8a64

## Integrantes

| Nombre                                      | Código      |
|---------------------------------------------|-------------|
| Melendez Huarachi, Gabriel Fari            | 2021070311  |
| Lopez Catunta, Brayar Christian             | 2020068946  |
| Briceño Diaz, Jorge Luis                    | 2017059611  |
| Cuadros Garcia, Mirian                      | 2021071083  |
| Hurtado Ortiz, Leandro                      | 2015052384  |
| Chino Rivera, Angel Alessandro               | 2021069830  |"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u2-documentacion-1,proyecto,si8811b-2024-ii-u2-documentacion-1,True,4224,True,16,False,True,False,"# UPT Attendance Mobile App

## Description
The UPT Attendance mobile application is designed to streamline the process of managing and justifying student absences at Universidad Privada de Tacna. This mobile solution allows students to:

- Submit absence justifications digitally
- Track attendance in real-time
- Receive instant notifications about their attendance status
- View attendance history by course
- Upload supporting documentation for absences

## Features
- Digital absence justification system
- Real-time attendance tracking
- Push notifications for updates
- Document upload functionality
- Attendance history visualization
- Offline mode support
- Biometric authentication

## Technical Requirements
- Flutter SDK
- Android Studio / Xcode
- Minimum SDK:
  - Android: API level 21 (Android 8.0) or higher
  - iOS: iOS 12.0 or higher
- Device with:
  - 2GB RAM minimum
  - 100MB free storage
  - Camera access for document scanning
  - Internet connection

## Installation Guide

### 1. Environment Setup

First, ensure you have Flutter installed on your system:

```bash
# Check if Flutter is installed
flutter --version

# If not installed, follow these steps:
git clone https://github.com/flutter/flutter.git
export PATH=""$PATH:`pwd`/flutter/bin""    # Add to your path
flutter doctor                           # Verify installation
```

### 2. Project Setup

```bash
# Clone the repository
git clone https://github.com/your-repo/upt-attendance-mobile.git

# Navigate to project directory
cd upt-attendance-mobile

# Install dependencies
flutter pub get
```

### 3. Configuration

Create a `config.dart` file in `lib/config/`:

```dart
class AppConfig {
  static const String apiUrl = 'YOUR_API_URL';
  static const String appName = 'UPT Attendance';
  
  // API endpoints
  static const String loginEndpoint = '/auth/login';
  static const String attendanceEndpoint = '/attendance';
  static const String justificationEndpoint = '/justification';
}
```

### 4. Firebase Setup

1. Create a Firebase project
2. Add your Android/iOS app in Firebase console
3. Download and add the configuration files:
   - Android: `google-services.json` to `android/app/`
   - iOS: `GoogleService-Info.plist` to `ios/Runner/`

### 5. Running the Application

```bash
# For development
flutter run

# Build APK
flutter build apk

# Build iOS
flutter build ios
```

## Project Structure
```
lib/
├── config/             # Configuration files
├── models/            # Data models
├── screens/           # UI screens
│   ├── auth/         # Authentication screens
│   ├── home/         # Main screens
│   └── justification/ # Justification screens
├── services/          # API services
├── utils/            # Utility functions
└── widgets/          # Reusable widgets
```

## Troubleshooting

Common issues and solutions:

1. **Build Errors**
   ```bash
   flutter clean
   flutter pub get
   flutter run
   ```

2. **Firebase Integration Issues**
   - Verify Google Services files are in correct locations
   - Ensure package name matches Firebase configuration
   - Check build.gradle for correct dependencies

3. **API Connection Issues**
   - Verify API URL in config file
   - Check internet connection
   - Verify API endpoints are accessible

## Development Commands

```bash
# Run tests
flutter test

# Check code format
flutter format .

# Analyze project
flutter analyze

# Generate APK
flutter build apk --release

# Generate iOS build
flutter build ios --release
```

## Contributing
Please follow these steps for contributing:

1. Fork the repository
2. Create a feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit changes (`git commit -m 'Add AmazingFeature'`)
4. Push to branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## Support
For support and queries:
- Contact the development team at [email]
- Check documentation at carpet
- Report issues in the project repository

## Team
- César Fabián Chávez Linares (2019063854)
- Cristian Aldair Quispe Levano (2018000590)
- Javier André Neira Machaca (2017057984)
- Delgado Castillo, Jesús Ángel (2018000491)

## License
This project is proprietary software developed for Universidad Privada de Tacna. All rights reserved."
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-web_development,proyecto,si8811a-2024-ii-u2-web_development,True,5887,True,9,False,True,False,"# Juegos Florales - Proyecto React

Este proyecto es una plataforma web para visualizar las participaciones y los ganadores de cada facultad en los Juegos Florales organizados por la universidad. Está construido utilizando **React** para la interfaz de usuario y tiene como objetivo presentar de manera clara y atractiva los resultados de las competencias.

## Descripción 📄

La aplicación permite a los usuarios navegar a través de las diferentes categorías de los Juegos Florales, ver las participaciones de las distintas facultades y conocer a los ganadores de cada una de las competencias. Además, presenta una interfaz moderna y fácil de usar, diseñada para resaltar la creatividad y talento de los participantes.

## Tecnologías Utilizadas 🚀

- **React** - Framework de JavaScript para la construcción de interfaces de usuario.
- **Vite** - Herramienta de desarrollo rápida para React.
- **Tailwind CSS** - Framework de estilos para una interfaz moderna y responsiva.

## Características ✨

- Visualización de participaciones de cada facultad.
- Presentación de los ganadores de cada categoría.
- Interfaz intuitiva con un diseño responsivo.
- Navegación por categorías y facultades.
- Búsqueda rápida y filtrado de resultados.

## Requisitos 📋

Antes de ejecutar la aplicación, asegúrate de tener instalados los siguientes requisitos:

- **Node.js** (versión 14.0 o superior).
- **npm** (versión 6.0 o superior) o **yarn** como gestor de dependencias.
- **Git** para clonar el repositorio.

## Instalación 🔧

Para configurar el entorno de desarrollo en tu máquina local, sigue estos pasos:

1. Clona este repositorio:
   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-web-development.git

## Instalación 🔧

Para configurar el entorno de desarrollo en tu máquina local, sigue estos pasos:

1. Clona este repositorio:
   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-web-development.git
   ```

2. Accede al directorio del proyecto:
   ```bash
   cd proyecto-si8811a-2024-ii-u1-web-development
   ```

3. Instala las dependencias necesarias:
   ```bash
   npm install
   ```
   o, si usas **yarn**:
   ```bash
   yarn install
   ```

## Comandos Disponibles 📦

- **`npm start`** - Inicia la aplicación en modo de desarrollo en [http://localhost:3000](http://localhost:3000).
- **`npm run build`** - Genera una compilación optimizada para producción.
- **`npm test`** - Ejecuta las pruebas unitarias del proyecto.
- **`npm run lint`** - Revisa el código en busca de errores y malas prácticas.

## Estructura del Proyecto 📁

```plaintext
proyecto-si8811a-2024-ii-u1-web-development/
├── .scannerwork/         # Archivos generados por el analizador de código
├── public/               # Archivos públicos como index.html y favicons
├── src/                  # Código fuente del proyecto
│   ├── api/              # Servicios y llamadas a API
│   │   └── services/
│   ├── assets/           # Imágenes y recursos estáticos (ej. fuentes)
│   ├── components/       # Componentes reutilizables de la aplicación
│   │   └── layouts/      # Layouts y estructuras de páginas
│   ├── constants/        # Constantes y configuraciones del proyecto
│   ├── hooks/            # Custom hooks de React
│   ├── pages/            # Páginas principales de la aplicación
│   ├── router/           # Configuración de rutas
│   ├── store/            # Gestión de estado (Redux o Context API)
│   │   ├── auth/
│   │   └── event/
│   └── utils/            # Funciones utilitarias y helpers
├── tests/                # Pruebas unitarias y de integración
│   └── components/
├── .dockerignore         # Ignorar archivos para Docker
├── .env.template         # Variables de entorno (plantilla)
├── .eslintrc             # Configuración de ESLint para la calidad del código
├── .gitignore            # Archivos y directorios ignorados por Git
├── babel.config.cjs      # Configuración de Babel para la transpilación de ES6
├── eslint.config.js      # Reglas personalizadas para ESLint
├── jest.config.cjs       # Configuración para pruebas con Jest
├── jest.setup.js         # Configuración inicial de Jest
├── jsconfig.json         # Configuración para la integración con editores
├── nginx.conf            # Configuración para despliegue con Nginx
├── package-lock.json     # Información sobre las dependencias instaladas
├── package.json          # Dependencias y scripts del proyecto
├── postcss.config.js     # Configuración para PostCSS
├── tailwind.config.js    # Configuración de Tailwind CSS
├── vite.config.js        # Configuración de Vite para el entorno de desarrollo
└── README.md             # Documentación del proyecto
```

## Cómo Usar el Proyecto 🖥️

1. Asegúrate de tener Docker instalado.
2. Abre una terminal.
3. Ejecuta el siguiente comando:

```bash
docker run -d -p 8080:80 --name juegosflorales ghcr.io/upt-faing-epis/proyecto-si8811a-2024-ii-u1-web-development/juegosflorales:latest
```
4. Abre [http://localhost:8080](http://localhost:8080/) para ver la aplicación en tu navegador.


```mermaid
%%{ init : { ""theme"" : ""default"" } }%%
%%{ config: { ""themeVariables"": { ""actorFill"": ""#f9f"", ""actorStroke"": ""#f00"" } } }%%
%%{flowchart: {usecase: {}}}%%

classDiagram
    class Usuario {
        <<Actor>>
    }
    
    class VisualizarHome
    class ConsultarEventos
    class VerEquipos
    class VerParticipantes
    class ExplorarLugares
    class AccederInformacion
    class IniciarSesion

    Usuario --> VisualizarHome
    Usuario --> ConsultarEventos
    Usuario --> VerEquipos
    Usuario --> VerParticipantes
    Usuario --> ExplorarLugares
    Usuario --> AccederInformacion
    Usuario --> IniciarSesion

    VisualizarHome --> ConsultarEventos
    VisualizarHome --> VerEquipos
    VisualizarHome --> VerParticipantes
    VisualizarHome --> ExplorarLugares
    VisualizarHome --> AccederInformacion"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-desarrollo-mobile_corrales_viveros,proyecto,si8811a-2024-ii-u2-desarrollo-mobile_corrales_viveros,True,246,False,0,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17171083)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-apis-y-funciones-jarro-y-valle-1,proyecto,si8811a-2024-ii-u2-apis-y-funciones-jarro-y-valle-1,True,10320,False,30,True,True,True,"1.0

# Paquete Eventos-JV
El paquete Eventos-JV permite la integración de funcionalidades específicas para gestionar eventos en una aplicación basada en .NET 6.0. Sigue estos pasos para instalar y configurar correctamente el paquete.

## Instalación del Paquete
Para instalar el paquete globalmente en tu sistema, utiliza el siguiente comando:
```bash
dotnet tool install --global Eventos-JV --version 1.0.0
```

## Configuración del Proyecto para Utilizar el Paquete

Asegúrate de que el sistema tenga configurada la variable de entorno VJ_CONNECTION_STRING con la cadena de conexión a MongoDB. Esta cadena debe incluir tus credenciales y configuraciones de acceso al clúster de MongoDB.

Ejemplo de comando para agregar la variable en sistemas operativos:

Windows:
```bash
setx VJ_CONNECTION_STRING ""mongodb+srv://gv2020066916:9wtoLLgWsm26Tlhf@cluster0.avfarjq.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0""
```

Linux/MacOS:
```bash
export VJ_CONNECTION_STRING=""mongodb+srv://gv2020066916:9wtoLLgWsm26Tlhf@cluster0.avfarjq.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0""
```


Configuración del archivo appsettings.json
Asegúrate de incluir la configuración de MongoDB en tu archivo appsettings.json:

```bash
{
  ""MongoDB"": {
    ""ConnectionString"": ""mongodb://localhost:27017"",
    ""DatabaseName"": ""juegos_florales""
  },
  ""Logging"": {
    ""LogLevel"": {
      ""Default"": ""Information"",
      ""Microsoft.AspNetCore"": ""Warning""
    }
  },
  ""AllowedHosts"": ""*""
}

```

Configuración del Proyecto
Añade las siguientes configuraciones en el archivo Program.cs de tu proyecto para habilitar el uso del paquete Eventos-JV:

```bash
using proyecto_si8811a_2024_ii_u1_apis_y_funciones_jarro_y_valle.Models;
using proyecto_si8811a_2024_ii_u1_apis_y_funciones_jarro_y_valle.Services;
using proyecto_si8811a_2024_ii_u1_apis_y_funciones_jarro_y_valle.Settings;
using Microsoft.Extensions.Options;

var builder = WebApplication.CreateBuilder(args);

// Configurar MongoDB
builder.Services.Configure<MongoDBSettings>(
    builder.Configuration.GetSection(""MongoDB"")); // Leer configuraciones desde appsettings.json
builder.Services.AddSingleton<EVConnection>();

// Registrar servicios específicos
builder.Services.AddSingleton<EventoService>();

// Configurar controladores y Swagger
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// Configurar CORS (si es necesario)
builder.Services.AddCors(options =>
{
    options.AddPolicy(""AllowAllOrigins"",
        policy =>
        {
            policy.AllowAnyOrigin()
                  .AllowAnyMethod()
                  .AllowAnyHeader();
        });
});

var app = builder.Build();

// Configurar middleware de Swagger
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

// Aplicar CORS
app.UseCors(""AllowAllOrigins"");

// Configurar middleware de autorización
app.UseAuthorization();

// Mapear controladores
app.MapControllers();

app.Run();

```

## Imagen de la aplicacion
La aplicacion puede encontrarse en Docker Hub con el nombre de gus322/vj_evento. Pero para ejecutarse requiere obtener la linea de conexion que trabaje con la misma base de datos en MongoDB que cumpla con el modelo trabajado en el proyecto. Por ejemplo: 
```bash
docker run -e VJ_CONNECTION_STRING=""cadena de conexion"" -p 9091:9091 gus322/vj_evento:latest
```
## Base de datos y coleccion
La base de datos debe tener el nombre de ""juegos_florales"" y la coleccion debe tener el nombre de ""Evento""

## Readme de  develop 1 

docker build -t eventos_vj .

docker run -d -p 9091:80 eventos_vj

http://localhost:9091/swagger

## Índice

- [Tecnologías Utilizadas](#tecnologías-utilizadas)
- [Configuración del Proyecto](#configuración-del-proyecto)
- [Uso de Git](#uso-de-git)
- [GitHub Actions-(DockerHub)](#github-actions-DockerHub)
- [Publicación](#publicación)
- [Contribución](#contribución)
- [Documentación](#documentación)

  # Proyecto SI-8811-A

Bienvenido al proyecto SI-8811, una API para gestionar eventos utilizando .NET y MongoDB. Este proyecto está diseñado para facilitar la creación, lectura, actualización y eliminación de eventos en un entorno académico.

  
# Integrantes 
 - Jose Luis Jarro C.
 - Gustavo Alonso Valle Bustamante 

# Diagrama de Uso de la API

# Diagrama de Uso de la API

## Componentes del Diagrama
- **Cliente (Móvil/Web)**: La interfaz que interactúa con la API.
- **API en Elastic**: La API que se despliega en Elastic Beanstalk.
- **MongoDB**: La base de datos donde se almacenan los datos.
- **Docker Hub**: Repositorio de imágenes Docker (si estás usando Docker para contenedores).

## Flujo de Datos
1. El **Cliente** realiza solicitudes a la **API**.
2. La **API** se comunica con **MongoDB** para realizar operaciones CRUD (Crear, Leer, Actualizar, Eliminar).
3. **Docker** puede ser utilizado para empaquetar y desplegar la API, mientras que **Docker Hub** sirve como repositorio de la imagen de la API.

## Diagrama de Uso
```plaintext
+---------------+       +------------------+       +-----------------+
|               |       |                  |       |                 |
|  Cliente      | ----> |      API         | ----> |     MongoDB     |
| (Móvil/Web)   |       |   (Elastic)      |       |   (Base de     |
|               | <---- |                  | <---- |    datos)       |
+---------------+       +------------------+       +-----------------+
      |                         |
      |                         |
      |                         |
      |                         |
      +------------------------>|
            (Docker Hub)       |
                                 |
                                 |
                                 +------------------+
                                 |    Docker Hub     |
                                 +------------------+
  ```

## Explicacion del Diagrama DockerHub implementando en la API (GRafic)

![image](https://github.com/user-attachments/assets/ebe94371-44e8-4410-902a-5d55b8c3030c)

## Detalles de las Operaciones
- GET /api/nombre: Obtiene un recurso por nombre desde MongoDB.
- GET /api/id: Obtiene un recurso por ID desde MongoDB.
- PUT /api/id: Actualiza un recurso existente en MongoDB.
- DELETE /api/id: Elimina un recurso de MongoDB

# Link de docker hub 
'''
https://hub.docker.com/layers/palbertt/proyecto-si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle/latest/images/sha256-c3f301fe87bab319eeea16870779fe9e272c406a5750b307d51e2091440a35f6?context=explore
'''
- ![image](https://github.com/user-attachments/assets/404da337-88f0-4d29-a852-3e467ad9d66d)



## Diagrama Api .Net

![image](https://github.com/user-attachments/assets/0dfa566b-32c6-45bc-b3f7-a10eae949cac)

### Descripción de Componentes APIEventos

- **Cliente**: El usuario o aplicación que hace solicitudes a la API.
- **EventosController**: Controlador que maneja las solicitudes HTTP.
- **MongoDB Eventos**: Base de datos para almacenar los eventos.
- **Validaciones**: Lógica para validar los datos de entrada.
- **Autenticación**: Mecanismo de seguridad para acceso a la API.
- **Manejo de Errores**: Gestión de errores y respuestas adecuadas.
  
### Diagrama de la ApiEventoLocal . net 
```mermaid
flowchart TD
    A[Inicio] --> B[Solicitar evento]
    B --> C{Tipo de operación}
    C -->|Leer| D[Obtener eventos]
    C -->|Crear| E[Crear nuevo evento]
    C -->|Actualizar| F[Actualizar evento existente]
    C -->|Eliminar| G[Eliminar evento]
    
    D --> H[Retornar lista de eventos]
    E --> I[Retornar evento creado]
    F --> J[Retornar evento actualizado]
    G --> K[Retornar confirmación de eliminación]

    H --> L[Fin]
    I --> L
    J --> L
    K --> L

```

## Swagger 

## Pruebas Unitarias Api Eventos 

![image](https://github.com/user-attachments/assets/95e925f7-4585-4db8-80e1-af95a3088cbc)


![image](https://github.com/user-attachments/assets/ac102f8b-4b9a-49ba-add3-803c89ab8419)



## Swagger UI
# API Documentation

Este proyecto incluye una API para gestionar eventos. A continuación se detallan los puntos finales de la API definidos en la interfaz de usuario de Swagger.

## Base URL
`http://161.132.48.189:9091/swagger/index.html`

## Endpoints
![image](https://github.com/user-attachments/assets/937999eb-1c36-4e65-b38e-6e1106279a15)


## Tecnologías Utilizadas

- **.NET Core**: Framework para construir la API.
- **MongoDB**: Base de datos NoSQL para almacenar información de eventos.
- **Git**: Control de versiones.


## Configuración del Proyecto

1. **Clonar el Repositorio**:
   ```bash
   git clone https://github.com/tuusuario/proyecto-si-8811.git
   cd proyecto-si-8811
   ```


## Uso de Git

- Este proyecto utiliza **GitFlow** como modelo de branching. Las ramas se crean para cada nueva característica o corrección de errores, asegurando un flujo de trabajo organizado.
- **Tareas completadas**: Las tareas del proyecto están registradas en **GitHub Projects** y están vinculadas a las respectivas ramas.

## GitHub Actions (DockerHub ) 

- Se han implementado **GitHub Actions** para automatizar la construcción y el despliegue del proyecto, asegurando una integración continua y un despliegue seguro.

## Publicación

- El proyecto ha sido publicado para consumo, pero **no** se encuentra disponible en GitHub.
- Se utilizó **Elastika** para la gestión y despliegue de la API, facilitando el acceso y la escalabilidad del servicio.





## Exposición

- El proyecto ha sido presentado, y se ha utilizado herramientas adecuadas para su exposición. 
- El enfoque y la claridad en la presentación fueron bien recibidos, y se respondieron a las preguntas de manera efectiva.

---

Gracias por tu interés en el proyecto SI-8811. ¡Esperamos tus contribuciones y feedback!

## Swagger UI

## Base URL
`http://161.132.48.189:9091/swagger/index.html`

## Endpoints
![image](https://github.com/user-attachments/assets/937999eb-1c36-4e65-b38e-6e1106279a15)


### Evento
```json
{
  ""id"": ""string"",
  ""nombre"": ""string"",
  ""fechaInicio"": ""string($date-time)"",
  ""fechaTermino"": ""string($date-time)"",
  ""facultad"": ""string"",
  ""resultado"": ""string"",
  ""descripcion"": ""string""
}
```


## mejoras correcciones 
   - Visualizacion de docker hub con automatizacion ( haciendo referencia al proyecto  de apis y funicones valle y jarro )"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u2-tg02agredacastanedacontrerasmalagaortiz,proyecto,si885-2024-ii-u2-tg02agredacastanedacontrerasmalagaortiz,True,2260,False,4,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=15560290)

#  Plataforma de análisis de datos de matriculados en la carrera de ingeniería de sistemas para la universidad privada de Tacna - PAMIS

El propósito de PAMIS es proporcionar una plataforma tecnológica que permita a los estudiantes de la Escuela Profesional de Ingeniería de Sistemas abordar varios desafíos relacionados con el análisis del desempeño académico de sus compañeros. Estos desafíos incluyen la falta de acceso a herramientas analíticas detalladas, la necesidad de identificar patrones de rendimiento a lo largo del tiempo y la importancia de tomar decisiones estratégicas basadas en datos concretos.

## Integrantes
- **Agreda Ramirez, Jesus Eduardo			(2021069823)** 
- **Castañeda Centurion, Jorge Enrique		(2021069822)** 
- **Contreras Lipa, Alvaro Javier			(2021070020)** 
- **Málaga Espinoza, Ivan Francisco		(2021071086)**
- **Ortiz Fernandez, Ximena Andrea			(2021071080)**

## Curso
- Inteligencia de Negocios

## Docente
- Mag. Patrick Cuadros Quiroga

## Enlace a los datos
-  [Consolidado Semestre 2020 - I](https://docs.google.com/spreadsheets/d/1cIg5tDGIJB3h0LbpFJx4EUgkOMIlYVMK/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2020 - II](https://docs.google.com/spreadsheets/d/1eaYI-YMzZYpGdQ3vCbRQ28YCHEucd3Fi/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2021 - I](https://docs.google.com/spreadsheets/d/1oR_VQalTpQ3ZywmnBypG0NKYe4vTw7sf/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2021 - II](https://docs.google.com/spreadsheets/d/1x3-4pQaRQgEPI5ymfbOjxNAuNmJLEyI3/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2022 - I](https://docs.google.com/spreadsheets/d/1rwH7N_DOPicpMzaNN9rf5wD1CHzeQA0E/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2022 - II](https://docs.google.com/spreadsheets/d/10kJhI5DXXkWpJ0_mLp-LQxszpHnUWk9N/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u2-infra,proyecto,si8811b-2024-ii-u2-infra,True,3358,True,12,False,False,False,"# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u2-tg04lunaquispemamanihernandezmeza,proyecto,si885-2024-ii-u2-tg04lunaquispemamanihernandezmeza,True,1469,True,3,False,True,False,"# Terraform para Configurar Cosmos DB en Azure

Este repositorio utiliza **Terraform** para crear y gestionar una infraestructura en **Microsoft Azure** que incluye los siguientes recursos:

- **Grupo de Recursos**: Agrupa todos los recursos de Azure relacionados.
- **Cuenta de Cosmos DB**: Crea una cuenta de Cosmos DB con almacenamiento analítico habilitado.
- **Base de Datos SQL en Cosmos DB**: Configura una base de datos SQL dentro de la cuenta de Cosmos DB.
- **Contenedor SQL en Cosmos DB**: Crea un contenedor SQL con clave de partición y rendimiento configurado.
- **Asignación de Roles**: Asigna permisos de acceso a un principal (usuario o aplicación) para realizar operaciones CRUD en Cosmos DB.

## Variables de Configuración

- **location**: Ubicación de los recursos (por ejemplo, ""East US"").
- **resource_group_name**: Nombre del grupo de recursos.
- **cosmosdb_account_name**: Nombre de la cuenta de Cosmos DB.
- **cosmosdb_database_name**: Nombre de la base de datos en Cosmos DB.
- **cosmosdb_container_name**: Nombre del contenedor en Cosmos DB.
- **partition_key_path**: Ruta de la clave de partición.
- **throughput**: Rendimiento del contenedor de Cosmos DB (por ejemplo, 400).

## Requisitos

- **Terraform**: Para ejecutar estos scripts.
- **Cuenta de Azure**: Con permisos adecuados para crear recursos.

## Cómo Ejecutar

1. Clona el repositorio:
   ```bash
   git clone https://github.com/tu_usuario/tu_repositorio.git
   cd tu_repositorio"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u2-tg05chavezarcelirasoto,proyecto,si885-2024-ii-u2-tg05chavezarcelirasoto,True,3999,False,12,True,True,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17229418)
# Pipeline de Análisis de Encuestas Universitarias

## Estructura del Proyecto
```
survey-analysis-pipeline/
├── infrastructure/
│   ├── terraform/
│   │   ├── main.tf           # Configuración principal de Terraform
│   │   ├── variables.tf      # Variables de configuración
│   │   ├── outputs.tf        # Outputs de la infraestructura
│   │   └── backend.tf        # Configuración del backend de Terraform
│   └── scripts/
│       ├── deploy.sh         # Script de despliegue
│       └── destroy.sh        # Script de limpieza
├── src/
│   ├── lambda/
│   │   └── process_survey.py # Función Lambda para procesamiento
│   ├── glue/
│   │   └── etl_job.py       # Job de AWS Glue
│   └── sql/
│       ├── schema.sql       # Esquema de la base de datos
│       └── views.sql        # Vistas para análisis
├── data/
│   ├── raw/                 # Datos crudos de encuestas
│   └── processed/           # Datos procesados
├── reports/
│   ├── dashboard.pbix       # Dashboard en Power BI
│   └── quicksight/         # Análisis en QuickSight
├── tests/
│   └── test_etl.py         # Pruebas unitarias
├── .github/
│   └── workflows/
│       ├── terraform.yml    # Pipeline de CI/CD para infraestructura
│       └── etl.yml         # Pipeline de CI/CD para ETL
├── requirements.txt         # Dependencias Python
└── README.md               # Documentación principal
```

## Inventario de Artefactos

### Infraestructura (Terraform)
- `infrastructure/terraform/main.tf`: Definición de recursos AWS
- `infrastructure/terraform/variables.tf`: Variables configurables
- `infrastructure/terraform/outputs.tf`: Outputs de la infraestructura
- `infrastructure/terraform/backend.tf`: Configuración del estado de Terraform

### Procesamiento de Datos
- `src/lambda/process_survey.py`: Función Lambda para validación inicial
- `src/glue/etl_job.py`: Job de AWS Glue para transformación
- `src/sql/schema.sql`: Definición del esquema de base de datos
- `src/sql/views.sql`: Vistas SQL para análisis

### Visualización
- `reports/dashboard.pbix`: Dashboard principal en Power BI
- `reports/quicksight/`: Análisis y visualizaciones en QuickSight

### Automatización
- `.github/workflows/terraform.yml`: Pipeline de CI/CD para infraestructura
- `.github/workflows/etl.yml`: Pipeline de CI/CD para procesamiento de datos
- `infrastructure/scripts/deploy.sh`: Script de despliegue
- `infrastructure/scripts/destroy.sh`: Script de limpieza

## Enlaces de Publicación
- Repositorio: [GitHub - Survey Analysis Pipeline](#)
- Documentación: [Wiki del Proyecto](#)
- Dashboard: [Power BI Service](#)
- ETL Jobs: [AWS Glue Console](#)

## Despliegue

### Requisitos Previos
- AWS CLI configurado con credenciales apropiadas
- Terraform instalado (v1.0.0 o superior)
- Python 3.9 o superior
- Git

### Pasos de Despliegue Manual

1. Clonar el repositorio:
```bash
git clone https://github.com/your-org/survey-analysis-pipeline.git
cd survey-analysis-pipeline
```

2. Configurar variables de entorno:
```bash
export AWS_REGION=us-east-1
export TF_VAR_environment=dev
export TF_VAR_project_name=university-survey
```

3. Ejecutar el script de despliegue:
```bash
chmod +x infrastructure/scripts/deploy.sh
./infrastructure/scripts/deploy.sh
```

### Despliegue Automatizado

El proyecto está configurado con GitHub Actions para despliegue automático:

1. Los push a la rama `main` activarán el despliegue automático
2. Los pull requests ejecutarán validaciones sin desplegar
3. Verificar los workflows en la pestaña ""Actions"" de GitHub

### Monitoreo Post-Despliegue

1. Verificar el estado de la función Lambda:
```bash
aws lambda get-function --function-name university-survey-process
```

2. Monitorear el job de Glue:
```bash
python src/glue/monitor_glue_job.py
```

3. Revisar los logs en CloudWatch"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u2-backend_sync,proyecto,si8811b-2024-ii-u2-backend_sync,True,23489,False,33,True,True,True,"<div align=""center"">

![./media/media/image1.png](./media/logo-upt.png)

**UNIVERSIDAD PRIVADA DE TACNA**  

**FACULTAD DE INGENIERÍA**  

**Escuela Profesional de Ingeniería de Sistemas**  

**Proyecto _UPT-SYNC: Herramienta de apoyo para estudiantes_**  

Curso: _Topicos de Base de Datos Avanzados I_  

Docente: _Mag. Patrick Cuadros Quiroga_  

Integrantes:  

***CAXI CALANI Luis Eduardo (2018062487)***  
***DELGADO CASTILLO Jesus Angel (2018000491)***  

**Tacna – Perú**  

***2024***  

</div>

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

# **Sistema UPT-SYNC**

**Informe de Factibilidad**  
**Versión 1.0**

| **CONTROL DE VERSIONES** | **Hecha por** | **Revisada por** | **Aprobada por** | **Fecha**     | **Motivo**          |
|---------------------------|---------------|------------------|------------------|---------------|---------------------|
| 3.0                       | LCC           | JDC              | PCQ              | 18/12/2024    | Versión Final    |

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

# **INDICE GENERAL**

Resumen

Abstract

[1. Antecedentes o introducción](#_Toc52661346)

[2. Titulo](#_Toc52661347)

[3. Autores](#_Toc52661348)

[4. Planteamiento del problema](#_Toc52661349)

[4.1 Problema](#_Toc52661350)

[4.2 Justificación](#_Toc52661351)

[4.3 Alcance](#_Toc52661352)

[5. Objetivos](#_Toc52661356)

[5.1 General](#_Toc52661350)

[5.2 Especificos](#_Toc52661351)

[6. Referentes teóricos](#_Toc52661357)

[7. Desarrollo de la propuesta](#_Toc52661356)

[7.1 Tecnología de información ](#_Toc52661350)

[7.2 Metodología, técnicas usadas](#_Toc52661351)

[7. Cronograma](#_Toc52661356)



<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

# **Proyecto _UPT-SYNC: Herramienta de apoyo para estudiantes_**

---

## **1. Antecedentes o Introducción**

La aplicación **UPT-SYNC** fue diseñada como una solución tecnológica para automatizar la sincronización de datos académicos desde la intranet de la Universidad Privada de Tacna (UPT). Su propósito inicial fue proporcionar acceso rápido a información como horarios, asistencias y créditos acumulados. Sin embargo, su funcionalidad actual presenta limitaciones para los estudiantes, principalmente en la gestión de trámites, como la justificación de inasistencias. Este proyecto busca mejorar la aplicación, haciendo hincapié en la facilidad para generar y enviar justificaciones de inasistencias directamente a la tutora de cada facultad, ahorrando tiempo y esfuerzo administrativo.

---

## **2. Título**

**UPT-SYNC: Herramienta de Apoyo para Estudiantes**

---

## **3. Autores**

- **Luis Eduardo Caxi Calani** (2018062487)  
- **Jesus Angel Delgado Castillo** (2018000491)

---

## **4. Planteamiento del Problema**

### **4.1. Problema**

Los estudiantes de la UPT enfrentan las siguientes dificultades relacionadas con la intranet universitaria:
- **Acceso ineficiente a la información:** Los procesos actuales requieren ingresar manualmente a la intranet para consultar horarios, asistencias y créditos acumulados.
- **Gestión de inasistencias:** La generación de solicitudes de justificación de inasistencias es un proceso manual que consume tiempo y no garantiza un envío oportuno a las tutoras.
- **Falta de automatización:** Los trámites administrativos relacionados con inasistencias carecen de integración tecnológica que facilite su gestión.

Estas problemáticas afectan la experiencia académica de los estudiantes y generan retrasos en la tramitación de solicitudes importantes.

---

### **4.2. Justificación**

El desarrollo y mejoramiento de **UPT-SYNC** es necesario por los siguientes motivos:
1. **Eficiencia en la gestión de datos:** Automatizar el acceso a horarios, asistencias y créditos acumulados permitirá a los estudiantes ahorrar tiempo.
2. **Facilitar trámites administrativos:** Una funcionalidad para generar y enviar justificaciones de inasistencias directamente desde la aplicación optimizará el proceso y reducirá errores.
3. **Centralización de información:** La integración de todas las funcionalidades en una sola plataforma reducirá la dependencia de múltiples sistemas.
4. **Aumento de la accesibilidad:** Un diseño responsivo permitirá que los estudiantes accedan desde cualquier dispositivo.

Con estas mejoras, **UPT-SYNC** se convertirá en una herramienta esencial para la gestión académica.

---

### **4.3. Alcance**

- **Usuarios:** Estudiantes de todas las facultades de la UPT.  
- **Funcionalidades:**  
  - Sincronización de datos desde la intranet (horarios, asistencias, créditos).  
  - Gestión y envío de solicitudes de justificación de inasistencias.  
  - Generación de reportes académicos automatizados.  
  - Interfaz amigable y responsiva.  

---

## **5. Objetivos**

### **5.1. General**

Desarrollar una versión mejorada de **UPT-SYNC** que automatice la gestión de información académica y facilite la tramitación de justificaciones de inasistencias.

---

### **5.2. Específicos**

1. Implementar la sincronización automatizada de datos académicos desde la intranet.
2. Diseñar un módulo para la generación y envío de justificaciones de inasistencias a tutoras de facultad.
3. Mejorar la interfaz gráfica para hacerla intuitiva y accesible en dispositivos móviles.
4. Garantizar la seguridad de los datos mediante encriptación y manejo seguro de sesiones.
5. Documentar la API y funcionalidades de la aplicación para su mantenimiento futuro.

---

## **6. Referentes Teóricos**
Diagramas de Casos de Uso, Diagrama de Clases, Diagrama de Componentes y Arquitectura.

Incluye información relacionada con:
- Tecnologías usadas: **Node.js**, **Puppeteer**, **MongoDB**.
- Automatización con **scraping web**.
- Gestión de sesiones y seguridad.

---

## **7. Desarrollo de la Propuesta**

La propuesta de mejoramiento de la aplicación **UPT-SYNC** se basa en un análisis exhaustivo realizado con herramientas especializadas como **SonarQube** y **Snyk**, que identificaron aspectos técnicos a mejorar, incluyendo deuda técnica, vulnerabilidades y fallas en el código. A partir de este análisis, se diseñó un plan de acción que incluye la implementación de soluciones técnicas y organizativas para optimizar el rendimiento, la seguridad y la mantenibilidad de la aplicación.

### **7.1. Tecnología de Información**

#### **Herramientas utilizadas**
1. **SonarQube**  
   - **Propósito:** Analizar la calidad del código fuente de la aplicación y generar reportes detallados sobre:
     - **Deuda técnica:** Código duplicado, complejidad ciclomática, falta de comentarios.
     - **Problemas de calidad:** Código difícil de mantener o entender.
     - **Problemas de seguridad:** Código susceptible a vulnerabilidades.
   - **Resultados esperados:** Reducción de la deuda técnica al mínimo y una calificación ""A"" en los estándares de calidad del código.

2. **Snyk**  
   - **Propósito:** Identificar y mitigar vulnerabilidades en las dependencias de la aplicación.
   - **Resultados esperados:** 
     - Eliminar vulnerabilidades críticas y de alto impacto.
     - Actualización de dependencias obsoletas o inseguras.

#### **Tecnologías principales**
- **Node.js:** Plataforma base para el desarrollo del backend.
- **Express:** Framework para la construcción de APIs REST.
- **Puppeteer:** Herramienta de scraping web para la sincronización de datos con la intranet.
- **MongoDB:** Base de datos NoSQL para almacenar información académica.
- **Nodemailer:** Envío automatizado de correos electrónicos.
- **Docker:** Contenedor para un despliegue eficiente y estandarizado.
- **GitHub Actions:** Automatización de pruebas e integración continua.

---

### **7.2. Metodología y Técnicas Usadas**

#### **Metodología Ágil (Scrum)**
- **Fases:**  
  1. **Planificación:** Identificar las tareas necesarias para abordar las observaciones detectadas por SonarQube y Snyk.  
  2. **Ejecución:** Implementar las mejoras en sprints semanales.  
  3. **Pruebas:** Validar que las mejoras resuelvan las vulnerabilidades y problemas técnicos.  
  4. **Revisión:** Realizar análisis iterativos con SonarQube y Snyk para asegurar una mejora continua.  

#### **Técnicas utilizadas**
1. **Refactorización de código:**  
   - Mejorar la legibilidad y modularidad del código.
   - Reducir la complejidad ciclomática identificada por SonarQube.
2. **Pruebas automatizadas:**  
   - Cobertura de pruebas unitarias y de integración.
   - Validación automatizada con herramientas como Jest y Postman.
3. **Gestión de dependencias:**  
   - Actualización de paquetes con vulnerabilidades detectadas por Snyk.
   - Uso de versiones estables y seguras de las librerías utilizadas.
4. **Documentación técnica:**  
   - Actualización de la documentación para reflejar los cambios realizados.
   - Uso de Swagger para documentar la API REST.

---

## **8. Cronograma**

El cronograma se diseñó en función de las observaciones realizadas por SonarQube y Snyk, estableciendo tareas para reducir deuda técnica, vulnerabilidades, fallas críticas y mejorar la calidad del código.  

| **Tarea**                                | **Responsable**           | **Duración** | **Herramientas**           | **Recursos**                  |
|------------------------------------------|---------------------------|--------------|----------------------------|-------------------------------|
| Análisis inicial con SonarQube y Snyk    | Equipo de QA              | 1 semana     | SonarQube, Snyk            | Código fuente de UPT-SYNC     |
| Refactorización del código crítico       | Desarrollador Backend     | 2 semanas    | VS Code, SonarQube         | Guías de buenas prácticas     |
| Corrección de vulnerabilidades           | Desarrollador Backend     | 1 semana     | Snyk, NPM                  | Actualización de dependencias |
| Implementación de pruebas unitarias      | Equipo de Desarrollo      | 1 semana     | Jest, Mocha              | Cobertura de código           |
| Mejoras en la interfaz gráfica (UI/UX)  | Diseñador UI/UX           | 1 semana     | Figma, React               | Diseño de interfaces          |
| Pruebas finales y validación             | Equipo de QA              | 1 semana     | SonarQube, Snyk, Jest      | Reportes de calidad           |
| Documentación técnica y despliegue       | Líder del proyecto        | 1 semana     | GitHub, Swagger, Markdown  | Documentos actualizados       |

#### **Total estimado: 8 semanas**

---

### **Recursos necesarios**
1. **Humanos:**  
   - Desarrolladores backend y frontend.  
   - Ingenieros de QA.  
   - Diseñadores UI/UX.  
   - Líder técnico.  

2. **Técnicos:**  
   - Servidores para pruebas de integración.  
   - Licencias de herramientas (SonarQube, Snyk, Docker).  

3. **Otros recursos:**  
   - Manuales y guías de buenas prácticas en Node.js, Express y MongoDB.  

---

**Nota:** Este cronograma está diseñado para eliminar completamente las observaciones identificadas por las herramientas y garantizar que la aplicación cumpla con los estándares más altos de calidad, seguridad y rendimiento.
---

## **9. Desarrollo de Solución de Mejora**

### **9.1 Análisis General**
Con base en los resultados obtenidos de las herramientas **SonarQube** y **Snyk**, se identificaron áreas clave para la mejora de la aplicación **UPT-SYNC**. Estas mejoras incluyen optimización de la arquitectura, refactorización del código, ampliación de las pruebas para cubrir escenarios críticos y fortalecimiento de la seguridad.

---

### **9.2 Diagrama de Arquitectura de la Aplicación**
El siguiente diagrama representa la arquitectura general de **UPT-SYNC**, detallando los componentes principales y su interacción:

- **Frontend:**  
  - Interfaz gráfica desarrollada en React para proporcionar una experiencia intuitiva y responsiva al usuario.
- **Backend:**  
  - API REST construida con Node.js y Express para manejar las solicitudes y coordinar la lógica del negocio.
- **Automatización:**  
  - Puppeteer para interactuar con la intranet y extraer los datos requeridos.
- **Base de Datos:**  
  - MongoDB para almacenar datos sincronizados como horarios, asistencias y justificaciones de inasistencias.
- **Gestión de Correo:**  
  - Nodemailer para el envío automatizado de notificaciones y solicitudes.

**Diagrama:** 
 
```mermaid
flowchart TD
    subgraph Frontend
        ReactUI[React UI]
        ReactRouter[React Router]
    end

    subgraph Backend
        NodeAPI[API REST en Node.js]
        Auth[Autenticación]
        Controllers[Controladores]
        DBService[Servicio de Base de Datos]
        FileUpload[Manejo de Archivos]
        Scraper[Scraper de la Intranet]
    end

    subgraph MobileApp
        FlutterApp[App en Flutter]
    end

    subgraph Cloud
        MongoAtlas[(MongoDB Atlas)]
        MailService[Servicio de Correos - Mailtrap]
        FileStorage[Almacenamiento de Archivos]
    end

    subgraph ExternalSystems
        Intranet[Intranet Universitaria]
    end

    ReactUI -->|API Calls| NodeAPI
    ReactRouter --> ReactUI
    FlutterApp -->|API Calls| NodeAPI

    NodeAPI -->|CRUD| MongoAtlas
    NodeAPI -->|Manejo de Archivos| FileStorage
    NodeAPI -->|Notificaciones| MailService

    Scraper -->|Obtener Datos| Intranet
    Scraper -->|Sincronización| MongoAtlas
    NodeAPI -->|Sincronización| Scraper

    DBService --> MongoAtlas
    FileUpload --> FileStorage
    Auth --> MongoAtlas
    Controllers --> DBService
    Controllers --> Auth

    style MongoAtlas fill:#f7df1e,stroke:#333,stroke-width:2px
    style FileStorage fill:#87cefa,stroke:#333,stroke-width:2px
    style MailService fill:#ffcccb,stroke:#333,stroke-width:2px
    style ReactUI fill:#61dafb,stroke:#333,stroke-width:2px
    style FlutterApp fill:#42a5f5,stroke:#333,stroke-width:2px
    style Intranet fill:#d5f5e3,stroke:#333,stroke-width:2px
    style Scraper fill:#ffa07a,stroke:#333,stroke-width:2px
```

---

### **9.3 Diagrama de Clases de la Aplicación**
El diagrama de clases describe las relaciones entre los componentes principales de la aplicación. 

- **Clases principales:**
  - `Usuario`: Contiene información del estudiante como ID, nombre, y rol.
  - `Horario`: Representa los horarios sincronizados de los cursos.
  - `Asistencia`: Maneja el historial de asistencias del usuario.
  - `Justificación`: Permite la gestión de solicitudes de inasistencias.
  - `Sincronización`: Encargada del scraping y actualización de datos desde la intranet.

### Diagrama de Clases General
```mermaid
classDiagram
    %% Clases principales
    class NodeAPI {
        +startServer(): void
    }
    class AuthController {
        +createAccount(req: Request, res: Response): Promise<void>
        +login(req: Request, res: Response): Promise<void>
        +confirmAccount(req: Request, res: Response): Promise<void>
        +forgotPassword(req: Request, res: Response): Promise<void>
        +updatePasswordWithToken(req: Request, res: Response): Promise<void>
    }
    class JustificationController {
        +submitJustification(req: Request, res: Response): Promise<void>
        +getStudentHistory(req: Request, res: Response): Promise<void>
        +updateStatus(req: Request, res: Response): Promise<void>
        +addComment(req: Request, res: Response): Promise<void>
    }
    class Scraper {
        +fetchData(): Promise<any>
        +parseData(rawData: any): any
        +syncWithDatabase(): Promise<void>
    }
    class MongoAtlas {
        +connectDB(): Promise<void>
        +disconnectDB(): Promise<void>
    }
    class TokenService {
        +generateToken(payload: any): string
        +verifyToken(token: string): any
        +hashPassword(password: string): Promise<string>
        +checkPassword(password: string, hash: string): Promise<boolean>
    }
    class EmailService {
        +sendConfirmationEmail(details: IEmail): Promise<void>
        +sendPasswordResetToken(details: IEmail): Promise<void>
        +sendJustificationEmail(details: IJustificationEmail): Promise<void>
    }
    class Logger {
        +info(message: string): void
        +error(message: string): void
    }

    %% Modelos de datos
    class User {
        -email: string
        -password: string
        -name: string
        -confirmed: boolean
        +save(): Promise<void>
        +findById(id: string): User
    }
    class Token {
        -token: string
        -user: string
        +save(): Promise<void>
        +deleteOne(): Promise<void>
        +findOne(query: object): Token
    }
    class Justification {
        -studentId: string
        -studentName: string
        -date: Date
        -reason: string
        -status: string
        -comments: Comment[]
        -attachmentUrl: string
        +save(): Promise<void>
        +find(query: object): Justification[]
        +findById(id: string): Justification
    }
    class Comment {
        -author: string
        -comment: string
        -createdAt: Date
    }

    %% Relaciones
    NodeAPI --> AuthController
    NodeAPI --> JustificationController
    NodeAPI --> MongoAtlas
    NodeAPI --> Logger
    NodeAPI --> Scraper
    AuthController --> TokenService
    AuthController --> EmailService
    JustificationController --> MongoAtlas
    JustificationController --> EmailService
    JustificationController --> Logger
    Scraper --> MongoAtlas
    Scraper --> Logger
    TokenService --> User
    EmailService --> User
    EmailService --> Justification
    Justification ""1"" --> ""n"" Comment
    Justification --> User
    Token --> User

    %% Anotaciones
    class AuthController {
        <<Controller>>
    }
    class JustificationController {
        <<Controller>>
    }
    class Scraper {
        <<Service>>
    }
    class EmailService {
        <<Service>>
    }
    class MongoAtlas {
        <<Database>>
    }
    class Logger {
        <<Utility>>
    }
    class TokenService {
        <<Utility>>
    }
    class User {
        <<Model>>
    }
    class Justification {
        <<Model>>
    }
    class Token {
        <<Model>>
    }
    class Comment {
        <<Model>>
    }


```

### Diagrama de Clases - Autenticación

```mermaid
classDiagram
    class AuthController {
        +createAccount(email, password)
        +login(email, password)
        +requestConfirmationCode(email)
        +forgotPassword(email)
        +validateToken(token)
        +updatePasswordWithToken(token, newPassword)
        +user()
        -hashPassword(password)
        -checkPassword(password, hashedPassword)
        -generateJWT(user)
    }
    
    class User {
        +email: String
        +password: String
        +confirmed: Boolean
        +save()
        +findOne(query)
    }
    
    class Token {
        +userId: ObjectId
        +token: String
        +createdAt: Date
        +save()
        +findOne(query)
    }
    
    class EmailService {
        +sendConfirmationEmail(email, token)
        +sendPasswordResetEmail(email, token)
    }
    
    AuthController --> User : uses
    AuthController --> Token : uses
    AuthController --> EmailService : uses
```

### Diagrama de Clases - Sincronización

```mermaid
classDiagram
    class SyncController {
        +syncUserData(codigo, contrasena)
        +syncUserSchedule(codigo, contrasena)
        +syncUserAttendance(codigo, contrasena)
        +syncUserCredits(codigo, contrasena)
        -processScheduleData(rawData)
    }
    
    class IntranetSync {
        +autenticar(codigo, contrasena)
        +autenticarYExtraerHorario(codigo, contrasena)
        +autenticarYExtraerAsistencias(codigo, contrasena)
        +autenticarYExtraerCreditos(codigo, contrasena)
    }
    
    class Schedule {
        +userId: ObjectId
        +scheduleData: Object
        +save()
    }
    
    class Attendance {
        +userId: ObjectId
        +attendanceData: Object
        +save()
    }
    
    class Credit {
        +userId: ObjectId
        +creditData: Object
        +save()
    }
    
    SyncController --> IntranetSync : uses
    SyncController --> Schedule : uses
    SyncController --> Attendance : uses
    SyncController --> Credit : uses
```
### Modelo de Datos
```mermaid
classDiagram
    class User {
        +id: ObjectId
        +email: String
        +password: String
        +role: String
        +confirmed: Boolean
    }
    
    class Student {
        +id: ObjectId
        +userId: ObjectId
        +studentCode: String
        +name: String
        +lastName: String
    }
    
    class Teacher {
        +id: ObjectId
        +userId: ObjectId
        +teacherCode: String
        +name: String
        +lastName: String
    }
    
    class Course {
        +id: ObjectId
        +code: String
        +name: String
        +teacherId: ObjectId
    }
    
    class Class {
        +id: ObjectId
        +courseId: ObjectId
        +date: Date
        +startTime: Time
        +endTime: Time
    }
    
    class Attendance {
        +id: ObjectId
        +classId: ObjectId
        +studentId: ObjectId
        +status: String
        +justification: String
    }
    
    class Notification {
        +id: ObjectId
        +userId: ObjectId
        +message: String
        +createdAt: Date
        +read: Boolean
    }
    
    User <|-- Student : extends
    User <|-- Teacher : extends
    Teacher ""1"" -- ""*"" Course : teaches
    Course ""1"" -- ""*"" Class : has
    Class ""1"" -- ""*"" Attendance : records
    Student ""1"" -- ""*"" Attendance : has
    User ""1"" -- ""*"" Notification : receives
```

---

### **9.4 Métodos de Pruebas Implementados para Coberturar la Aplicación**
Se implementaron pruebas a nivel de unidad, integración y funcionalidad con el objetivo de garantizar la calidad del código, minimizar errores y validar el correcto funcionamiento de la aplicación.

#### **Pruebas Unitarias**
- **Objetivo:** Validar el correcto funcionamiento de métodos individuales en los controladores y servicios.
- **Herramienta utilizada:** Jest.
- **Cobertura:**  
  - Métodos de autenticación de usuarios.
  - Gestión de datos en MongoDB (inserción, actualización, eliminación).
  - Generación de solicitudes de justificación.

#### **Pruebas de Integración**
- **Objetivo:** Validar la interacción entre los diferentes módulos de la aplicación (Frontend, API REST, Base de Datos).
- **Herramienta utilizada:** Postman.
- **Cobertura:**  
  - Endpoints de sincronización de datos.
  - Gestión de horarios y asistencias.
  - Envío de correos con Nodemailer.

---

### **Resumen de Cobertura de Pruebas**
Se logró una cobertura del 90% del código con pruebas unitarias e integrales, mientras que las pruebas de seguridad y funcionalidad alcanzaron una cobertura del 100% en los escenarios críticos.

| **Tipo de Prueba**       | **Cobertura Lograda** | **Herramienta**      |
|--------------------------|-----------------------|----------------------|
| Pruebas Unitarias        | 88%                  | Jest                |
| Pruebas de Integración   | 67%                  | Jest, Mocha          |
| Pruebas Mutantes     | 100%                 | Stryker          |
| Pruebas de Seguridad     | 100%                 | SonarQube, Snyk y Seemgrep    |


---

**Nota:** Esta sección integra los diagramas y las pruebas necesarias para garantizar que **UPT-SYNC** cumpla con los estándares más altos de calidad, rendimiento y seguridad. Si necesitas más detalles sobre los diagramas o herramientas específicas, revisa los archivos en la carpeta correspondiente del repositorio."
UPT-FAING-EPIS/si784_2024-ii-proyecto_si784_2024_ii_u2-proyecto-formatos-02,si784_2024,ii-proyecto_si784_2024_ii_u2-proyecto-formatos-02,True,22,True,0,False,False,False,# proyecto-formatos-02
UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-contreras_paja_hernandez,proyecto,si784-2024-ii-u2-contreras_paja_hernandez,True,783,False,1,True,False,False,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17274511)
# proyecto-formatos-02


## **CONTROL ASISTENCIA**

El proyecto de Sistema de Control de Asistencia tiene como objetivo implementar una solución informática que permita gestionar y controlar de manera eficiente la asistencia de empleados o estudiantes en un determinado contexto, como una empresa, institución educativa o cualquier otro entorno donde sea necesario llevar un registro preciso de la asistencia. Integrantes:

* Alvaro Javier Contres Lipa
* Angel Gadiel Hernandez Cruz
* Piero Alexander Paja de la Cruz"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-caxi_aguilar_chata,proyecto,si784-2024-ii-u2-caxi_aguilar_chata,True,6591,False,5,True,True,False,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17275129)

<div align=""center"">

![./media/media/image1.png](./media/logo-upt.png)

**UNIVERSIDAD PRIVADA DE TACNA**  

**FACULTAD DE INGENIERÍA**  

**Escuela Profesional de Ingeniería de Sistemas**  

**Proyecto _UPT-SYNC: Herramienta de apoyo para estudiantes_**  

Curso: _Calidad y Pruebas de Software_  

Docente: _Mag. Patrick Cuadros Quiroga_  

Integrantes:  

***CAXI CALANI Luis Eduardo (2018062487)***  
***AGUILAR PINTO Victor Eleazar (2018062487)***  

**Tacna – Perú**  

***2024***  

</div>

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

# **Sistema UPT-SYNC**

## **10. Reportes Generados**

A continuación, se presentan los enlaces a los reportes generados durante el análisis y pruebas de la aplicación **UPT-SYNC**, utilizando diversas herramientas para evaluar la calidad del código, la cobertura de pruebas y la seguridad.

---

### **10.1 Reportes de Cobertura de Pruebas**

1. **Reporte de Cobertura de Pruebas Unitarias:**  
   [Ver Reporte de Cobertura de Pruebas Unitarias](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/unit-tests)  
   Este reporte muestra los resultados de las pruebas unitarias realizadas sobre los módulos principales de la aplicación.  
   - **Cobertura Total Alcanzada:** 88%  
   - **Herramienta Utilizada:** Jest  

2. **Reporte de Cobertura de Pruebas de Integración:**  
   [Ver Reporte de Cobertura de Pruebas de Integración](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/integration-tests)  
   Este informe detalla los resultados de las pruebas de integración, enfocándose en la interacción entre los diferentes módulos de la aplicación.  
   - **Cobertura Total Alcanzada:** 67%  
   - **Herramienta Utilizada:** Jest, Mocha  

---

### **10.2 Reportes de Mutaciones y Aceptación**

3. **Reporte de Mutaciones:**  
   [Ver Reporte de Mutaciones](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/mutation-report.html)  
   Evalúa la robustez del código al introducir mutaciones en el mismo y validar la eficacia de las pruebas existentes.  
   - **Propósito:** Identificar posibles fallos en las pruebas automatizadas.

4. **Reporte de Aceptación:**  
   Documenta los escenarios de prueba funcional que validan los requerimientos del usuario final.  
   - **Propósito:** Garantizar que las funcionalidades cumplen con las expectativas del usuario.

---

### **10.3 Reportes de Seguridad**

5. **Reporte de Análisis de Contenedor (Snyk):**  
   [Ver Reporte de Seguridad - Snyk](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/snyk-report/)  
   Resultado del análisis de vulnerabilidades en las dependencias y contenedores utilizados en el proyecto.  
   - **Herramienta Utilizada:** Snyk  

6. **Reporte de Análisis Estático de Código (Semgrep):**  
   [Ver Reporte de Seguridad - Semgrep](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/semgrep-report/)  
   Este análisis detecta posibles problemas de seguridad y estándares de código no cumplidos.  
   - **Herramienta Utilizada:** Semgrep  

---

### **10.4 Reportes de Prueba de Interfaz**  
Las pruebas de interfaz se realizan utilizando Playwright y están enfocadas en validar la interacción del usuario con la aplicación.

* Objetivos de las Pruebas de Interfaz
    - Verificar que los elementos clave de la interfaz se carguen correctamente.
    - Validar que las acciones del usuario (como iniciar sesión, navegar entre menús, y llenar formularios) funcionen según lo esperado.
    - Asegurar que los mensajes de error y validación se muestren de manera adecuada.
    - Comprobar que los datos de sesión y rutas redireccionen correctamente.

* Herramientas Utilizadas
    - Microsoft Playwright: Para automatizar y ejecutar las pruebas de interfaz.
    - NUnit: Framework para estructurar las pruebas.

* Casos de Prueba
    1. Página de Inicio (HomePage)

    - Verificar que el título principal se muestra correctamente.
    - Validar que se muestren la fecha y hora actualizadas.
    - Comprobar que el botón ""Iniciar Sesión"" redirige correctamente a la página de inicio de sesión.

    2. Página de Inicio de Sesión (LoginPage)

    - Validar el comportamiento del formulario de inicio de sesión:
        - Campos vacíos generan mensajes de error: Completa este campo o Please fill out this field.
        - Inicio de sesión exitoso redirige al dashboard.
    - Verificar que la funcionalidad de mostrar/ocultar contraseña funciona correctamente.

    3. Panel de Control (Dashboard)

    - Validar que se muestra el mensaje de bienvenida correcto.
    - Comprobar que el menú lateral contiene todas las opciones necesarias (Sincronizar, Horarios, Asistencias, Justificaciones).
    - Asegurar que cada opción del menú lateral navega correctamente a la sección correspondiente.

    4. Mensajes de Validación

    - Confirmar que los mensajes de error son consistentes y se muestran en español o inglés, según el contexto.

* Ejecución de las Pruebas

    - Para ejecutar las pruebas localmente, asegúrate de tener las herramientas necesarias instaladas y sigue estos pasos:

    - Configura el entorno de desarrollo:
        Instala los navegadores necesarios con Playwright:
```
    npx playwright install
```
   - Correr la aplicación
```
    npm run start
```
![image](https://github.com/user-attachments/assets/224ad41f-6064-4af4-a358-ed87cd9cb32f)

   - Ejecuta las pruebas:
```
dotnet test
```
Genera el reporte de pruebas: Un archivo HTML con los resultados de las pruebas se genera automáticamente en la carpeta videos del proyecto. Este archivo incluye videos de las pruebas ejecutadas.

Pruebas realizadas correctamente:
![image](https://github.com/user-attachments/assets/b687e061-e1ad-485a-b053-803979dba603)

Videos de las pruebas realizadas:
![image](https://github.com/user-attachments/assets/d4efa661-2c10-4cd1-a4cc-6eadfc3650a1)

Página con los videos de las pruebas:
![image](https://github.com/user-attachments/assets/8d75dbd1-296f-4455-92bb-654a8334840d)


---



**Nota:** Los reportes enlazados están alojados en GitHub Pages y documentan exhaustivamente los análisis y resultados de calidad, seguridad y pruebas implementados en **UPT-SYNC**.  



* Luis Eduardo Caxi Calani
* Victor aguilar Pinto"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva,proyecto,si784-2024-ii-u2-chambi_floresq_floresm_leyva,True,4987,True,7,True,True,True,"# 🚀 Proyecto Casa de cambio en línea
![Banner del Proyecto](https://i.ibb.co/m5HMZH5/asd.jpg)

## 👥 Equipo de Desarrollo

| <img src=""https://github.com/elvisleyva49.png"" width=""100"" style=""border-radius:50%""/> | <img src=""https://github.com/jf2021070309.png"" width=""100"" style=""border-radius:50%""/> | <img src=""https://i.pinimg.com/236x/f5/f7/52/f5f75210890fe7da36fb85d162c759e8.jpg"" width=""100"" style=""border-radius:50%""/> |
|:---------------------------------------------------------------------------------:|:---------------------------------------------------------------------------------:|:---------------------------------------------------------------------------------:|
| **Elvis Ronald Leyva Sardon** | **Jaime Elias Flores Quispe** | **Jerson Roni Chambi Cori** |

## 🛠️ Tecnologías Utilizadas

### Lenguajes de Programación
<div style=""display: flex; gap: 10px;"">
  <div style=""flex: 82.4"">
    <img src=""https://img.shields.io/badge/Python-82.4%25-3776AB?style=for-the-badge&logo=python&logoColor=white""/>
  </div>
  <div style=""flex: 14.8"">
    <img src=""https://img.shields.io/badge/HTML-14.8%25-E34F26?style=for-the-badge&logo=html5&logoColor=white""/>
  </div>
  <div style=""flex: 2.0"">
    <img src=""https://img.shields.io/badge/CSS-2.0%25-1572B6?style=for-the-badge&logo=css3&logoColor=white""/>
  </div>
  <div style=""flex: 0.5"">
    <img src=""https://img.shields.io/badge/JavaScript-0.5%25-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black""/>
  </div>
  <div style=""flex: 0.2"">
    <img src=""https://img.shields.io/badge/PowerShell-0.2%25-5391FE?style=for-the-badge&logo=powershell&logoColor=white""/>
  </div>
  <div style=""flex: 0.1"">
    <img src=""https://img.shields.io/badge/C-0.1%25-A8B9CC?style=for-the-badge&logo=c&logoColor=white""/>
  </div>
</div>

### 🔧 Frameworks y Herramientas de Calidad

<table>
  <tr>
    <td align=""center"">
      <a href=""https://www.sonarqube.org/"">
        <img src=""https://assets-eu-01.kc-usercontent.com/f42196a6-70a1-01d0-99f1-43134f12a58b/8e59bcad-6e39-41dc-abd9-a0e251e8d63f/Sonar%20%282%29.svg?w=160&h=40&auto=format&fit=crop"" width=""100""/>
        <br>SonarQube
      </a>
    </td>
    <td align=""center"">
      <a href=""https://snyk.io/"">
        <img src=""https://res.cloudinary.com/snyk/image/upload/v1537345894/press-kit/brand/logo-black.png"" width=""100""/>
        <br>Snyk
      </a>
    </td>
    <td align=""center"">
      <a href=""https://semgrep.dev/"">
        <img src=""https://semgrep.dev/logo.png"" width=""100""/>
        <br>Semgrep
      </a>
    </td>
  </tr>
</table>

### 🧪 Testing Frameworks

<table>
  <tr>
    <td align=""center"">
      <a href=""https://docs.pytest.org/"">
        <img src=""https://docs.pytest.org/en/stable/_static/pytest1.png"" width=""100""/>
        <br>Pytest
        <br><i>Pruebas Unitarias</i>
      </a>
    </td>
    <td align=""center"">
      <a href=""https://mutmut.readthedocs.io/"">
        <img src=""https://i.ibb.co/V2Dg3zL/Presentaci-n-proyecto-de-tecnolog-a-gradient-tecnol-gico-azul-oscuro-1920-x-500-px-910-x-500-px-910.png"" width=""100""/>
        <br>Mutmut
        <br><i>Pruebas Mutantes</i>
      </a>
    </td>
    <td align=""center"">
      <a href=""https://docs.qameta.io/allure/"">
        <img src=""https://i.ibb.co/GRgNXTJ/Presentaci-n-proyecto-de-tecnolog-a-gradient-tecnol-gico-azul-oscuro-1920-x-500-px-910-x-500-px-910.png"" width=""100""/>
        <br>Allure
        <br><i>BDD Testing</i>
      </a>
    </td>
    <td align=""center"">
      <a href=""https://playwright.dev/"">
        <img src=""https://playwright.dev/img/playwright-logo.svg"" width=""100""/>
        <br>Playwright
        <br><i>UI Testing</i>
      </a>
    </td>
  </tr>
</table>

## 📊 Dashboards de Calidad

- 🔍 [Dashboard de SonarQube](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/htmlcov/index.html)
- 🛡️ [Reporte de Vulnerabilidades Snyk](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/reporte-snyk.html)
- 📝 [Análisis de Semgrep](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/reporte-semgrep.html)
- 🧪 [Reporte de Pruebas Unitarias](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/report-unit/index.html)
- 🧬 [Reporte de Pruebas Mutantes](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/reporte-mutantes/index.html)
- 📈 [Reporte de Allure](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/allure-report/index.html)
- 🖥️ [Reporte de Playwright](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/playwright-report/index.html)

## 🚀 Comenzando

```bash
# Clonar el repositorio
git clone https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva.git

# Instalar dependencias
pip install -r requirements.txt

# Ejecutar pruebas
pytest

# Ejecutar pruebas mutantes
mutmut run"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-floresR_salinas_ticahuanca,proyecto,si784-2024-ii-u2-floresR_salinas_ticahuanca,True,28156,False,17,True,False,True,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17290969)
# proyecto-formatos-02

<div align=""center"">
  <img src=""./media/logo-upt.png"" alt=""Escudo UPT"" style=""width:1.088in;height:1.46256in"" />
  
  # **UNIVERSIDAD PRIVADA DE TACNA**

  ## **FACULTAD DE INGENIERÍA**  
  
  ### **Escuela Profesional de Ingeniería de Sistemas**  
  
  ## **Proyecto: ""PDF SOLUTIONS""**  
  
  **Curso:** Calidad y prueba de software  
  **Docente:** Ing. Patrick Jose Cuadros Quiroga  

  ### **Integrantes:**
  - Mario Antonio Flores Ramos (2018000597)
  - Erick Javier Salinas Condori (2020069046)
  - Fiorela Milady Ticahuanca Cutipa (2020068765)

  **Tacna – Perú**  
  2024
</div>

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

<div align=""center"">
  Sistema: ""PDF SOLUTIONS""

  ## **Informe de Factibilidad**

  ## **Versión: ""2.0""**
</div>

## **CONTROL DE VERSIONES**

| **Versión** | **Hecha por**                           | **Revisada por**                          | **Aprobada por**              | **Fecha**     | **Motivo**  |
|:-----------:|:----------------------------------------:|:-----------------------------------------:|:-----------------------------:|:-------------:|:-----------:|
| 2.0         | Erick Salinas, Mario Flores, Fiorela Ticahuanca | Erick Salinas, Mario Flores, Fiorela Ticahuanca | Patrick Cuadros | 23/11/2024 | Versión 2   |

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>


# **INDICE GENERAL**

Resumen

El informe presenta el mejoramiento de la aplicación PDF Solutions, diseñada para gestionar documentos PDF de manera eficiente y segura. La aplicación incluye un sistema de login y suscripciones, con diferentes niveles de acceso para los usuarios. Su enfoque está en facilitar tareas como combinar y dividir archivos PDF, resolviendo problemas comunes de manipulación de documentos. Con opciones de suscripción, los usuarios acceden a funciones avanzadas según sus necesidades. El objetivo es ofrecer una solución centralizada, accesible y optimizada, mejorando la experiencia de usuario y simplificando procesos manuales en el manejo de archivos PDF.

Abstract

The report presents the improvement of the PDF Solutions application, designed to efficiently and securely manage PDF documents. The application includes a login system and subscriptions, offering different access levels for users. It focuses on simplifying tasks such as combining and splitting PDF files, solving common document handling issues. With subscription options, users can access advanced features based on their needs. The goal is to provide a centralized, accessible, and optimized solution, improving the user experience and simplifying manual processes in PDF file management.


[1. Antecedentes o introducción](#_Toc52661346)

[2. Titulo](#_Toc52661347)

[3. Autores](#_Toc52661348)

[4. Planteamiento del problema](#_Toc52661349)

[4.1 Problema](#_Toc52661350)

[4.2 Justificación](#_Toc52661351)

[4.3 Alcance](#_Toc52661352)

[5. Objetivos](#_Toc52661356)

[5.1 General](#_Toc52661350)

[5.2 Especificos](#_Toc52661351)

[6. Referentes teóricos](#_Toc52661357)

[7. Desarrollo de la propuesta](#_Toc52661356)

[7.1 Tecnología de información ](#_Toc52661350)

[7.2 Metodología, técnicas usadas](#_Toc52661351)

[7. Cronograma](#_Toc52661356)


<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

**<u>Tema: Mejoramiento de la Aplicación PDF SOLUTION</u>**

1. <span id=""_Toc52661346"" class=""anchor""></span>**Antecedentes o introducción**

El presente informe aborda el mejoramiento de la aplicación PDF Solutions, desarrollada para gestionar documentos PDF de manera eficiente y segura. Esta aplicación se ha construido con una arquitectura que integra un sistema de login y suscripciones, ofreciendo diferentes niveles de acceso a los usuarios según su tipo de suscripción. El proyecto se enfoca en proporcionar herramientas para el manejo de archivos PDF, permitiendo a los usuarios realizar tareas como juntar y cortar documentos de manera sencilla y rápida.

PDF Solutions busca resolver problemas comunes en la manipulación de archivos PDF, como la falta de opciones para combinar varios documentos o dividir un archivo grande en secciones más pequeñas. La aplicación está diseñada para ser intuitiva y funcional, ofreciendo una experiencia de usuario amigable y eficiente. Con opciones de suscripción, los usuarios pueden acceder a funcionalidades avanzadas según sus necesidades, asegurando un servicio personalizado y adaptable.

La mejora de esta aplicación tiene como objetivo proporcionar una solución centralizada y accesible para la gestión de archivos PDF, reduciendo los errores y simplificando procesos que tradicionalmente son manuales y tediosos. Además, ofrece una experiencia de usuario optimizada, facilitando la manipulación de documentos y brindando un servicio confiable y eficiente para individuos y empresas que requieren un manejo eficaz de sus archivos PDF.

2. <span id=""_Toc52661347"" class=""anchor""></span>**Titulo**

MEJORAMIENTO DE LA APLICACIÓN PDF SOLUTIONS

3. <span id=""_Toc52661348"" class=""anchor""></span>**Autores**

  - Mario Antonio Flores Ramos (2018000597)
  - Erick Javier Salinas Condori (2020069046)
  - Fiorela Milady Ticahuanca Cutipa (2020068765)

4. <span id=""_Toc52661349"" class=""anchor""></span>**Planteamiento del problema**

    4.1. <span id=""_Toc52661350"" class=""anchor""></span>Problema: 
    
    El manejo y la manipulación de archivos PDF presentan desafíos para muchos usuarios, especialmente cuando se requiere combinar o dividir documentos de manera eficiente. Las herramientas tradicionales o la falta de un sistema especializado dificultan la gestión de archivos, resultando en procesos tediosos y propensos a errores. Además, la ausencia de una plataforma que ofrezca funcionalidades avanzadas de manera intuitiva afecta la productividad y la experiencia del usuario.

    Esta situación genera ineficiencias, pérdida de tiempo y una experiencia poco satisfactoria al trabajar con documentos PDF. Por lo tanto, es necesario contar con una aplicación que proporcione una solución centralizada y fácil de usar, que permita gestionar y manipular archivos PDF de forma segura, eficiente y adaptable a las necesidades de los usuarios.

    4.2. <span id=""_Toc52661351"" class=""anchor""></span>Justificación:

    La mejora de la aplicación PDF Solutions es fundamental para proporcionar a los usuarios una herramienta eficiente y segura en la gestión de archivos PDF. La implementación de funcionalidades como el login, suscripciones y opciones avanzadas para juntar y cortar PDF permite optimizar la experiencia del usuario y facilita la manipulación de documentos de manera efectiva.

    Contar con una solución centralizada y automatizada reduce la complejidad y el tiempo necesario para gestionar archivos PDF, permitiendo a los usuarios realizar estas tareas de manera rápida y precisa. Esto no solo mejora la productividad, sino que también ofrece una experiencia más satisfactoria y accesible, adaptándose a las diversas necesidades de los usuarios. Al brindar un sistema confiable y fácil de usar, se contribuye a la optimización de procesos y a la mejora general de la gestión de documentos PDF.

    4.3. <span id=""_Toc52661352"" class=""anchor""></span>Alcance:

    Este documento se enfoca en el mejoramiento de la aplicación PDF Solutions, implementando mejoras en la vista lógica del sistema y asegurando una experiencia de usuario eficiente para la gestión de archivos PDF. Se describen los aspectos fundamentales de las funcionalidades principales, omitiendo detalles específicos de las vistas de procesos.

    - **Gestión de archivos PDF**: Implementación de funciones para juntar y cortar archivos PDF, permitiendo a los usuarios manipular documentos de manera sencilla y          eficiente.  
    - **Sistema de autenticación y suscripciones**: Desarrollo de un sistema de login y gestión de suscripciones, proporcionando acceso controlado a funciones avanzadas según el tipo de suscripción.  
    - **Experiencia de usuario optimizada**: Creación de una interfaz de usuario intuitiva y fácil de usar para mejorar la interacción con la aplicación.  
    - **Administración de suscripciones**: Gestión de los niveles de acceso y suscripciones de los usuarios, facilitando la administración y actualización de sus permisos.  
    - **Seguridad y privacidad**: Garantizar la integridad y confidencialidad de los datos del usuario, ofreciendo un sistema de autenticación seguro.  
    - **Vista lógica**: Gestión de usuarios, manipulación de archivos PDF, administración de suscripciones y funcionalidades de control de acceso.  
    - **Vista de desarrollo**: Implementación del patrón MVC con C# y ASP.NET Core, estructura organizada del código y uso de buenas prácticas de programación.  
    - **Vista física**: Despliegue de la aplicación en un entorno web, asegurando la compatibilidad y el rendimiento en servidores y bases de datos.

5. <span id=""_Toc52661356"" class=""anchor""></span>**Objetivos**

    5.1. General

    Optimizar la aplicación PDF Solutions para mejorar la gestión y manipulación de archivos PDF, brindando funcionalidades avanzadas de manera eficiente y fácil de usar.

    5.8. Especifico

    - Implementar la funcionalidad de login y suscripciones: Garantizando un acceso seguro y personalizado para los usuarios según su nivel de suscripción.  
    - Desarrollar las opciones para juntar y cortar archivos PDF: Permitiendo que los usuarios realicen estas acciones de manera sencilla y eficiente.  
    - Optimizar la experiencia del usuario en la manipulación de archivos PDF: Asegurando un proceso intuitivo y fácil de utilizar.  
    - Integrar herramientas de administración para gestionar las suscripciones de los usuarios: Facilitando la modificación y actualización de sus niveles de acceso.  
    - Implementar un sistema de validación de usuarios para asegurar la integridad y privacidad de la información.  
    - Proveer una interfaz amigable y accesible que permita a los usuarios gestionar y manipular sus documentos PDF de manera efectiva.

6. <span id=""_Toc52661357"" class=""anchor""></span>**Referentes teóricos**

    Diagramas de Casos de Uso, Diagrama de Clases, Diagrama de Componentes y Arquitectura.

    ### **Diagrama de Caso de Uso:** 

    ![image](https://github.com/user-attachments/assets/4b631e3a-1907-434c-8cd6-24bfd69b1edf)

    ### **Diagrama de Clases:** 

    ![image](https://github.com/user-attachments/assets/bdc75895-1576-4a76-8c0f-a0e758118685)

    ### **Diagrama de Secuencia:** 

    Inicio Session

    ![image](https://github.com/user-attachments/assets/a0a6540a-1882-4ffd-a911-b387b48b5e6b)

    Comprar Suscripción Premium

    ![image](https://github.com/user-attachments/assets/b9baa662-cfb6-433c-adc3-6856534f7b79)

    Fusionar PDF

    ![image](https://github.com/user-attachments/assets/99e88cda-ffb1-431a-9e8c-d0d76d9851b9)

    Cortar PDF

    ![image](https://github.com/user-attachments/assets/fbe823da-24c0-4899-bf19-8e509e234ada)

    Ver Operaciones Realizadas

    ![image](https://github.com/user-attachments/assets/4b630c58-26aa-4745-ac8c-fca4ea25a77f)

    ### **Diagrama de Componentes:**

    ![image](https://github.com/user-attachments/assets/05caa0a5-7f06-4ab4-8b8f-f63e097d25a5)

    ### **Diagrama de Arquitectura:**

    ![image](https://github.com/user-attachments/assets/7c9f6c25-f6a4-4263-ba87-d4070bc088f0)

    ### **Diagrama de Despliegue:**

    ![image](https://github.com/user-attachments/assets/2089aae2-b181-42bd-843b-4b76c07fd43d)

    ### **Diagrama Base de datos relacional:**

    ![image](https://github.com/user-attachments/assets/64c4d2bb-5101-4e13-95b2-f5b606eecfbe)

    ### **Diagrama de Objetos:**

    ![image](https://github.com/user-attachments/assets/c7dcb564-4017-47bd-9f46-cdc1614c934c)

7. Desarrollo de la propuesta (Aqui va el analisis de su aplicación con SonarQube y Snyk, para que les muestre todos los aspectos a mejorar de su aplicación)

Análisis de la Aplicación con SonarQube: (Anteriormente el código se encuentraba así)

![image](https://github.com/user-attachments/assets/374fe9a6-64de-4329-b98d-4b31907a8c94)

![image](https://github.com/user-attachments/assets/ecadbbcc-4e9b-47f3-9946-376a80bae047)  

![image](https://github.com/user-attachments/assets/2f98665c-9f84-4b2b-989d-3c858754587b)

![image](https://github.com/user-attachments/assets/e04d426f-1afc-495f-9b33-84a0639ba177)

![image](https://github.com/user-attachments/assets/ad5866a6-2d78-42fd-8e72-53c52b01e27c)

![image](https://github.com/user-attachments/assets/b0f351cd-57d3-4f0f-88ac-fc7a63478488)

![image](https://github.com/user-attachments/assets/e464b480-26cc-4285-a6d4-d7d599529555)

![image](https://github.com/user-attachments/assets/21c8beb1-f1f2-441f-9fe0-2fb7669e433f)

![image](https://github.com/user-attachments/assets/7ba79d37-f4b5-4c07-bac2-329dc26d62fa)

![image](https://github.com/user-attachments/assets/2dbef74a-7ccb-407e-b3b0-c00c3d582211)

Como se puede ver las imágenes muestran un análisis de código que identifica problemas de mantenibilidad y consistencia en el proyecto.

Análisis de la Aplicación con Snyk

El problema mostrado en el código es que se está usando directamente una ruta de archivo que viene de una entrada del usuario, sin verificar si es segura. 
Esto podría permitir que un atacante cambie esa ruta y acceda a archivos que no debería.

![image](https://github.com/user-attachments/assets/26e083d9-44aa-490e-90b5-5772db7fdf27)

![image](https://github.com/user-attachments/assets/335b21dc-b8e6-495f-a83a-71be41c4714e)

![image](https://github.com/user-attachments/assets/0ab79821-7793-4782-918f-f78ae3357eba)

![image](https://github.com/user-attachments/assets/f5b988fc-9c81-4626-b36f-13b2cbda4874)

![image](https://github.com/user-attachments/assets/ffffe161-0b96-4f82-bdcc-e4307e68f708)

![image](https://github.com/user-attachments/assets/edecde05-1c7f-4dd5-947b-b562ab4c072d)

![image](https://github.com/user-attachments/assets/8b21e404-77e3-442a-8614-832d8c3a9f26)

## Snyk Reporte 

![image](https://github.com/user-attachments/assets/fed15ad1-4037-446e-9178-ff17f068de50)

El reporte de Snyk muestra que no se detectaron vulnerabilidades conocidas en las dependencias escaneadas dentro del proyecto analizado. Esto indica que las bibliotecas utilizadas actualmente no presentan riesgos de seguridad según la base de datos de vulnerabilidades de Snyk, lo que es una señal positiva en términos de seguridad para las dependencias externas del proyecto.

Análisis de la Aplicación con Semgrep

![image](https://github.com/user-attachments/assets/26fc401e-1624-4f64-be05-93396639cfb7)

![image](https://github.com/user-attachments/assets/428b807c-c12c-4a7c-b6fd-39a8445ee6e9)

## Semgrep Reporte

![image](https://github.com/user-attachments/assets/62b5fb8e-f88d-4e00-ad2c-dc81ca43db4c)

El reporte de Semgrep identifica varias advertencias relacionadas con problemas de seguridad, en su mayoría vinculadas a la falta de validación de tokens anti-CSRF en métodos clave del controlador OperacionesPDFController. También se detectan problemas de configuración y advertencias sobre validaciones insuficientes, clasificadas con niveles de gravedad baja a media. 

7.1.   Tecnología de información 

  **SonarQube**: Es una herramienta de análisis estático de código que permite revisar automáticamente la calidad del código fuente de la aplicación. SonarQube analiza la base de código y genera reportes sobre posibles errores, vulnerabilidades, deuda técnica, código duplicado y áreas donde se pueden aplicar mejoras. Además, realiza un seguimiento continuo de la calidad del código, integrándose con herramientas de CI/CD como GitHub Actions.
   
   **Snyk**: Snyk es una plataforma de seguridad que se enfoca en la gestión de vulnerabilidades en las dependencias y bibliotecas de código abierto. Durante el análisis, se identifican posibles vulnerabilidades en las dependencias de terceros, lo que permite corregir problemas de seguridad antes de que afecten la producción.

  **ASP.NET Core y C#**: El proyecto está desarrollado en ASP.NET Core utilizando el lenguaje de programación C#. Esto permite implementar una aplicación web robusta y escalable, con soporte para múltiples plataformas.

  **GitHub y GitHub Actions**: Se utilizó GitHub como sistema de control de versiones y plataforma de colaboración. GitHub Actions se empleó para la integración continua, ejecutando automáticamente los análisis de calidad del código con SonarQube y los análisis de seguridad con Snyk en cada push al repositorio.

  **MariaDB/MySQL**: Para la base de datos se utilizó MariaDB, que es una bifurcación de MySQL. Esta tecnología permitió gestionar el almacenamiento de datos de manera eficiente, con soporte para transacciones y consultas complejas.

7.2. Metodología, técnicas usadas
Para el desarrollo de la aplicación, se adoptaron diversas metodologías y técnicas que permitieron optimizar el flujo de trabajo y asegurar la calidad del producto final. Entre las principales metodologías y técnicas utilizadas se destacan:

   - **Desarrollo Ágil con GitHub Projects**: Se utilizó GitHub Projects para la planificación y gestión del trabajo en un entorno ágil. Las tareas se organizaron en tableros Kanban, permitiendo una visibilidad clara del progreso, asignación de tareas y establecimiento de prioridades. Cada tarea se vinculó con issues y pull requests dentro del repositorio, facilitando la colaboración y el seguimiento del avance de las funcionalidades.

  - **Integración Continua (CI)**: Se implementó un flujo de integración continua a través de GitHub Actions. Cada vez que se realizaba un cambio en el código (mediante un push o pull request), se ejecutaban pruebas automáticas, análisis de calidad con SonarQube y análisis de seguridad con Snyk, asegurando que el código estuviera siempre en condiciones óptimas para ser fusionado con la rama principal.

    - **Análisis Estático de Código**:
    
    - **SonarQube**: Para garantizar la calidad del código, se realizaron análisis estáticos con SonarQube, que permitió detectar errores, vulnerabilidades, duplicación de código y deuda técnica. Esto ayudó a mantener un código más limpio, eficiente y mantenible.
    
    - **Snyk**: Se utilizó Snyk para identificar vulnerabilidades en las dependencias de terceros, ofreciendo soluciones y actualizaciones a las bibliotecas vulnerables, mejorando la seguridad general de la aplicación.

8. Cronograma
   (personas, tiempo, otros recursos) Basado en las observaciones que la herramienta SonarQube les informara         sobre la aplicación, a fin de reducir la deuda tecnica, vulnerabilidades, fallas, etc. a 0.

9. Desarrollo de Solución de Mejora

9.1 Diagrama de Arquitectura de la aplicación

![image](https://github.com/user-attachments/assets/7c9f6c25-f6a4-4263-ba87-d4070bc088f0)

9.2. Diagrama de Clases de la aplicación

![image](https://github.com/user-attachments/assets/6e32b3d8-79d6-474d-a871-6adc216cc8a9)

9.3. Metodos de pruebas implementados para coberturar la aplicación

- Reporte de cobertura de pruebas

   Actualmente
  
   Pruebas Unitarias (cobertura de al menos 80% de codigo -  los metodos mas importantes)

   ![image](https://github.com/user-attachments/assets/e1df9c33-0755-4992-8c1b-a7fc9e769bfe)

La imagen nos muestra un reporte de pruebas unitarias donde se ha logrado una cobertura del 89.1% en el código, superando el umbral recomendado del 80%. Esto 
refleja un buen nivel de pruebas aplicadas a los métodos más importantes del sistema, lo que garantiza la validación de su funcionalidad. El análisis también 
destaca que no se encontraron problemas de seguridad ni duplicaciones de código, lo que contribuye a la mantenibilidad y confiabilidad del proyecto.

   ![image](https://github.com/user-attachments/assets/5adfcd3b-c054-4b8c-b7c2-158a3831c8e6)

   ![image](https://github.com/user-attachments/assets/c6d6c168-b26a-4a2d-a6b9-03ee408bad1b)

   ![image](https://github.com/user-attachments/assets/1625a7e3-1552-44c5-b271-0d6e0179c59a)

Se detectó un problema en la organización del código, donde una interfaz no estaba ubicada en el namespace adecuado, lo que afectaba la mantenibilidad del 
proyecto. Para solucionarlo, se movió la interfaz a un namespace más apropiado, mejorando la estructura y modularidad del código. Esta corrección hace que el 
código sea más organizado y esté alineado con las buenas prácticas de desarrollo.

   ![image](https://github.com/user-attachments/assets/b9d7db88-6e9e-48a9-872d-e6e77308660d)

   ![image](https://github.com/user-attachments/assets/01b87c2f-518e-4dda-9480-69b56d7a20b0)

Se identificó un problema de consistencia en la organización de las pruebas, ya que la clase DetalleSuscripcionRepositoryTests no estaba correctamente declarada en un namespace adecuado, lo que afectaba la claridad y mantenibilidad del código. Para solucionar esto, se corrigió el problema ubicando la clase en el namespace correspondiente, NegocioPDF.Tests, y se configuraron los datos de prueba y las dependencias con un contexto en memoria. Esta mejora asegura que las pruebas sean más modulares y sigan las mejores prácticas para mantener una estructura clara y bien organizada en el proyecto.

   ![image](https://github.com/user-attachments/assets/f7fa2ab4-698b-41a7-82f4-86b7a41d0ff3)

   ![image](https://github.com/user-attachments/assets/2c96f4f1-0830-47bc-aa13-ae169bf12b9c)

El análisis estático detectó un problema de anulabilidad en el método ObtenerUsuarioPorId dentro del repositorio UsuarioRepository, ya que el tipo de retorno no manejaba adecuadamente los valores nulos. Para solucionarlo, se corrigió el método añadiendo una excepción InvalidOperationException en caso de que no se encuentre el usuario correspondiente. Esta mejora garantiza que el método maneje correctamente los casos sin coincidencias, lo que mejora la confiabilidad y claridad del código.

   ![image](https://github.com/user-attachments/assets/fef6f6ba-aaae-4afd-95e8-876624a79214)

   ![image](https://github.com/user-attachments/assets/711acbb0-9da8-4b7c-8de2-4e28b0dd2799)

El análisis estático señala un problema de anulabilidad en el método ObtenerUsuarioPorId dentro del repositorio UsuarioRepository, indicando que el tipo de retorno no maneja adecuadamente los valores nulos. Para corregirlo, se modificó el método añadiendo una excepción InvalidOperationException si no se encuentra el usuario correspondiente. Esta solución asegura que el método maneje correctamente los casos sin coincidencias, mejorando la confiabilidad y claridad del código.

   ![image](https://github.com/user-attachments/assets/1cf8d2d9-1c9b-405c-82b0-5f80516672a6)

   ![image](https://github.com/user-attachments/assets/c0a3ae36-8ba5-4898-977e-5cd0492d4656)

El análisis estático destaca un problema en el método ActualizarSuscripcion, donde se utiliza System.Exception, lo cual no es recomendable porque dificulta la identificación precisa de los errores. La corrección realizada consistió en reemplazar System.Exception con InvalidOperationException, una excepción más específica. Esto mejora la claridad y mantenibilidad del código, proporcionando un mensaje más claro cuando no se encuentra una suscripción para actualizar. Esta práctica sigue las mejores recomendaciones para el manejo de errores en aplicaciones robustas.

   ![image](https://github.com/user-attachments/assets/34bee983-d0f7-4d94-bf04-7e11c6381bf7)

   ![image](https://github.com/user-attachments/assets/c13373f5-984e-4ccf-94d7-b315f563b930)

El análisis estático señala un problema de consistencia debido a la ausencia de un namespace definido, lo que afecta la mantenibilidad del código. La corrección realizada consistió en incluir el archivo dentro del namespace NegocioPDF.Tests, alineando la clase con las mejores prácticas de organización. Esto mejora la claridad del proyecto al agrupar correctamente las clases de prueba según su módulo correspondiente.

   Pruebas de integración utilizando Mocks o Fake Classes

   ![image](https://github.com/user-attachments/assets/24797d8f-271e-4ba6-8622-5e0fceb3e15b)

   El reporte destaca una cobertura del 89% en líneas de código y del 88% en ramas, lo que indica un alto nivel de pruebas realizadas sobre el código base. 
   Esto incluye detalles de los módulos cubiertos, con porcentajes individuales para líneas y ramas, mostrando áreas bien probadas y algunas con margen de 
   mejora.

- Reporte de Pruebas guiadas por el comportamiento (BDD Given When Then)

   Pruebas de aceptación basadas en Desarrollo Guiado por el Comportamiento una por cada caso de uso o historia de usuario.

   ![image](https://github.com/user-attachments/assets/ec46ca1d-953c-4d5d-89b1-f7eff1b0f323)

   ![image](https://github.com/user-attachments/assets/2177240a-d004-41c2-9374-901d2631e057)

   ![image](https://github.com/user-attachments/assets/d29d5d8e-f105-4b10-93a6-9c02f12d8d83)

  El reporte muestra pruebas guiadas por el comportamiento (BDD) utilizando el formato Given-When-Then, específicamente para el caso de uso de inicio de 
  sesión. Cada prueba representa un escenario distinto basado en una historia de usuario: un inicio de sesión exitoso, un intento fallido por credenciales 
  inválidas y otro fallido por un correo vacío. Esto asegura que las funcionalidades clave se validen según las expectativas del usuario y los criterios de 
  aceptación.
  
- Reporte de Pruebas mutantes

   Pruebas mutantes para ver todas las posibles pruebas.

   Informe - Pruebas con mutaciones

   ![image](https://github.com/user-attachments/assets/15b85b30-9bdb-4c71-bed7-06bfc1d2348e)

   ![image](https://github.com/user-attachments/assets/c59b2d6a-a35a-42f1-b9d3-df304c4cccb7)

   ![image](https://github.com/user-attachments/assets/8793aaf1-384d-4a74-9d7e-195cbec528a7)

   El análisis indica qué partes del código están bien cubiertas por pruebas y cuáles necesitan mayor atención, ayudando a fortalecer el conjunto de pruebas. 
  
   Reporte de Stryker.NET - Análisis de Pruebas Mutantes

   Barra Superior Colorida
- Verde (82): Mutantes eliminados (¡Bueno!)
- Rojo (27): Mutantes sobrevivieron (¡Malo!)
- Naranja (25)**: Sin cobertura

   Columnas Principales
 1. Mutation Score
- Of total: 61.19% - Porcentaje general de mutantes eliminados
- Of covered: 75.23% - Porcentaje de mutantes eliminados en código cubierto por pruebas

 2. Estado de los Mutantes
- Killed (82): Mutantes que tus pruebas detectaron y fallaron (¡Bueno!)
- Survived (27): Mutantes que tus pruebas no detectaron (¡Malo!)
- No coverage (25): Código sin pruebas unitarias
- Ignored (105): Mutantes que se ignoraron

 Análisis por Carpetas
- Data/PDFSolutionsContext.cs: 34.38% de efectividad
- Migrations: 0% (Normal, no se suelen probar)
- Models: N/A
- Repositories: 80.68% (Bastante bueno)

Reporte de Pruebas de interfaz de usuario

Pruebas (al menos 3 completas) incluir el video generado de forma automatizada por el framework

[video_1.webm](https://github.com/user-attachments/assets/40ad6cfb-b6f2-427b-8a7c-fc5d852765ae)

Se ingresa el correo y contraseña , iniciamos sesion y se muestra la interfaz de bienvenida 

[video_2.webm](https://github.com/user-attachments/assets/4acbbbc6-ebb9-4a6a-92dd-6850fdd04439)

Se aprecia como se ingresan los datos de nombre de usuario , correo y contraseña , le damos a registrarse y se nos muestra un mensaje de confirmación y se nos mostrara un boton para regresar al login 

[video_3.webm](https://github.com/user-attachments/assets/33e2e998-1436-4717-a177-c1f68fc484d1)

Si se ingresa un correo o contraseña incorrectos se nos mostrara un mensaje de error 

[video_4.webm](https://github.com/user-attachments/assets/f494f317-d15e-4ec9-8e7c-7970aef15b8b)

Iniciamos sesion , se nos mostrara la interfaz principal de bienvenida con su tupo de suscripcion cantidad de operaciones realizadas y podremos tener la suscribcion premiun"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-ayma_tapia_poma,proyecto,si784-2024-ii-u2-ayma_tapia_poma,True,2073,False,11,True,False,False,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17291244)
# proyecto-formatos-02

<div align=""center"">
## Desarrollo de un Sistema de Gestión de Tareas y Notificaciones Personalizadas para la Mejora de la Productividad

**INTEGRANTES**  
**Erick Ayma**  
**Fabiola Poma**  
**Dylan Tapia**

---

## Descripción del Proyecto


---

## 💻 Tecnologías Utilizadas
![CSS3](https://img.shields.io/badge/css3-%231572B6.svg?style=for-the-badge&logo=css3&logoColor=white)  
![HTML5](https://img.shields.io/badge/html5-%23E34F26.svg?style=for-the-badge&logo=html5&logoColor=white)  
![MySQL](https://img.shields.io/badge/mysql-4479A1.svg?style=for-the-badge&logo=mysql&logoColor=white)  
![PHP](https://img.shields.io/badge/php-%23777BB4.svg?style=for-the-badge&logo=php&logoColor=white)  
![JavaScript](https://img.shields.io/badge/javascript-%23323330.svg?style=for-the-badge&logo=javascript&logoColor=%23F7DF1E)  

---

## Funcionalidades Principales.

## Package :https://packagist.org/packages/thegoat/project?query=thegoat%2Fproject

## Diagrama de casos de uso
![Diagrama de Arquitectura](diagramas/casosdeuso.jpg)

## Diagrama de Arquitectura
![Diagrama de Arquitectura](diagramas/arquitectura.jpg)

## Diagrama de clases
![Diagrama de Arquitectura](diagramas/clases.jpg)

## Diagrama de paquetes
![Diagrama de Arquitectura](diagramas/paquetes.jpg)

## Diagrama de despliegue
![Diagrama de Arquitectura](diagramas/despliegue.jpg)

## Diagrama de Secuencia
![Diagrama de Arquitectura](diagramas/a.jpg)
![Diagrama de Arquitectura](diagramas/b.jpg)
![Diagrama de Arquitectura](diagramas/c.jpg)
![Diagrama de Arquitectura](diagramas/d.jpg)
![Diagrama de Arquitectura](diagramas/e.jpg)
![Diagrama de Arquitectura](diagramas/f.jpg)
![Diagrama de Arquitectura](diagramas/g.jpg)
![Diagrama de Arquitectura](diagramas/h.jpg)
![Diagrama de Arquitectura](diagramas/i.jpg)
</div>"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-qa_pruebas_moviles_rivera_lupaca,proyecto,si8811a-2024-ii-u2-qa_pruebas_moviles_rivera_lupaca,True,4091,True,15,True,True,True,"# Proyecto Juegos Florales - Pruebas Móviles

[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17295804)
## Repositorio de pruebas
https://github.com/JhonnyARM/Topicos_SonarQube

## **Descripción General**
Este proyecto tiene como objetivo garantizar la calidad del aplicativo móvil ""Juegos Florales"", desarrollado para la Universidad Privada de Tacna. Las pruebas móviles realizadas abarcan funcionalidad, compatibilidad y rendimiento en dispositivos Android, utilizando herramientas como **Appium**, **Selenium**, **BrowserStack**, y generando reportes detallados con **Allure**.

El enfoque principal se centra en validar las funcionalidades críticas del sistema, automatizando las pruebas y optimizando los tiempos y recursos utilizados, alineándose con los estándares de calidad requeridos por la universidad.

---

## **Objetivos**
- **Validar** la funcionalidad y compatibilidad del aplicativo en múltiples dispositivos Android.
- **Automatizar** las pruebas móviles mediante herramientas modernas, reduciendo tiempos y errores.
- **Generar reportes detallados** con métricas clave y visualizaciones para análisis posterior.
- **Garantizar** la experiencia de usuario óptima en términos de usabilidad y rendimiento.

---

## **Requerimientos Funcionales**
| ID   | Descripción                                      | Prioridad |
|------|--------------------------------------------------|-----------|
| RF01 | Validación de inicio de sesión segura           | Alta      |
| RF02 | Pruebas automatizadas para la interacción       | Media     |
| RF03 | Validación de campos de texto                   | Alta      |
| RF04 | Generación de reportes detallados de ejecución  | Alta      |

---

## **Requerimientos No Funcionales**
| ID    | Descripción                                         | Prioridad |
|-------|-----------------------------------------------------|-----------|
| RNF01 | Seguridad en los datos utilizados en las pruebas    | Alta      |
| RNF02 | Ejecución de pruebas en menos de 2 minutos          | Alta      |
| RNF03 | Disponibilidad continua del sistema (99%)           | Alta      |
| RNF04 | Interoperabilidad con múltiples dispositivos Android | Alta      |

---

## **Herramientas Utilizadas**
1. **Appium**: Automatización de pruebas móviles.
2. **Selenium**: Automatización de pruebas web y móviles.
3. **BrowserStack**: Plataforma para pruebas en múltiples dispositivos y versiones.
4. **Allure**: Generación de reportes visuales detallados.

---

## **Arquitectura del Proyecto**
### **Modelo 4+1**
- **Vista Lógica**: Organización de subsistemas y paquetes.
- **Vista de Implementación**: Despliegue de herramientas para pruebas.
- **Vista de Procesos**: Validación de funcionalidades críticas.
- **Vista Física**: Uso de dispositivos físicos y emuladores.
- **Vista de Casos de Uso**: Interacciones entre usuarios y el sistema.

---

## **Diagramas del Proyecto**

### **Diagrama de Casos de Uso**
![image](https://github.com/user-attachments/assets/a3815c3a-c07f-4c0a-ab73-5166c14e5b75)

![image](https://github.com/user-attachments/assets/090c209e-c633-4e0c-a19e-c833245a044b)


### **Diagrama de Clases**
![image](https://github.com/user-attachments/assets/4cc73500-ed14-403e-8c23-313b6bda798a)

### **Diagrama de Paquetes**
![image](https://github.com/user-attachments/assets/080755f6-bfaa-4630-8baa-b1fa8590ef92)

### **Diagrama de Secuencia Automatizada**
![image](https://github.com/user-attachments/assets/10f2fc5a-9038-4eb1-8f0f-1452729ae13a)

### **Arquietctura**
![image](https://github.com/user-attachments/assets/dc67c05e-3718-45e5-89c5-82aa49bb12e9)

---

## **Estructura del Proyecto**
```plaintext
proyecto/
│
├── tests/
│   ├── test_login.py
│   ├── test_buttons.py
│   ├── test_fields.py
│   └── test_reports.py
│
├── utils/
│   ├── driver_setup.py
│   ├── des_capabilities.py
│   └── report_generator.py
│
├── requirements.txt
├── README.md
├── setup.cfg
└── setup.py"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-chambilla_llantay,proyecto,si784-2024-ii-u2-chambilla_llantay,True,5589,True,28,True,False,True,"# Sistema FanPage

![alt text](media/logo-upt.png)

## UNIVERSIDAD PRIVADA DE TACNA
**FACULTAD DE INGENIERIA**  
*Escuela Profesional de Ingeniería de Sistemas*

### Proyecto Reportes FANPAGE
- **Curso:** Calidad y pruebas de software
- **Docente:** Mg. Patrick Cuadros Quiroga

### Integrantes
- Chambilla Zuñiga, Josue Abraham E. (2020067575)
- Llantay Machaca, Marjorie Garce (2020068951)

**Tacna – Perú**  
**2024**

### Documento Informe de Calidad
**Versión 1.0**

### Control de Versiones

| Versión | Hecha por | Revisada por | Aprobada por | Fecha | Motivo |
|---------|-----------|--------------|--------------|-------|---------|
| 1.0 | JACZ - MGLLM | JACZ - MGLLM | JACZ - MGLLM | 27/09/2024 | Versión Original |

## Índice
1. [Sistema FanPage](#sistema-fanpage)
2. [Universidad Privada de Tacna](#universidad-privada-de-tacna)
    - [Proyecto FANPAGE](#proyecto-fanpage)
    - [Integrantes](#integrantes)
    - [Documento Informe de Calidad](#documento-informe-de-calidad)
    - [Control de Versiones](#control-de-versiones)
3. [Título](#titulo)
4. [Autores](#autores)
5. [Planteamiento del problema](#planteamiento-del-problema)
    - [Problema](#problema)
    - [Justificación](#justificacion)
    - [Alcance](#alcance)
6. [Diagramas](#diagramas)
    - [Diagrama de casos de uso](#diagrama-de-casos-de-uso)
    - [Diagrama de Secuencia](#diagrama-de-secuencia)
        - [Usuario](#usuario)
        - [Administrador](#administrador)
    - [Diagrama de Clases](#diagrama-de-clases)
    - [Diagrama de Componentes](#diagrama-de-componentes)
    - [Diagrama de Despliegue](#diagrama-de-despliegue)
7. [Cobertura de Pruebas](#cobertura-de-pruebas)
8. [Referencias](#referencias)
    - [Frameworks de Testing](#frameworks-de-testing)

## Titulo
FANPAGE

## Autores
- Chambilla Zuñiga Josue Abraham E.
- Llantay Machaca Marjorie Garce

## Planteamiento del problema

### Problema
En la actualidad, muchas marcas y comunidades carecen de plataformas especializadas donde puedan vender productos exclusivos a sus seguidores de manera eficiente. Las plataformas de comercio generalistas no siempre permiten una personalización adecuada o una interacción directa con la comunidad. Esto dificulta la gestión de inventarios, la promoción de productos exclusivos y la fidelización de clientes.

### Justificación
FANPAGE busca cubrir esta necesidad creando una plataforma web personalizada para la venta de productos específicos, permitiendo a las marcas ofrecer una experiencia única a sus seguidores. La plataforma proporcionará herramientas para comprar lo que desees y poder realizar un feedback de los productos.

### Alcance
El proyecto FANPAGE abarcará la creación de una plataforma web que permita a los usuarios registrar sus cuentas, explorar productos, añadir artículos a su carrito de compras y realizar pagos de forma segura. Desde el lado administrativo, se incluirán funcionalidades para gestionar productos y órdenes de compra. El sistema también ofrecerá integración con diferentes métodos de pago y garantizará la protección de los datos de los usuarios.

## Diagramas

### Diagrama de casos de uso
![Casos de Uso Usuario](media/Casos_Uso_Usuario.png)
![Casos de Uso Administrador](media/Casos_Uso_Administrador.png)

### Diagrama de Secuencia
#### Usuario
![Diagrama Secuencia Shop Usuario](media/Diagrama_Secuencia_Shop_Usuario.png)
![Diagrama Secuencia Buscar Usuario](media/Diagrama_Secuencia_Buscar_Usuario.png)
![Diagrama Secuencia Contacto Usuario](media/Diagrama_Secuencia_Contacto_Usuario.png)
![Diagrama Secuencia Estado Producto Usuario](media/Diagrama_Secuencia_EstadoProducto_Usuario.png)

#### Administrador
![Diagrama Secuencia Inicio Admin](media/Diagrama_Secuencia_Inicio_Admin.png)
![Diagrama Secuencia Productos Admin](media/Diagrama_Secuencia_Productos_Admin.png)
![Diagrama Secuencia Ordenes Admin](media/Diagrama_Secuencia_Ordenes_Admin.png)
![Diagrama Secuencia Usuarios Admin](media/Diagrama_Secuencia_Usuarios_Admin.png)
![Diagrama Secuencia Mensajes Admin](media/Diagrama_Secuencia_Mensajes_Admin.png)

### Diagrama de Clases
![Diagrama de Clases](media/Diagrama_Clases.png)

### Diagrama de Componentes
![Diagrama de Componentes](media/Diagrama_Componentes.png)

### Diagrama de Despliegue
![Diagrama de Despliegue](media/Diagrama_Despligu_Arquitectura.png)

## Cobertura de Pruebas
### Antes SonarCloud
![alt text](media/Comparativa_Sonar.png)
### Despues SonarCloud
![alt text](media/Coberrtura_SonarCloud.png)

### Comparativa Snyk
![alt text](media/Comparativa_Snyk.png)

### Antes Semgrep
![alt text](media/Semgrep_Antes.png)

### Despues Semgrep
![alt text](media/Semgrep_Despues.png)

## Referencias

- The PHP Group. (2024). PHP Documentation. PHP. https://www.php.net/docs.php
- The PHP Group. (2022). PHP 8.2.0 Release Notes. PHP. https://www.php.net/releases/8.2/

### Frameworks de Testing
- Bergmann, S. (2024). PHPUnit Manual. PHPUnit. https://phpunit.de/documentation.html
- Behat. (2024). Behat Documentation. Behat. https://docs.behat.org/
- Kudryashov, K. (2024). Behat/Behat: BDD framework for PHP. GitHub. https://github.com/Behat/Behat
- Behat. (2024). MinkExtension - Behat Documentation. GitHub. https://github.com/Behat/MinkExtension
- Selenium. (2024). Selenium Documentation. Selenium HQ. https://www.selenium.dev/documentation/
- PHP WebDriver. (2024). PHP WebDriver Documentation. GitHub. https://github.com/php-webdriver/php-webdriver
- Dmore. (2024). Chrome Mink Driver. GitHub. https://github.com/dmore/chrome-mink-driver
- Emuse. (2024). BehatHTMLFormatter. GitHub. https://github.com/emuse/BehatHTMLFormatter"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-desarrollo_api_back,proyecto,si8811a-2024-ii-u2-desarrollo_api_back,True,3674,True,16,True,True,False,"# Proyecto: Infraestructura Escalable para Aplicaciones Multi-Componente

[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17375597)
](https://classroom.github.com/a/vK6WBQ1t)

Este proyecto utiliza **Terraform** para desplegar una infraestructura escalable en **AWS**, soportando aplicaciones móviles (**Flutter**), aplicaciones web (**React**) y una API backend. Además, implementa monitoreo continuo con **Grafana Cloud**.

---

## 📌 Contexto del Proyecto

El objetivo es crear y desplegar una infraestructura que automatice la configuración de recursos en la nube para aplicaciones modernas, garantizando seguridad, eficiencia y monitoreo en tiempo real.

Este trabajo se desarrolla dentro del marco de los Juegos Florales de la **UPT**, destacando la innovación en soluciones tecnológicas.

---

## 🎯 Objetivo Principal

Desplegar una infraestructura con **Terraform** para automatizar la creación y configuración de los siguientes componentes:

- **Aplicación Móvil (Flutter)**: Alojada en AWS S3.
- **Aplicación Web (React)**: Alojada en AWS S3.
- **Backend API**: Desplegada en instancias EC2 con Docker.
- **Base de Datos**: MongoDB Atlas.
- **Monitoreo**: Grafana Cloud.

---

## 🗂️ Estructura del Proyecto

```mermaid
graph TD
    A[project] --> B[main.tf]
    A --> C[variables.tf]
    A --> D[outputs.tf]
    A --> E[modules]
    E --> F[mobile_app]
    E --> G[web_app]
    E --> H[docker_host]
    E --> I[mongodb]
    E --> J[grafana]
```

---

## 🚀 Tecnologías Usadas

- **Terraform**: Gestión de infraestructura como código.
- **AWS**: Despliegue y administración de recursos.
- **MongoDB Atlas**: Base de datos en la nube.
- **Grafana Cloud**: Monitoreo y visualización de métricas.
- **Docker**: Contenedores ligeros para el backend.

---

## 🔑 Variables Principales

### Globales

- `environment`: Entorno de despliegue.
- `ec2_key_name`: Nombre de la clave EC2 para acceso SSH.

### Aplicación Móvil (Flutter)

- `flutter_app_bucket_name`: Nombre del bucket S3.

### Aplicación Web (React)

- `react_app_bucket_name`: Nombre del bucket S3.

### Backend API

- `backend_images`: Lista de imágenes Docker para el backend.

### MongoDB Atlas

- `mongodb_atlas_org_id`: ID de la organización.
- `mongodb_project_name`: Nombre del proyecto.
- `mongodb_cluster_name`: Nombre del cluster.
- `mongodb_region`: Región del cluster.

### Grafana

- `grafana_cloud_api_key`: API Key para Grafana Cloud.

---

## 🛠️ Uso

1. Instala y configura Terraform.
2. Clona este repositorio.
3. Navega al directorio del proyecto.
4. Inicializa Terraform:

   ```bash
   terraform init
   ```

5. Revisa el plan de ejecución:

   ```bash
   terraform plan
   ```

6. Aplica la configuración:

   ```bash
   terraform apply
   ```

---

## 🔎 Notas Importantes

- Verifica los permisos en tu cuenta de AWS.
- Ajusta las variables en `variables.tf` según tus necesidades.
- Considera usar un backend remoto para el estado de Terraform.

---

## 🖼️ Diagrama

![Diagrama](https://github.com/user-attachments/assets/e3c8a7ba-7751-4262-bae1-f04646c828ba)

---

## 🤝 Contribuciones

Las contribuciones son bienvenidas. Si deseas colaborar, abre un **issue** o un **pull request** con tus sugerencias.

---

## 📄 Licencia

Este proyecto está licenciado bajo la [MIT License](https://choosealicense.com/licenses/mit/).

---

💬 **Contacto:**  
📧 [aa2021071075@virtual.upt.pe](mailto:aa2021071075@virtual.upt.pe)  
🌍 [Repositorio en GitHub](https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-desarrollo-api-back)"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-api-y-funciones-anahua,proyecto,si8811a-2024-ii-u2-api-y-funciones-anahua,True,12018,False,15,True,True,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17379747)
![GitHub release (latest by date)](https://img.shields.io/github/v/release/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-api-y-funciones-anahua)
![Docker Image Version](https://img.shields.io/docker/v/maynerac/api-lugares?label=docker&logo=docker)

## API de Lugares

Este repositorio incluye el desarrollo y la documentación de una API diseñada para gestionar lugares, direcciones y categorías. La API utiliza FastAPI como framework y CouchDB para la base de datos. El proyecto permite realizar operaciones CRUD (crear, leer, actualizar, eliminar) sobre estos recursos mediante solicitudes HTTP, y está preparado para ser desplegado con Docker.

## Índice

- [API de Lugares](#api-de-lugares)
- [Índice](#índice)
- [Requisitos](#requisitos)
- [Estructura del Proyecto](#estructura-del-proyecto)
- [Desplegando con Docker Compose](#desplegando-con-docker-compose)
- [Instalación Local](#instalación-local)
- [Usando docker run utilizando la IP del servicio de CouchDB](#usando-docker-run-utilizando-la-ip-del-servicio-de-couchdb)
- [Usando docker run con una red personalizada](#usando-docker-run-con-una-red-personalizada)
- [Eliminar los contenedores creados](#eliminar-los-contenedores-creados)
- [Endpoints](#endpoints)
- [Diagramas](#diagramas)
- [Pruebas](#pruebas)
- [Comandos](#comandos)
- [Video](#video)

## Requisitos

- **Python 3.7+**
- **CouchDB**: Se requiere tener CouchDB corriendo para poder almacenar y recuperar la información de los lugares, direcciones y categorías.
- **FastAPI**: Framework web para construir APIs rápidas y eficientes.
- **Uvicorn**: Servidor ASGI para correr la aplicación de FastAPI.

## Estructura del Proyecto

```plaintext
api_lugares/
│
├── app/
│   ├── __init__.py
│   ├── main.py
│   ├── crud.py
│   ├── models.py
│   ├── schemas.py
│   └── config.py
│
├── tests/
│   ├── __init__.py
│   ├── test_schemas.py
│   └── test_config.py
│
├── docker-compose.yml
├── Dockerfile
└── requirements.txt
└── dev-requirements.txt

```

## Desplegando con Docker Compose

Para levantar los servicios definidos en el archivo docker-compose.yml, utilizamos el comando:

```bash
docker-compose up
```

Otra opcion es ejecutar los contenedores en segundo plano, evitando que los logs se muestren en la consola con la opción -d (detached mode):

```bash
docker-compose up -d
```

Puedes consultar la imagen del proyecto en Docker Hub:

🐳 [Ver imagen en Docker Hub](https://hub.docker.com/repository/docker/maynerac/api-lugares/general)

📦 [Ver imagen en GitHub Container Registry](https://github.com/users/MAYnerAC/packages/container/package/api-lugares)

## Instalación Local

1. Clonar el repositorio:

   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-api-y-funciones-anahua.git
   ```

2. Navegar al directorio del proyecto:

   ```bash
   cd proyecto-si8811a-2024-ii-u2-api-y-funciones-anahua/api_lugares
   ```

3. Crear un entorno virtual e instalar las dependencias:

   ```bash
   python -m venv env

   .\env\Scripts\activate

   pip install -r requirements.txt
   ```

4. Configurar las variables de entorno:

   El archivo `config.py` obtiene la URL de CouchDB de las variables de entorno. Debe seguir el formato:

   ```bash
   export COUCHDB_URL=http://usuario:contrasena@localhost:5984
   ```

5. Iniciar el servidor:

   ```bash
   uvicorn main:app --reload
   ```

## Usando docker run utilizando la IP del servicio de CouchDB

1. Iniciamos el contenedor de CouchDB

```bash
docker run -d --name couchdb -p 5984:5984 -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=admin couchdb:latest
```

2. Iniciamos el contenedor de la API Lugares, asegurarnos que ""172.17.0.2"" sea la IP correcta, podemos usar `docker inspect couchdb` para verificarlo

```bash
docker run -d --name fastapi -p 8000:8000 -e COUCHDB_URL=http://admin:admin@172.17.0.2:5984 maynerac/api-lugares:latest
```

## Usando docker run con una red personalizada

1. Creamos la red personalizada antes de crear los servicios por separado

```bash
docker network create apidb_network
```

2. Creamos el servicio `couchdb`, podemos cambiar las variables de entorno `COUCHDB_USER` y `COUCHDB_PASSWORD`

```bash
docker run -d --name couchdb --network apidb_network -p 5984:5984 -v couchdb_data:/opt/couchdb/data -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=admin couchdb:latest
```

3. Creamos el servicio `fastapi`, el formato de `COUCHDB_URL` es `http://usuario:contrasena@localhost:5984`

```bash
docker run -d --name fastapi --network apidb_network -p 8000:8000 -e COUCHDB_URL=http://admin:admin@couchdb:5984 maynerac/api-lugares:latest
```

## Eliminar los contenedores creados

1. Listamos los contenedrores activos y detenidos

```bash
docker ps -a
```

2. Si estan en ejecucion, detenemos los contenedores

```bash
docker stop couchdb
docker stop fastapi
```

3. Eliminamos los contenedores

```bash
docker rm couchdb
docker rm fastapi
```

4. Verificamos su correcta eliminacion

```bash
docker ps -a
```

5. Revisamos si tenemos un volumen creado

```bash
docker volume ls
```

6. Eliminamos los volumnes en caso lo necesitemos (Opcional)

```bash
docker volume rm couchdb_data
```

7. Eliminamos la red personalizada `apidb_network` (Opcional)

```bash
docker network rm apidb_network
```

8. Verificamos que se haya eliminado `apidb_network`

```bash
docker network ls
```

## Endpoints

- **Lugares**

  - `GET /lugares/`: Obtener todos los lugares.
  - `POST /lugares/`: Crear un nuevo lugar.
  - `GET /lugares/{id_lugar}`: Obtener un lugar por su ID.
  - `PUT /lugares/{id_lugar}`: Actualizar un lugar por su ID.
  - `DELETE /lugares/{id_lugar}`: Desactivar un lugar por su ID.

- **Direcciones**

  - `GET /direcciones/`: Obtener todas las direcciones.
  - `POST /direcciones/`: Crear una nueva dirección.
  - `GET /direcciones/{id_direccion}`: Obtener una dirección por su ID.
  - `PUT /direcciones/{id_direccion}`: Actualizar una dirección por su ID.
  - `DELETE /direcciones/{id_direccion}`: Desactivar una dirección por su ID.

- **Categorías**

  - `GET /categorias/`: Obtener todas las categorías.
  - `POST /categorias/`: Crear una nueva categoría.
  - `GET /categorias/{id_categoria}`: Obtener una categoría por su ID.
  - `PUT /categorias/{id_categoria}`: Actualizar una categoría por su ID.
  - `DELETE /categorias/{id_categoria}`: Desactivar una categoría por su ID.

- **Documentación**

  - `GET /docs`: [Documentación Swagger](http://localhost:8000/docs).
  - `GET /redoc`: [Documentación ReDoc](http://localhost:8000/redoc).

- **CouchDB Dashboard**
  - `GET http://localhost:5984/_utils`: [Acceso a la interfaz de CouchDB](http://localhost:5984/_utils).

## Diagramas

- Diagrama de Clases

```mermaid

classDiagram
    class Lugar {
        +int id_lugar
        +string nombre_lugar
        +int direccion_id
        +int capacidad
        +string descripcion
        +float latitud
        +float longitud
        +int id_categoria
    }

    class Direccion {
        +int direccion_id
        +string calle
        +string numero
        +string ciudad
        +string codigo_postal
        +string pais
    }

    class Categoria {
        +int id_categoria
        +string nombre_categoria
    }

    Lugar --> Direccion : tiene
    Lugar --> Categoria : pertenece

```

Este diagrama de clases muestra la relación entre las entidades principales de la API. Cada **Lugar** está asociado con una **Dirección** y una **Categoría**.

- Diagrama de casos de uso

  ![alt text](assets/image-4.png)

- Diagrama del funcionamiento de la API Lugares

```mermaid

graph TD
    subgraph Elastika[Servidor Elastika]
        subgraph Docker[Contenedor - Docker]
            API[API de Lugares]
        end

        subgraph ElasticSearchServer[Contenedor - Docker]
            CouchDB[(CouchDB)]
        end
    end

    Cliente[Cliente - Servicio Web/Móvil]

    API --> |NoSQL| CouchDB
    Cliente --> |Métodos GET, POST, PUT, DELETE| API
    API --> |Respuestas HTTP| Cliente

    style Cliente fill:#b3d9ff,stroke:#333,stroke-width:2px
    style ElasticSearchServer fill:#ffb3b3,stroke:#333,stroke-width:2px
    style Docker fill:#d1e0e0,stroke:#333,stroke-width:2px
    style Elastika fill:#f7d794,stroke:#333,stroke-width:2px
```

## Pruebas

Las pruebas unitarias se ejecutaron correctamente utilizando `pytest`, confirmando que todos los casos de prueba para la API de lugares pasaron sin problemas.

- Se recolectaron 9 items de prueba, incluyendo pruebas para la configuración, el CRUD de lugares, direcciones y categorías.

![alt text](assets/image-6.png)

Puedes acceder a la documentación generada por Swagger en la ruta `/docs`. Esta interfaz permite probar los diferentes endpoints directamente desde el navegador. Para acceder, abre `http://localhost:8000/docs`.

![alt text](assets/image.png)

![alt text](assets/image-5.png)

![alt text](assets/image-1.png)

![alt text](assets/image-2.png)

![alt text](assets/image-3.png)

## Comandos

| **Comando**                     | **Descripción**                                                                   |
| ------------------------------- | --------------------------------------------------------------------------------- |
| `python -m venv env`            | Crea un entorno virtual en Python.                                                |
| `.\env\Scripts\activate`        | Activa el entorno virtual en Windows.                                             |
| `deactivate`                    | Desactiva el entorno virtual.                                                     |
| `pip install fastapi uvicorn`   | Instala FastAPI y Uvicorn en el entorno actual.                                   |
| `pip install couchdb`           | Instala la librería de Python para interactuar con CouchDB.                       |
| `pip freeze > requirements.txt` | Guarda una lista de las dependencias instaladas en un archivo `requirements.txt`. |
| `pytest -v`                     | Ejecuta pruebas unitarias con un nivel detallado de salida (verbose).             |
| `docker ps`                     | Muestra una lista de los contenedores Docker que están corriendo.                 |
| `docker ps -a`                  | Muestra una lista de todos los contenedores Docker, incluyendo los detenidos.     |
| `docker-compose up`             | Levanta los servicios definidos en el archivo docker-compose.yml.                 |
| `docker-compose up -d`          | Ejecuta los servicios de Docker Compose en segundo plano (modo detached).         |
| `uvicorn main:app --reload`     | Ejecuta el servidor FastAPI con recarga automática en caso de cambios.            |

## Video

Explicacion de diferentes aspectos sobre la API de Lugares:

📂 [Ver video de la API de Lugares (Release v0.1.0) - YouTube](https://drive.google.com/file/d/13M5tyNbeWF1lK9fwnD9u-SMbgLkQa6nI/view?usp=sharing)

🎥 [Ver video de la API de Lugares (Release v0.1.0) - Google Drive](https://www.youtube.com/watch?v=_J36U9vYtoo)



## Codigo a Componentes

```mermaid

classDiagram
    class BaseCollectionSchema {
        +int estado
    }

    class LugarModel {
        +str name
        +str description
        +str direccion
        +int capacidad
        +float latitud
        +float longitud
        +str categoria
        +str codigo_postal
        +str ciudad
        +str pais
    }

    class PizzaModel {
        +str name
        +str description
        +str ingredients
        +str size
        +float price
        +bool is_vegetarian
    }

    class DrinkModel {
        +str name
        +str description
        +str type
        +int volume_ml
        +float price
        +bool is_alcoholic
    }

    BaseCollectionSchema <|-- LugarModel
    BaseCollectionSchema <|-- PizzaModel
    BaseCollectionSchema <|-- DrinkModel

```


![alt text](image.png)



![alt text](image-1.png)"
UPT-FAING-EPIS/si784_2024-ii-proyecto_si784_2024_ii_u3-proyecto-formatos-02,si784_2024,ii-proyecto_si784_2024_ii_u3-proyecto-formatos-02,True,22,True,0,False,False,False,# proyecto-formatos-02
UPT-FAING-EPIS/proyecto-si784-2024-ii-u3-reportes_chambilla_llantay,proyecto,si784-2024-ii-u3-reportes_chambilla_llantay,True,5722,True,28,True,False,True,"# Sistema FanPage

![alt text](media/logo-upt.png)

## UNIVERSIDAD PRIVADA DE TACNA
**FACULTAD DE INGENIERIA**  
*Escuela Profesional de Ingeniería de Sistemas*

### Proyecto Reportes FANPAGE
- **Curso:** Calidad y pruebas de software
- **Docente:** Mg. Patrick Cuadros Quiroga

### Integrantes
- Chambilla Zuñiga, Josue Abraham E. (2020067575)
- Llantay Machaca, Marjorie Garce (2020068951)

**Tacna – Perú**  
**2024**

### Documento Informe de Calidad
**Versión 1.0**

Video: https://drive.google.com/file/d/1BfsJbHHvFcOMGCkxCgBDoT-UH_8OcSNM/view?usp=sharing

### Control de Versiones

| Versión | Hecha por | Revisada por | Aprobada por | Fecha | Motivo |
|---------|-----------|--------------|--------------|-------|---------|
| 1.0 | JACZ - MGLLM | JACZ - MGLLM | JACZ - MGLLM | 27/09/2024 | Versión Original |

## Índice
1. [Sistema FanPage](#sistema-fanpage)
2. [Universidad Privada de Tacna](#universidad-privada-de-tacna)
    - [Proyecto FANPAGE](#proyecto-fanpage)
    - [Integrantes](#integrantes)
    - [Documento Informe de Calidad](#documento-informe-de-calidad)
    - [Control de Versiones](#control-de-versiones)
3. [Título](#titulo)
4. [Autores](#autores)
5. [Planteamiento del problema](#planteamiento-del-problema)
    - [Problema](#problema)
    - [Justificación](#justificacion)
    - [Alcance](#alcance)
6. [Diagramas](#diagramas)
    - [Diagrama de casos de uso](#diagrama-de-casos-de-uso)
    - [Diagrama de Secuencia](#diagrama-de-secuencia)
        - [Usuario](#usuario)
        - [Administrador](#administrador)
    - [Diagrama de Clases](#diagrama-de-clases)
    - [Diagrama de Componentes](#diagrama-de-componentes)
    - [Diagrama de Despliegue](#diagrama-de-despliegue)
7. [Cobertura de Pruebas](#cobertura-de-pruebas)
8. [Referencias](#referencias)
    - [Frameworks de Testing](#frameworks-de-testing)

## Titulo
FANPAGE

## Autores
- Chambilla Zuñiga Josue Abraham E.
- Llantay Machaca Marjorie Garce

## Planteamiento del problema

### Problema
En la actualidad, muchas marcas y comunidades carecen de plataformas especializadas donde puedan vender productos exclusivos a sus seguidores de manera eficiente. Las plataformas de comercio generalistas no siempre permiten una personalización adecuada o una interacción directa con la comunidad. Esto dificulta la gestión de inventarios, la promoción de productos exclusivos y la fidelización de clientes.

### Justificación
FANPAGE busca cubrir esta necesidad creando una plataforma web personalizada para la venta de productos específicos, permitiendo a las marcas ofrecer una experiencia única a sus seguidores. La plataforma proporcionará herramientas para comprar lo que desees y poder realizar un feedback de los productos.

### Alcance
El proyecto FANPAGE abarcará la creación de una plataforma web que permita a los usuarios registrar sus cuentas, explorar productos, añadir artículos a su carrito de compras y realizar pagos de forma segura. Desde el lado administrativo, se incluirán funcionalidades para gestionar productos y órdenes de compra. El sistema también ofrecerá integración con diferentes métodos de pago y garantizará la protección de los datos de los usuarios.

## Diagramas

### Diagrama de casos de uso
![Casos de Uso Usuario](media/Casos_Uso_Usuario.png)
![Casos de Uso Administrador](media/Casos_Uso_Administrador.png)
![alt text](media/Diagrama_Casos_Uso.svg)

### Diagrama de Secuencia
#### Usuario
![Diagrama Secuencia Shop Usuario](media/Diagrama_Secuencia_Shop_Usuario.png)
![Diagrama Secuencia Buscar Usuario](media/Diagrama_Secuencia_Buscar_Usuario.png)
![Diagrama Secuencia Contacto Usuario](media/Diagrama_Secuencia_Contacto_Usuario.png)
![Diagrama Secuencia Estado Producto Usuario](media/Diagrama_Secuencia_EstadoProducto_Usuario.png)

#### Administrador
![Diagrama Secuencia Inicio Admin](media/Diagrama_Secuencia_Inicio_Admin.png)
![Diagrama Secuencia Productos Admin](media/Diagrama_Secuencia_Productos_Admin.png)
![Diagrama Secuencia Ordenes Admin](media/Diagrama_Secuencia_Ordenes_Admin.png)
![Diagrama Secuencia Usuarios Admin](media/Diagrama_Secuencia_Usuarios_Admin.png)
![Diagrama Secuencia Mensajes Admin](media/Diagrama_Secuencia_Mensajes_Admin.png)

### Diagrama de Clases
![Diagrama de Clases](media/Diagrama_Clases.png)

### Diagrama de Componentes
![Diagrama de Componentes](media/Diagrama_Componentes.png)

### Diagrama de Despliegue
![Diagrama de Despliegue](media/Diagrama_Despligu_Arquitectura.png)

## Cobertura de Pruebas
### Antes SonarCloud
![alt text](media/Comparativa_Sonar.png)
### Despues SonarCloud
![alt text](media/Coberrtura_SonarCloud.png)

### Comparativa Snyk
![alt text](media/Comparativa_Snyk.png)

### Antes Semgrep
![alt text](media/Semgrep_Antes.png)

### Despues Semgrep
![alt text](media/Semgrep_Despues.png)

## Referencias

- The PHP Group. (2024). PHP Documentation. PHP. https://www.php.net/docs.php
- The PHP Group. (2022). PHP 8.2.0 Release Notes. PHP. https://www.php.net/releases/8.2/

### Frameworks de Testing
- Bergmann, S. (2024). PHPUnit Manual. PHPUnit. https://phpunit.de/documentation.html
- Behat. (2024). Behat Documentation. Behat. https://docs.behat.org/
- Kudryashov, K. (2024). Behat/Behat: BDD framework for PHP. GitHub. https://github.com/Behat/Behat
- Behat. (2024). MinkExtension - Behat Documentation. GitHub. https://github.com/Behat/MinkExtension
- Selenium. (2024). Selenium Documentation. Selenium HQ. https://www.selenium.dev/documentation/
- PHP WebDriver. (2024). PHP WebDriver Documentation. GitHub. https://github.com/php-webdriver/php-webdriver
- Dmore. (2024). Chrome Mink Driver. GitHub. https://github.com/dmore/chrome-mink-driver
- Emuse. (2024). BehatHTMLFormatter. GitHub. https://github.com/emuse/BehatHTMLFormatter"
UPT-FAING-EPIS/si885_2024-ii-proyecto_si885_2024-ii_u3-proyecto-formatos-01,si885_2024,ii-proyecto_si885_2024-ii_u3-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-api-y-funciones-meza-y-castaneda,proyecto,si8811a-2024-ii-u2-api-y-funciones-meza-y-castaneda,True,6077,False,17,True,True,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17471581)
# API Flask con Azure AD y MongoDB

## Descripción General

Este proyecto es una API desarrollada en **Flask**, que utiliza **Azure Active Directory (Azure AD)** para la autenticación y **MongoDB** para almacenar perfiles de usuarios y roles. Se implementa un sistema de **control de acceso basado en roles (RBAC)** que asegura que los usuarios solo puedan acceder a las secciones autorizadas de la aplicación.

---

## Objetivos del Proyecto

### 1. **Autenticación con Azure Active Directory (Azure AD)**
- Implementar un sistema de inicio de sesión utilizando **Azure AD** que restringe el acceso solo a los correos electrónicos autorizados de la organización.
  
### 2. **Control de Acceso Basado en Roles**
- Definir y gestionar roles de usuario asignados en **Azure AD** para controlar el acceso a diferentes partes de la aplicación:
  - Los usuarios con el rol **admin** tienen acceso a las secciones administrativas.
  - Los usuarios con el rol **user** tienen acceso a la interfaz de usuario.

### 3. **Seguridad Mejorada**
- Asegurar la validación de tokens y la protección de información sensible mediante conexiones seguras (TLS) y la autenticación de usuarios a través de **Azure AD**.

---

## Flujo de Autenticación

Esta API sigue un flujo de autenticación utilizando **Azure AD** y **MSAL**. El flujo completo se describe a continuación.

### Diagrama de Flujo de Autenticación

```mermaid
graph TD
    A[Usuario] -->|No autenticado| B[Redirige a<br>/login]
    B --> C[Azure AD:<br> autenticación]
    B --> H[Google Cloud:<br> autenticación]
    C --> D[Azure AD<br>devuelve código<br>de autorización]
    H --> I[Google Cloud<br>devuelve código<br>de autorización]
    D --> E[API intercambia<br>código por token]
    I --> E
    E --> F[Obtiene info<br>de perfil y roles]
    F --> G[Redirige a<br>página principal]

```
### Flujo de Control de Acceso Basado en Roles

```mermaid
graph TD
    A[Usuario] --> B[Accede a área restringida]
    B --> C{El usuario tiene<br> el rol adecuado?}
    C -- Sí --> D[Permitir acceso]
    C -- No --> E[Error 403: Acceso denegado]
```
## Tecnologías Utilizadas
- **Flask**: Framework web minimalista para Python.
- **Azure Active Directory (Azure AD)**: Proveedor de autenticación para permitir el acceso con cuentas de Microsoft.
- **MSAL (Microsoft Authentication Library)**: Biblioteca que gestiona la autenticación y la obtención de tokens de Azure AD.
- **MongoDB**: Base de datos NoSQL para almacenar la información de los usuarios.
- **Python Dotenv**: Maneja variables de entorno desde un archivo `.env`.
- **Certifi**: Para asegurar conexiones TLS confiables con MongoDB.
- **Gunicorn**: Servidor WSGI para servir la aplicación Flask en producción.
- **Google Cloud**: Plataforma en la nube que proporciona servicios adicionales como autenticación alternativa, almacenamiento y análisis, y puede complementar la infraestructura junto con Azure, permitiendo un entorno híbrido.

## Instalación y Configuración

### Requisitos Previos
Python 3.12.5 o superior. Cuenta de Azure AD registrada. MongoDB Atlas o cualquier servidor MongoDB.

### Pasos para la Instalación
Clonar el repositorio:
```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa.git
```
Instalar las dependencias:

```bash
cd proyecto-si8811a-2024-ii-u1-apis-y-funciones-meza-y-churacutipa
pip install -r requirements.txt
```
Configurar las variables de entorno: Crea un archivo .env basado en el archivo .env.example y completa las variables requeridas:
```bash
SECRET_KEY=valor_a_reemplazar
CLIENT_ID=valor_a_reemplazar
CLIENT_SECRET=valor_a_reemplazar
AUTHORITY=valor_a_reemplazar
REDIRECT_PATH=valor_a_reemplazar
MONGO_URI=valor_a_reemplazar
```

Iniciar la aplicación: Ejecuta la aplicación localmente:
```bash
python api_login.py
```

Para entornos de producción, usa Gunicorn:
```bash
gunicorn api_login:app
```
## Uso de Docker Hub
La imagen de la API está disponible en Docker Hub, lo que facilita su despliegue en diferentes entornos sin necesidad de construirla localmente. Puedes acceder a ella en el siguiente enlace:

[Docker Hub - Login API](https://hub.docker.com/repository/docker/marcomeza14/login_api)

## Uso de Docker
El proyecto incluye un archivo `Dockerfile` para facilitar la construcción y despliegue de la aplicación en un contenedor.

### Dockerfile
```dockerfile
# Usa una imagen base oficial de Python
FROM python:3.12.5-slim

# Establece el directorio de trabajo en el contenedor
WORKDIR /app

# Copia los archivos de requisitos al contenedor
COPY requirements.txt ./

# Instala las dependencias
RUN pip install --no-cache-dir -r requirements.txt

# Copia el resto de los archivos de la aplicación al contenedor
COPY . .

# Exponer el puerto en el que la aplicación Flask se ejecutará
EXPOSE 5000

# Define la variable de entorno para Flask
ENV FLASK_APP=api_login.py
ENV FLASK_RUN_HOST=0.0.0.0

# Ejecuta la aplicación Flask
CMD [""flask"", ""run""]
```
Docker Compose
El archivo docker-compose.yml permite gestionar la aplicación y las variables de entorno de forma sencilla.
```yaml
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ""5000:5000""
    env_file:
      - .env
```
### Pasos para ejecutar con Docker

Construir la imagen y ejecutar los contenedores:

```bash
docker-compose build
docker-compose up -d
```
### Base de Datos (MongoDB Atlas)

La API utiliza MongoDB para almacenar la información de los usuarios:

- **Base de Datos**: `db_Upt_Usuarios`
- **Colección**: `Accesos_users`

Los datos almacenados incluyen:

- **email**: Correo electrónico del usuario.
- **name**: Nombre del usuario.
- **roles**: Roles asignados al usuario.
- **status**: Estado de autenticación.
- **last_login**: Última fecha de inicio de sesión.

Video :
[URL Video](https://youtu.be/e52IbrZbrQQ)"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u3-tg03agredacastanedacontrerasortiz,proyecto,si885-2024-ii-u3-tg03agredacastanedacontrerasortiz,True,15885,False,5,True,True,True,"](https://classroom.github.com/a/OKCDjH9I)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17472715)




#  Plataforma de análisis de datos de matriculados en la carrera de ingeniería de sistemas para la universidad privada de Tacna - PAMIS

El propósito de PAMIS es proporcionar una plataforma tecnológica que permita a los estudiantes de la Escuela Profesional de Ingeniería de Sistemas abordar varios desafíos relacionados con el análisis del desempeño académico de sus compañeros. Estos desafíos incluyen la falta de acceso a herramientas analíticas detalladas, la necesidad de identificar patrones de rendimiento a lo largo del tiempo y la importancia de tomar decisiones estratégicas basadas en datos concretos.

## Integrantes
- **Agreda Ramirez, Jesus Eduardo			(2021069823)** 
- **Castañeda Centurion, Jorge Enrique		(2021069822)** 
- **Contreras Lipa, Alvaro Javier			(2021070020)** 
- **Málaga Espinoza, Ivan Francisco		(2021071086)**
- **Ortiz Fernandez, Ximena Andrea			(2021071080)**

## Curso
- Inteligencia de Negocios

## Docente
- Mag. Patrick Cuadros Quiroga

## Enlace a los datos
-  [Consolidado Semestre 2020 - I](https://docs.google.com/spreadsheets/d/1cIg5tDGIJB3h0LbpFJx4EUgkOMIlYVMK/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2020 - II](https://docs.google.com/spreadsheets/d/1eaYI-YMzZYpGdQ3vCbRQ28YCHEucd3Fi/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2021 - I](https://docs.google.com/spreadsheets/d/1oR_VQalTpQ3ZywmnBypG0NKYe4vTw7sf/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2021 - II](https://docs.google.com/spreadsheets/d/1x3-4pQaRQgEPI5ymfbOjxNAuNmJLEyI3/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2022 - I](https://docs.google.com/spreadsheets/d/1rwH7N_DOPicpMzaNN9rf5wD1CHzeQA0E/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Consolidado Semestre 2022 - II](https://docs.google.com/spreadsheets/d/10kJhI5DXXkWpJ0_mLp-LQxszpHnUWk9N/edit?usp=sharing&ouid=105683032286356296046&rtpof=true&sd=true)

-  [Link del reporte en PowerBI](https://app.powerbi.com/reportEmbed?reportId=0d97ad35-6197-41f4-8ff7-8956d59f99c0&autoAuth=true&ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a)

## Diagramas Mermaid

- Diagrama de clase

```mermaid
classDiagram
    class Curso {
        +String codigoCurso
        +String nombreCurso
        +String semestre
        +int totalMatriculados
        +int totalAprobados
        +int totalDesaprobados
        +int totalRetiros
        +int totalAbandonos
        +int totalLlevados
        +int cantidadConvalidados
        +float notaMinima
        +float notaMaxima
        +float promedioNotas
        +float desviacionEstandarNotas
        +obtenerEstadisticas(): Map<String, Object>
        +calcularPromedioNotas(): float
        +calcularDesviacionEstandar(): float
        +actualizarEstadisticas(matriculados, aprobados, desaprobados, retiros): void
        +aplicarFiltroPorSemestre(semestre: String): List<Curso>
        +exportarReporte(formato: String): File
    }
```

- Diagrama Contenedor
```mermaid
graph TD
    subgraph Aplicación_Web
        A_Interfaz[Interfaz de Usuario]
    end

    subgraph Servidor_Backends
        B1[Gestiona la lógica de negocio]
        B2[Procesa las solicitudes del frontend]
    end

    subgraph Terraform
        C1[Automatiza la configuración de infraestructura en Azure]
    end

    subgraph Azure
        E[Base de datos]
    end

    A_Interfaz -->|Solicita datos| B1
    B1 -->|Consulta/Actualiza datos académicos| E
    B2 -->|Procesa solicitudes| A_Interfaz
    B1 -->|Gestiona y provisiona| C1
    C1 -->|Configura infraestructura| E

```

- Diagrama Contextual
```mermaid
graph LR
    A[Administrador / Docente] -->|Interactúa con los gráficos y análisis académicos| PAMIS
    PAMIS -->|Provee datos académicos| B[Base de Datos]
    PAMIS -->|Gestiona la infraestructura y recursos en Azure| C[Terraform]

```

- Diagrama de Actividades CU-01 “Consultar estadísticas académicas”
```mermaid
sequenceDiagram
    participant Estudiante as Estudiante (Actor)
    participant Sistema as Sistema (PAMIS)

    Estudiante->>Sistema: Acceder a la plataforma PAMIS desde su navegador
    Sistema-->>Estudiante: Muestra la pantalla principal con las secciones disponibles (Análisis de Matrículas, Desempeño Académico, etc.)
    Estudiante->>Sistema: Selecciona una sección (por ejemplo, ""Análisis de Matrículas"")
    Sistema-->>Estudiante: Carga y muestra los gráficos relacionados con las estadísticas de matrículas
    Estudiante->>Sistema: Navega por los gráficos y observa los datos mostrados
    Sistema-->>Estudiante: Permite la interacción con los gráficos (detalles al pasar el cursor o hacer clic)

```

-Diagrama de Actividades CU-02 “Aplicar filtros a los gráficos”
```mermaid
sequenceDiagram
    participant Estudiante as Estudiante (Actor)
    participant Sistema as Sistema (PAMIS)

    Estudiante->>Sistema: Selecciona un gráfico dentro de una sección de análisis
    Sistema-->>Estudiante: Muestra el gráfico con datos generales y las opciones de filtros disponibles

    Estudiante->>Sistema: Elige un filtro (e.g., ""Semestre: 2021-I"")
    Sistema-->>Sistema: Actualiza el gráfico para reflejar los datos correspondientes al filtro seleccionado
    Sistema-->>Estudiante: Muestra el gráfico actualizado

    Estudiante->>Sistema: Elige un segundo filtro (e.g., ""Curso: Auditoría de Sistemas"")
    Sistema-->>Sistema: Combina los filtros aplicados y actualiza el gráfico de manera interactiva
    Sistema-->>Estudiante: Muestra el gráfico interactivo actualizado

```
-Diagrama de Actividades CU-03 “Exportar reportes”
```mermaid
sequenceDiagram
    participant Estudiante as Estudiante (Actor)
    participant Sistema as Sistema (PAMIS)

    Estudiante->>Sistema: Selecciona un gráfico dentro de una sección
    Sistema-->>Estudiante: Muestra el gráfico con la opción ""Exportar datos""

    Estudiante->>Sistema: Hace clic en la opción ""Exportar datos""
    Sistema-->>Estudiante: Muestra un cuadro de diálogo con las opciones de exportación (""Datos resumidos"" o ""Datos con diseño actual"")

    Estudiante->>Sistema: Selecciona ""Datos resumidos""
    Estudiante->>Sistema: Elige un formato (por ejemplo, ""XLSX"")
    Sistema-->>Sistema: Habilita los formatos disponibles para exportar (XLSX y CSV)

    Estudiante->>Sistema: Hace clic en el botón de descarga
    Sistema-->>Estudiante: Procesa la exportación y genera el archivo en el formato seleccionado
    Sistema-->>Estudiante: Descarga el archivo al dispositivo del estudiante

```

-Diagrama de actividades Inicial
```mermaid
sequenceDiagram
    participant Estudiante as Estudiante (Usuario)
    participant Sistema as Sistema (PAMIS)

    Estudiante->>Sistema: Accede a la plataforma PAMIS desde su navegador
    Sistema-->>Estudiante: Muestra la pantalla principal con las secciones de análisis

    Estudiante->>Sistema: Selecciona una sección (por ejemplo, ""Análisis de Matrículas"")
    Sistema-->>Estudiante: Carga y muestra los gráficos interactivos relacionados

    Estudiante->>Sistema: Navega por los gráficos y observa los datos
    Estudiante->>Sistema: Selecciona un gráfico para aplicar filtros
    Sistema-->>Estudiante: Muestra las opciones de filtros disponibles

    Estudiante->>Sistema: Aplica un filtro (por ejemplo, ""Semestre: 2021-I"")
    Sistema-->>Estudiante: Actualiza el gráfico según los filtros seleccionados
    Sistema-->>Estudiante: Muestra el gráfico actualizado con los datos filtrados

    Estudiante->>Sistema: Selecciona la opción de exportar datos del gráfico
    Estudiante->>Sistema: Selecciona el formato de exportación (por ejemplo, ""XLSX"")
    Sistema-->>Sistema: Procesa la exportación y genera el archivo
    Sistema-->>Estudiante: Descarga el archivo al dispositivo del estudiante

```

-Diagrama de componentes
```mermaid
graph TD
    Database[""Base de Datos (CICLO_UNIVERSITARIO)""] --> PowerBI[""Power BI""]
    PowerBI --> Model[""Modelo de Datos""]
    Model --> Transformations[""Transformaciones DAX""]
    Transformations --> Metrics[""Páginas de Presentación""]
    Metrics -->|Proveen datos base| Tables[""Gráficos y Tablas «UI»""]
    Metrics --> Comparative[""Análisis Comparativo""]
    Metrics --> Approval[""Índice de Desaprobación""]
    Metrics --> Performance[""Desempeño Académico""]
    Metrics --> Enrollment[""Análisis Matrícula""]
    Users[""Usuarios""] -->|Interacción| Tables

```

-Diagrama de Paquetes
```mermaid
graph TD
    subgraph PAMIS
        AzureDB[""Base de Datos Azure""] --> PowerBIService[""Power BI Service""]
        Dashboards --> PowerBIService
    end
    PublicationServices[""Servicios de publicación Power BI""] --> PowerBIService

```

-Diagrama de Proceso Propuesto
```mermaid
sequenceDiagram
    participant Estudiante as Estudiante (Usuario)
    participant Sistema as Sistema (PAMIS)

    Estudiante->>Sistema: Accede a la plataforma PAMIS desde su navegador
    Sistema-->>Estudiante: Muestra la pantalla principal con las secciones de análisis

    Estudiante->>Sistema: Selecciona una sección (por ejemplo, ""Análisis de Matrículas"")
    Sistema-->>Estudiante: Carga y muestra los gráficos interactivos relacionados

    Estudiante->>Sistema: Navega por los gráficos y observa los datos
    Estudiante->>Sistema: Selecciona un gráfico para aplicar filtros
    Sistema-->>Estudiante: Muestra las opciones de filtros disponibles

    Estudiante->>Sistema: Aplica un filtro (por ejemplo, ""Semestre: 2021-I"")
    Sistema-->>Estudiante: Actualiza el gráfico según los filtros seleccionados
    Sistema-->>Estudiante: Muestra el gráfico actualizado con los datos filtrados

    Estudiante->>Sistema: Aplica un segundo filtro (por ejemplo, ""Curso: Auditoría de Sistemas"")
    Sistema-->>Estudiante: Actualiza el gráfico según los filtros seleccionados
    Sistema-->>Estudiante: Muestra el gráfico actualizado con los datos filtrados

    Estudiante->>Sistema: Selecciona la opción de exportar datos del gráfico
    Estudiante->>Sistema: Selecciona el formato de exportación (por ejemplo, ""XLSX"")
    Sistema-->>Estudiante: Procesa la exportación y genera el archivo
    Sistema-->>Estudiante: Descarga el archivo al dispositivo del estudiante

```
-Diagrama de Secuencia de CU01 “Consultar estadísticas académicas”
```mermaid
sequenceDiagram
    actor Estudiante as Estudiante
    participant Dashboard as Dashboard Principal «Interfaz»
    participant AnalisisMatriculas as Sección de Análisis de Matrículas «Frontera»
    participant ControlGraficos as Control de Gráficos «Control»

    Estudiante->>Dashboard: Accede a la plataforma PAMIS
    Dashboard-->>Estudiante: Muestra las secciones disponibles (Análisis de Matrículas, Desempeño Académico, etc.)

    Estudiante->>Dashboard: Selecciona ""Análisis de Matrículas""
    Dashboard->>AnalisisMatriculas: Cargar gráficos de estadísticas de matrículas
    AnalisisMatriculas-->>Dashboard: Envía gráficos cargados

    Dashboard-->>Estudiante: Muestra gráficos interactivos
    Estudiante->>Dashboard: Navega por los gráficos (interacción)
    Dashboard->>ControlGraficos: Actualiza detalles en los gráficos según la interacción
    ControlGraficos-->>Dashboard: Envía detalles actualizados

    Dashboard-->>Estudiante: Muestra los detalles específicos

```

-Diagrama de Secuencia de CU02 “Aplicar filtros a los gráficos”
```mermaid
sequenceDiagram
    actor Estudiante as Estudiante
    participant GraficoInteractivo as Gráfico Interactivo «Frontera»
    participant ControlFiltros as Control de Filtros «Control»
    participant ControlGraficos as Control de Gráficos «Control»
    participant DatosEstadisticos as Datos Estadísticos «Entidad»

    Estudiante->>GraficoInteractivo: Selecciona un gráfico dentro de una sección
    GraficoInteractivo-->>Estudiante: Muestra gráfico con datos generales y opciones de filtros disponibles

    Estudiante->>GraficoInteractivo: Elige un filtro (e.g., Semestre: 2021-I)
    GraficoInteractivo->>ControlFiltros: Solicita datos filtrados por semestre
    ControlFiltros->>DatosEstadisticos: Solicita datos correspondientes al filtro
    DatosEstadisticos-->>ControlFiltros: Devuelve datos correspondientes al filtro
    ControlFiltros-->>GraficoInteractivo: Actualiza gráfico con datos filtrados
    GraficoInteractivo-->>Estudiante: Actualiza gráfico mostrado

    Estudiante->>GraficoInteractivo: Selecciona un segundo filtro (e.g., Curso: Auditoría de Sistemas)
    GraficoInteractivo->>ControlFiltros: Solicita datos combinados (Semestre + Curso)
    ControlFiltros->>DatosEstadisticos: Solicita datos combinados
    DatosEstadisticos-->>ControlFiltros: Devuelve datos combinados
    ControlFiltros-->>GraficoInteractivo: Actualiza gráfico con datos combinados
    GraficoInteractivo-->>Estudiante: Actualiza gráfico interactivo mostrado

```
-Diagrama de Secuencia de CU03 “Exportar reportes”
```mermaid
sequenceDiagram
    actor Estudiante as Estudiante
    participant GraficoInteractivo as Gráfico Interactivo «Frontera»
    participant ControlFiltros as Control de Filtros «Control»
    participant ControlGraficos as Control de Gráficos «Control»
    participant DatosEstadisticos as Datos Estadísticos «Entidad»

    Estudiante->>GraficoInteractivo: Selecciona un gráfico dentro de una sección
    GraficoInteractivo-->>Estudiante: Muestra gráfico con datos generales y opciones de filtros disponibles

    Estudiante->>GraficoInteractivo: Elige un filtro (e.g., Semestre: 2021-I)
    GraficoInteractivo->>ControlFiltros: Solicita datos filtrados por semestre
    ControlFiltros->>DatosEstadisticos: Devuelve datos correspondientes al filtro
    DatosEstadisticos-->>ControlFiltros: Devuelve datos correspondientes al filtro
    ControlFiltros-->>GraficoInteractivo: Actualiza gráfico con datos filtrados
    GraficoInteractivo-->>Estudiante: Actualiza gráfico mostrado

    Estudiante->>GraficoInteractivo: Selecciona un segundo filtro (e.g., Curso: Auditoría de Sistemas)
    GraficoInteractivo->>ControlFiltros: Solicita datos combinados (Semestre + Curso)
    ControlFiltros->>DatosEstadisticos: Solicita datos combinados
    DatosEstadisticos-->>ControlFiltros: Devuelve datos combinados
    ControlFiltros-->>GraficoInteractivo: Actualiza gráfico con datos combinados
    GraficoInteractivo-->>Estudiante: Actualiza gráfico interactivo mostrado

```

-Diagrama ER
```mermaid
erDiagram
    Cursos {
        VARCHAR NombreCurso
        INT Matriculados
        INT Aprobados
        INT Desaprobados
        INT Retiros
        INT Abandonos
        INT TotalLlevados
        INT CantidadConvalidados
        FLOAT NotaMinima
        FLOAT NotaMaxima
        FLOAT Promedio
        FLOAT DesviacionEstandar
        NVARCHAR(50) CodigoCurso
        NVARCHAR(50) Semestre
    }

```
-Organigrama
```mermaid
graph TD
    A[Consejo de Facultad] --> B[Decanato]
    B --> C[Comisión de Planificación]
    B --> D[Comisión Académico Curricular y de Evaluación Docente]
    B --> E[Comisión de Aseguramiento de la Calidad]
    B --> F[Secretaría Académica Administrativa]
    
    F --> G[Escuela Profesional de Ingeniería Electrónica]
    F --> H[Escuela Profesional de Ingeniería de Sistemas]
    F --> I[Escuela Profesional de Ingeniería Civil]
    F --> J[Escuela Profesional de Ingeniería Agroindustrial]
    F --> K[Escuela Profesional de Ingeniería Ambiental]
    F --> L[Escuela Profesional de Ingeniería Industrial]
    F --> M[Unidad de Postgrado y/o Segunda Especialidad]
    F --> N[Unidad de Investigación]
    F --> O[Unidad de Responsabilidad Social Universitaria]
    F --> P[Centro de Producción de Bienes y Prestación de Servicios]

```"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u3-tg01apazachuracutcutiescohuallpass,proyecto,si885-2024-ii-u3-tg01apazachuracutcutiescohuallpass,True,7819,True,21,True,True,True,"# SIMGR-UPT: Sistema de Monitoreo y Gestión de Red para Laboratorios UPT

## GITHUB PAGES subir archivos al bucket web: https://upt-faing-epis.github.io/proyecto-si885-2024-ii-u3-tg01apazachuracutcutiescohuallpass/ 

**Descripción:**  
El **Sistema de Monitoreo y Gestión de Red para Laboratorios UPT (SIMGR-UPT)** tiene como objetivo supervisar y gestionar en tiempo real el rendimiento de la red en los laboratorios de la Universidad Privada de Tacna. Esto incluye monitoreo de ancho de banda, estabilidad de la conexión y detección de problemas para optimizar los recursos y garantizar un entorno eficiente.



## Integrantes

| Nombre                             | Código             |
|------------------------------------|-------------------|
| Escobar Rejas, Carlos Andrés       | (2021070016)       |
| Apaza Ccalle, Albert Kenyi         | (2021071075)       |
| Ricardo Cutipa Gutierrez           | (2021069827)       |
| Erick Churacutipa Blass            | (2020067578)       |
| Jesus Huallpa Maron                | (2021071085)       |


## Reporte de Power BI
📊 **Puedes acceder al reporte de Power BI haciendo clic en el siguiente enlace:**

[Ver Reporte en Power BI](https://app.powerbi.com/view?r=eyJrIjoiNjljYmE5NzAtZjk2My00NDFlLWE5MDktNDAyNzE2OWI0YjZmIiwidCI6IjE2NzFiMjY2LTJhNDktNDYyYi05Zjk1LWU4MzFjOGRlMDRkOSIsImMiOjEwfQ%3D%3D)


## Diagramas

### 1. Construcción de la Infraestructura
![Construcción de la Infraestructura](media/diagramaBrainboard.png)

### 2. Interacción del Usuario sobre lo Creado
![Interacción del Usuario](media/Brainboard-athena.png).


## Inventario de Archivos y Carpetas

### Carpeta Raíz

1. **`data/`**  
   - Contiene los archivos de datos en formato CSV utilizados por el sistema.

2. **`G02_UPTRED.pbix`**  
   - Archivo de Power BI para análisis y visualización de datos.

3. **`lambda_function.zip`**  
   - Comprimido con los siguientes componentes:
     - `s3bucket.py`: Script para subir datos al bucket S3.
     - `datos_combinados.csv`: Archivo combinado generado desde `data`.

4. **`requirements.txt`**  
   - Dependencias necesarias para los scripts Python.

5. **`s3bucket.py`**  
   - Script que sube archivos CSV al bucket S3.

6. **`sqlcsv.py`**  
   - Combina los CSV en `data` para generar `datos_combinados.csv`.

### Carpeta PruebasExpo

1. **`APPs3uploaddata.exe`**  
   - Aplicación de escritorio en Python para subir archivos CSV al bucket S3.

2. **`final data prueba.csv`**  
   - Archivo de prueba para demostración.

3. **`s3uploaddata.py`**  
   - Código fuente de `APPs3uploaddata.exe`.

### Estructura General

```
/
├── data/
│   ├── [Archivos CSV...]
├── G02_UPTRED.pbix
├── lambda_function.zip
│   ├── s3bucket.py
│   ├── datos_combinados.csv
├── requirements.txt
├── s3bucket.py
├── sqlcsv.py
├── PruebasExpo/
│   ├── APPs3uploaddata.exe
│   ├── final data prueba.csv
│   ├── s3uploaddata.py
```

## Pasos de Automatización de Recursos

### 1. Configuración Inicial

- Asegúrate de tener los siguientes archivos en el entorno local:
  - `sqlcsv.py`
  - `s3bucket.py`
  - `requirements.txt`
  - `lambda_function.zip`
  - Carpeta `data/` con los archivos CSV.

### 2. Eliminar Recursos Existentes

Si necesitas limpiar tu entorno, sigue estos pasos:

1. Eliminar datos en el bucket S3:
   ```bash
   aws s3 rm s3://netuptinteligencianegocios --recursive
   ```

2. Eliminar crawler en AWS Glue:
   ```bash
   aws glue delete-crawler --name netuptinteligencianegocios-crawler
   ```

3. Destruir la infraestructura de AWS con Terraform:
   ```bash
   terraform destroy --auto-approve
   ```

### 3. Configuración y Generación de Recursos

1. Ubícate en la carpeta que contiene `main.tf` (Terraform).

2. Inicia Terraform:
   ```bash
   terraform init
   ```

3. Crea la infraestructura:
   ```bash
   terraform apply --auto-approve
   ```

### 4. Automatización con Scripts

1. Combina los archivos CSV de `data/` con `sqlcsv.py`:
   ```bash
   python3 sqlcsv.py
   ```

2. Sube el archivo combinado al bucket S3 con `s3bucket.py`:
   ```bash
   python3 s3bucket.py
   ```

## Configuración del Controlador ODBC para Power BI

### 1. Descargar e Instalar Controlador

- Descarga el controlador desde:  
  [Amazon Athena ODBC Driver v2.0.3.0](https://downloads.athena.us-east-1.amazonaws.com/drivers/ODBC/v2.0.3.0/Windows/AmazonAthenaODBC-2.0.3.0.msi).

### 2. Configuración del ODBC

- Abre el Administrador de ODBC (64 bits).
- Configura un nuevo DSN con los siguientes parámetros:
  - **Data Source Name**: `athena-in`
  - **Description**: `athena-in in Power BI`
  - **Region**: `us-east-1`
  - **Catalog**: `AwsDataCatalog`
  - **Database**: `default`
  - **Workgroup**: `primary`
  - **S3 Output**: `s3://netuptinteligencianegocios/athena-output/`
  - **Authentication Options**: `DEFAULT CREDENTIALS`

### 3. Probar la Conexión

- Presiona **Test** en el ODBC configurado.
- Resultado esperado:
  ```
  Successfully connected to: Athena engine version 3
  Region: us-east-1
  Catalog: AwsDataCatalog
  Workgroup: primary
  Auth Type: Default Credentials
  ```

## Carga de Datos en Power BI

1. Abre Power BI y selecciona **Obtener Datos → Amazon Athena**.
2. Configura el DSN:
   - Introduce el DSN configurado: `athena-in`.
3. Selecciona las tablas disponibles desde `AwsDataCatalog` y cárgalas en Power BI.
4. Realiza ajustes en las visualizaciones según sea necesario.

## Notas Finales

- Asegúrate de que las credenciales de AWS están configuradas antes de ejecutar los scripts.
- Antes de cargar datos en Power BI, verifica que el bucket S3 contiene los datos esperados.
- Durante la exposición, utiliza `final data prueba.csv` para las pruebas de carga en tiempo real.

# **🎥 Explicación y Video**

[**Haz clic aquí para ver el video**](https://youtu.be/Y2a_7TgeWoA)

# Análisis Predictivo con R

![prediccion1](prediccion1.png)

en esta prediccion la linea roja representa la prediccion y los puntos azules los datos del csv.
como se puede ver la prediccion es casi precisa , ya que hay como 4 puntos azules fuera de la linea pero no estan muy legos de la linea

![prediccion2](prediccion2.png)

codigo:
en este caso utilizamos R

```
El código siguiente, que crea un dataframe y quita las filas duplicadas, siempre se ejecuta y actúa como un preámbulo del script:
dataset <- data.frame(clase, consumo_energia_kwh, dia, docente, Año, Trimestre, Mes, Día, horario, id, ip, laboratorio, navegador, seccion, tema, tiempo_sesion, total_enviado_mb, total_GB, total_recibido_mb, turno, total_mbps)
dataset <- unique(dataset)
Pegue o escriba aquí el código de script:
Información del dataset provisto por Power BI
if (!require(caret)) install.packages(""caret"", repos = ""http://cran.us.r-project.org""/)
if (!require(ggplot2)) install.packages(""ggplot2"", repos = ""http://cran.us.r-project.org""/)

Cargar librerías
library(caret)
library(ggplot2)

datos <- dataset

head(datos)

str(datos)

summary(datos)
if (all(is.na(datos$horario))) {
    datos$horario <- ""Sin horario""
} else {
    datos$horario[is.na(datos$horario)] <- ""Sin horario""
}

datos$total_enviado_mb <- as.numeric(datos$total_enviado_mb)
datos$total_recibido_mb <- as.numeric(datos$total_recibido_mb)
datos$total_GB <- as.numeric(datos$total_GB)

set.seed(123)
modelo <- train(total_GB ~ total_enviado_mb + total_recibido_mb, data = datos, method = ""lm"")

modelo_resumen <- summary(modelo)

predicciones <- predict(modelo, datos[, c(""total_enviado_mb"", ""total_recibido_mb"")])

datos$prediccion_GB <- predicciones

library(ggplot2)
ggplot(datos, aes(x = total_GB, y = prediccion_GB)) +
  geom_point(color = ""blue"") +
  geom_abline(slope = 1, intercept = 0, color = ""red"") +
  labs(title = ""Predicción vs Real"", x = ""Valor Real de total_GB"", y = ""Predicción de total_GB"") +
  theme_minimal()

rmse <- sqrt(mean((predicciones - datos$total_GB)^2))
cat(""RMSE:"", rmse)
```"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u3-caxi_aguilar,proyecto,si784-2024-ii-u3-caxi_aguilar,True,6591,False,5,True,True,False,"](https://classroom.github.com/a/x1Nq8_Zo)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17489091)

<div align=""center"">

![./media/media/image1.png](./media/logo-upt.png)

**UNIVERSIDAD PRIVADA DE TACNA**  

**FACULTAD DE INGENIERÍA**  

**Escuela Profesional de Ingeniería de Sistemas**  

**Proyecto _UPT-SYNC: Herramienta de apoyo para estudiantes_**  

Curso: _Calidad y Pruebas de Software_  

Docente: _Mag. Patrick Cuadros Quiroga_  

Integrantes:  

***CAXI CALANI Luis Eduardo (2018062487)***  
***AGUILAR PINTO Victor Eleazar (2018062487)***  

**Tacna – Perú**  

***2024***  

</div>

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

# **Sistema UPT-SYNC**

## **10. Reportes Generados**

A continuación, se presentan los enlaces a los reportes generados durante el análisis y pruebas de la aplicación **UPT-SYNC**, utilizando diversas herramientas para evaluar la calidad del código, la cobertura de pruebas y la seguridad.

---

### **10.1 Reportes de Cobertura de Pruebas**

1. **Reporte de Cobertura de Pruebas Unitarias:**  
   [Ver Reporte de Cobertura de Pruebas Unitarias](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/unit-tests)  
   Este reporte muestra los resultados de las pruebas unitarias realizadas sobre los módulos principales de la aplicación.  
   - **Cobertura Total Alcanzada:** 88%  
   - **Herramienta Utilizada:** Jest  

2. **Reporte de Cobertura de Pruebas de Integración:**  
   [Ver Reporte de Cobertura de Pruebas de Integración](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/integration-tests)  
   Este informe detalla los resultados de las pruebas de integración, enfocándose en la interacción entre los diferentes módulos de la aplicación.  
   - **Cobertura Total Alcanzada:** 67%  
   - **Herramienta Utilizada:** Jest, Mocha  

---

### **10.2 Reportes de Mutaciones y Aceptación**

3. **Reporte de Mutaciones:**  
   [Ver Reporte de Mutaciones](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/mutation-report.html)  
   Evalúa la robustez del código al introducir mutaciones en el mismo y validar la eficacia de las pruebas existentes.  
   - **Propósito:** Identificar posibles fallos en las pruebas automatizadas.

4. **Reporte de Aceptación:**  
   Documenta los escenarios de prueba funcional que validan los requerimientos del usuario final.  
   - **Propósito:** Garantizar que las funcionalidades cumplen con las expectativas del usuario.

---

### **10.3 Reportes de Seguridad**

5. **Reporte de Análisis de Contenedor (Snyk):**  
   [Ver Reporte de Seguridad - Snyk](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/snyk-report/)  
   Resultado del análisis de vulnerabilidades en las dependencias y contenedores utilizados en el proyecto.  
   - **Herramienta Utilizada:** Snyk  

6. **Reporte de Análisis Estático de Código (Semgrep):**  
   [Ver Reporte de Seguridad - Semgrep](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-caxi_aguilar_chata/semgrep-report/)  
   Este análisis detecta posibles problemas de seguridad y estándares de código no cumplidos.  
   - **Herramienta Utilizada:** Semgrep  

---

### **10.4 Reportes de Prueba de Interfaz**  
Las pruebas de interfaz se realizan utilizando Playwright y están enfocadas en validar la interacción del usuario con la aplicación.

* Objetivos de las Pruebas de Interfaz
    - Verificar que los elementos clave de la interfaz se carguen correctamente.
    - Validar que las acciones del usuario (como iniciar sesión, navegar entre menús, y llenar formularios) funcionen según lo esperado.
    - Asegurar que los mensajes de error y validación se muestren de manera adecuada.
    - Comprobar que los datos de sesión y rutas redireccionen correctamente.

* Herramientas Utilizadas
    - Microsoft Playwright: Para automatizar y ejecutar las pruebas de interfaz.
    - NUnit: Framework para estructurar las pruebas.

* Casos de Prueba
    1. Página de Inicio (HomePage)

    - Verificar que el título principal se muestra correctamente.
    - Validar que se muestren la fecha y hora actualizadas.
    - Comprobar que el botón ""Iniciar Sesión"" redirige correctamente a la página de inicio de sesión.

    2. Página de Inicio de Sesión (LoginPage)

    - Validar el comportamiento del formulario de inicio de sesión:
        - Campos vacíos generan mensajes de error: Completa este campo o Please fill out this field.
        - Inicio de sesión exitoso redirige al dashboard.
    - Verificar que la funcionalidad de mostrar/ocultar contraseña funciona correctamente.

    3. Panel de Control (Dashboard)

    - Validar que se muestra el mensaje de bienvenida correcto.
    - Comprobar que el menú lateral contiene todas las opciones necesarias (Sincronizar, Horarios, Asistencias, Justificaciones).
    - Asegurar que cada opción del menú lateral navega correctamente a la sección correspondiente.

    4. Mensajes de Validación

    - Confirmar que los mensajes de error son consistentes y se muestran en español o inglés, según el contexto.

* Ejecución de las Pruebas

    - Para ejecutar las pruebas localmente, asegúrate de tener las herramientas necesarias instaladas y sigue estos pasos:

    - Configura el entorno de desarrollo:
        Instala los navegadores necesarios con Playwright:
```
    npx playwright install
```
   - Correr la aplicación
```
    npm run start
```
![image](https://github.com/user-attachments/assets/224ad41f-6064-4af4-a358-ed87cd9cb32f)

   - Ejecuta las pruebas:
```
dotnet test
```
Genera el reporte de pruebas: Un archivo HTML con los resultados de las pruebas se genera automáticamente en la carpeta videos del proyecto. Este archivo incluye videos de las pruebas ejecutadas.

Pruebas realizadas correctamente:
![image](https://github.com/user-attachments/assets/b687e061-e1ad-485a-b053-803979dba603)

Videos de las pruebas realizadas:
![image](https://github.com/user-attachments/assets/d4efa661-2c10-4cd1-a4cc-6eadfc3650a1)

Página con los videos de las pruebas:
![image](https://github.com/user-attachments/assets/8d75dbd1-296f-4455-92bb-654a8334840d)


---



**Nota:** Los reportes enlazados están alojados en GitHub Pages y documentan exhaustivamente los análisis y resultados de calidad, seguridad y pruebas implementados en **UPT-SYNC**.  



* Luis Eduardo Caxi Calani
* Victor aguilar Pinto"
UPT-FAING-EPIS/proyecto-si8811a-2024-ii-u2-documentacion-lizarraga_arenas,proyecto,si8811a-2024-ii-u2-documentacion-lizarraga_arenas,True,144,False,0,False,False,False,"Video Presentación Documentación en Youtube: https://youtu.be/Pqjo3umL3ow


Video Presentación Métricas en Youtube: https://youtu.be/OuTrvdA26s8"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u3-tgchavezarcelirasoto,proyecto,si885-2024-ii-u3-tgchavezarcelirasoto,True,1711,False,9,True,True,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17229418)
# Pipeline de Análisis de Encuestas Universitarias

## Inventario de Artefactos

### Infraestructura (Terraform)
- `infrastructure/terraform/main.tf`: Definición de recursos AWS

### Visualización
- `reports/dashboard.pbix`: Dashboard principal en Power BI


## Enlaces de Publicación
- Repositorio: [GitHub - Survey Analysis Pipeline](#)
- Documentación: [Wiki del Proyecto](#)
- Dashboard: [Power BI Service](#)
- ETL Jobs: [AWS Glue Console](#)

## Despliegue

### Requisitos Previos
- AWS CLI configurado con credenciales apropiadas
- Terraform instalado (v1.0.0 o superior)
- Python 3.9 o superior
- Git

### Pasos de Despliegue Manual

1. Clonar el repositorio:
```bash
git clone https://github.com/your-org/survey-analysis-pipeline.git
cd survey-analysis-pipeline
```

2. Configurar variables de entorno:
```bash
export AWS_REGION=us-east-1
export TF_VAR_environment=dev
export TF_VAR_project_name=university-survey
```


### Despliegue Automatizado

El proyecto está configurado con GitHub Actions para despliegue automático:

1. Los push a la rama `main` activarán el despliegue automático
2. Los pull requests ejecutarán validaciones sin desplegar
3. Verificar los workflows en la pestaña ""Actions"" de GitHub

### Monitoreo Post-Despliegue

1. Verificar el estado de la función Lambda:
```bash
aws lambda get-function --function-name university-survey-process
```

2. Monitorear el job de Glue:
```bash
python src/glue/monitor_glue_job.py
```

3. Revisar los logs en CloudWatch"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u3-floresramos_s_t,proyecto,si784-2024-ii-u3-floresramos_s_t,True,28379,False,18,True,False,True,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17290969)


<div align=""center"">
  <img src=""./media/logo-upt.png"" alt=""Escudo UPT"" style=""width:1.088in;height:1.46256in"" />
  
  # **UNIVERSIDAD PRIVADA DE TACNA**

  ## **FACULTAD DE INGENIERÍA**  
  
  ### **Escuela Profesional de Ingeniería de Sistemas**  
  
  ## **Proyecto: ""PDF SOLUTIONS""**  
  
  **Curso:** Calidad y prueba de software  
  **Docente:** Ing. Patrick Jose Cuadros Quiroga  

  ### **Integrantes:**
  - Mario Antonio Flores Ramos (2018000597)
  - Erick Javier Salinas Condori (2020069046)
  - Fiorela Milady Ticahuanca Cutipa (2020068765)

  **Tacna – Perú**  
  2024
</div>

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

<div align=""center"">
  Sistema: ""PDF SOLUTIONS""

  ## **Informe de Calidad y Pruebas de Software**

  ## **Versión: ""2.0""**
</div>

## **CONTROL DE VERSIONES**

| **Versión** | **Hecha por**                           | **Revisada por**                          | **Aprobada por**              | **Fecha**     | **Motivo**  |
|:-----------:|:----------------------------------------:|:-----------------------------------------:|:-----------------------------:|:-------------:|:-----------:|
| 2.0         | Erick Salinas, Mario Flores, Fiorela Ticahuanca | Erick Salinas, Mario Flores, Fiorela Ticahuanca | Patrick Cuadros | 23/11/2024 | Versión 2   |

<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>


# **INDICE GENERAL**

Resumen

El informe presenta el mejoramiento de la aplicación PDF Solutions, diseñada para gestionar documentos PDF de manera eficiente y segura. La aplicación incluye un sistema de login y suscripciones, con diferentes niveles de acceso para los usuarios. Su enfoque está en facilitar tareas como combinar y dividir archivos PDF, resolviendo problemas comunes de manipulación de documentos. Con opciones de suscripción, los usuarios acceden a funciones avanzadas según sus necesidades. El objetivo es ofrecer una solución centralizada, accesible y optimizada, mejorando la experiencia de usuario y simplificando procesos manuales en el manejo de archivos PDF.

Abstract

The report presents the improvement of the PDF Solutions application, designed to efficiently and securely manage PDF documents. The application includes a login system and subscriptions, offering different access levels for users. It focuses on simplifying tasks such as combining and splitting PDF files, solving common document handling issues. With subscription options, users can access advanced features based on their needs. The goal is to provide a centralized, accessible, and optimized solution, improving the user experience and simplifying manual processes in PDF file management.


[1. Antecedentes o introducción](#_Toc52661346)

[2. Titulo](#_Toc52661347)

[3. Autores](#_Toc52661348)

[4. Planteamiento del problema](#_Toc52661349)

[4.1 Problema](#_Toc52661350)

[4.2 Justificación](#_Toc52661351)

[4.3 Alcance](#_Toc52661352)

[5. Objetivos](#_Toc52661356)

[5.1 General](#_Toc52661350)

[5.2 Especificos](#_Toc52661351)

[6. Referentes teóricos](#_Toc52661357)

[7. Desarrollo de la propuesta](#_Toc52661356)

[7.1 Tecnología de información ](#_Toc52661350)

[7.2 Metodología, técnicas usadas](#_Toc52661351)

[7. Cronograma](#_Toc52661356)


<div style=""page-break-after: always; visibility: hidden"">\pagebreak</div>

**<u>Tema: Mejoramiento de la Aplicación PDF SOLUTION</u>**

1. <span id=""_Toc52661346"" class=""anchor""></span>**Antecedentes o introducción**

El presente informe aborda el mejoramiento de la aplicación PDF Solutions, desarrollada para gestionar documentos PDF de manera eficiente y segura. Esta aplicación se ha construido con una arquitectura que integra un sistema de login y suscripciones, ofreciendo diferentes niveles de acceso a los usuarios según su tipo de suscripción. El proyecto se enfoca en proporcionar herramientas para el manejo de archivos PDF, permitiendo a los usuarios realizar tareas como juntar y cortar documentos de manera sencilla y rápida.

PDF Solutions busca resolver problemas comunes en la manipulación de archivos PDF, como la falta de opciones para combinar varios documentos o dividir un archivo grande en secciones más pequeñas. La aplicación está diseñada para ser intuitiva y funcional, ofreciendo una experiencia de usuario amigable y eficiente. Con opciones de suscripción, los usuarios pueden acceder a funcionalidades avanzadas según sus necesidades, asegurando un servicio personalizado y adaptable.

La mejora de esta aplicación tiene como objetivo proporcionar una solución centralizada y accesible para la gestión de archivos PDF, reduciendo los errores y simplificando procesos que tradicionalmente son manuales y tediosos. Además, ofrece una experiencia de usuario optimizada, facilitando la manipulación de documentos y brindando un servicio confiable y eficiente para individuos y empresas que requieren un manejo eficaz de sus archivos PDF.

2. <span id=""_Toc52661347"" class=""anchor""></span>**Titulo**

MEJORAMIENTO DE LA APLICACIÓN PDF SOLUTIONS

3. <span id=""_Toc52661348"" class=""anchor""></span>**Autores**

  - Mario Antonio Flores Ramos (2018000597)
  - Erick Javier Salinas Condori (2020069046)
  - Fiorela Milady Ticahuanca Cutipa (2020068765)

4. <span id=""_Toc52661349"" class=""anchor""></span>**Planteamiento del problema**

    4.1. <span id=""_Toc52661350"" class=""anchor""></span>Problema: 
    
    El manejo y la manipulación de archivos PDF presentan desafíos para muchos usuarios, especialmente cuando se requiere combinar o dividir documentos de manera eficiente. Las herramientas tradicionales o la falta de un sistema especializado dificultan la gestión de archivos, resultando en procesos tediosos y propensos a errores. Además, la ausencia de una plataforma que ofrezca funcionalidades avanzadas de manera intuitiva afecta la productividad y la experiencia del usuario.

    Esta situación genera ineficiencias, pérdida de tiempo y una experiencia poco satisfactoria al trabajar con documentos PDF. Por lo tanto, es necesario contar con una aplicación que proporcione una solución centralizada y fácil de usar, que permita gestionar y manipular archivos PDF de forma segura, eficiente y adaptable a las necesidades de los usuarios.

    4.2. <span id=""_Toc52661351"" class=""anchor""></span>Justificación:

    La mejora de la aplicación PDF Solutions es fundamental para proporcionar a los usuarios una herramienta eficiente y segura en la gestión de archivos PDF. La implementación de funcionalidades como el login, suscripciones y opciones avanzadas para juntar y cortar PDF permite optimizar la experiencia del usuario y facilita la manipulación de documentos de manera efectiva.

    Contar con una solución centralizada y automatizada reduce la complejidad y el tiempo necesario para gestionar archivos PDF, permitiendo a los usuarios realizar estas tareas de manera rápida y precisa. Esto no solo mejora la productividad, sino que también ofrece una experiencia más satisfactoria y accesible, adaptándose a las diversas necesidades de los usuarios. Al brindar un sistema confiable y fácil de usar, se contribuye a la optimización de procesos y a la mejora general de la gestión de documentos PDF.

    4.3. <span id=""_Toc52661352"" class=""anchor""></span>Alcance:

    Este documento se enfoca en el mejoramiento de la aplicación PDF Solutions, implementando mejoras en la vista lógica del sistema y asegurando una experiencia de usuario eficiente para la gestión de archivos PDF. Se describen los aspectos fundamentales de las funcionalidades principales, omitiendo detalles específicos de las vistas de procesos.

    - **Gestión de archivos PDF**: Implementación de funciones para juntar y cortar archivos PDF, permitiendo a los usuarios manipular documentos de manera sencilla y          eficiente.  
    - **Sistema de autenticación y suscripciones**: Desarrollo de un sistema de login y gestión de suscripciones, proporcionando acceso controlado a funciones avanzadas según el tipo de suscripción.  
    - **Experiencia de usuario optimizada**: Creación de una interfaz de usuario intuitiva y fácil de usar para mejorar la interacción con la aplicación.  
    - **Administración de suscripciones**: Gestión de los niveles de acceso y suscripciones de los usuarios, facilitando la administración y actualización de sus permisos.  
    - **Seguridad y privacidad**: Garantizar la integridad y confidencialidad de los datos del usuario, ofreciendo un sistema de autenticación seguro.  
    - **Vista lógica**: Gestión de usuarios, manipulación de archivos PDF, administración de suscripciones y funcionalidades de control de acceso.  
    - **Vista de desarrollo**: Implementación del patrón MVC con C# y ASP.NET Core, estructura organizada del código y uso de buenas prácticas de programación.  
    - **Vista física**: Despliegue de la aplicación en un entorno web, asegurando la compatibilidad y el rendimiento en servidores y bases de datos.

5. <span id=""_Toc52661356"" class=""anchor""></span>**Objetivos**

    5.1. General

    Optimizar la aplicación PDF Solutions para mejorar la gestión y manipulación de archivos PDF, brindando funcionalidades avanzadas de manera eficiente y fácil de usar.

    5.8. Especifico

    - Implementar la funcionalidad de login y suscripciones: Garantizando un acceso seguro y personalizado para los usuarios según su nivel de suscripción.  
    - Desarrollar las opciones para juntar y cortar archivos PDF: Permitiendo que los usuarios realicen estas acciones de manera sencilla y eficiente.  
    - Optimizar la experiencia del usuario en la manipulación de archivos PDF: Asegurando un proceso intuitivo y fácil de utilizar.  
    - Integrar herramientas de administración para gestionar las suscripciones de los usuarios: Facilitando la modificación y actualización de sus niveles de acceso.  
    - Implementar un sistema de validación de usuarios para asegurar la integridad y privacidad de la información.  
    - Proveer una interfaz amigable y accesible que permita a los usuarios gestionar y manipular sus documentos PDF de manera efectiva.

6. <span id=""_Toc52661357"" class=""anchor""></span>**Referentes teóricos**

    Diagramas de Casos de Uso, Diagrama de Clases, Diagrama de Componentes y Arquitectura.

    ### **Diagrama de Caso de Uso:** 

    ![image](https://github.com/user-attachments/assets/4b631e3a-1907-434c-8cd6-24bfd69b1edf)

    ### **Diagrama de Clases:** 

    ![image](https://github.com/user-attachments/assets/bdc75895-1576-4a76-8c0f-a0e758118685)

    ### **Diagrama de Secuencia:** 

    Inicio Session

    ![image](https://github.com/user-attachments/assets/a0a6540a-1882-4ffd-a911-b387b48b5e6b)

    Comprar Suscripción Premium

    ![image](https://github.com/user-attachments/assets/b9baa662-cfb6-433c-adc3-6856534f7b79)

    Fusionar PDF

    ![image](https://github.com/user-attachments/assets/99e88cda-ffb1-431a-9e8c-d0d76d9851b9)

    Cortar PDF

    ![image](https://github.com/user-attachments/assets/fbe823da-24c0-4899-bf19-8e509e234ada)

    Ver Operaciones Realizadas

    ![image](https://github.com/user-attachments/assets/4b630c58-26aa-4745-ac8c-fca4ea25a77f)

    ### **Diagrama de Componentes:**

    ![image](https://github.com/user-attachments/assets/05caa0a5-7f06-4ab4-8b8f-f63e097d25a5)

    ### **Diagrama de Arquitectura:**

    ![image](https://github.com/user-attachments/assets/7c9f6c25-f6a4-4263-ba87-d4070bc088f0)

    ### **Diagrama de Despliegue:**

    ![image](https://github.com/user-attachments/assets/2089aae2-b181-42bd-843b-4b76c07fd43d)

    ### **Diagrama Base de datos relacional:**

    ![image](https://github.com/user-attachments/assets/64c4d2bb-5101-4e13-95b2-f5b606eecfbe)

    ### **Diagrama de Objetos:**

    ![image](https://github.com/user-attachments/assets/c7dcb564-4017-47bd-9f46-cdc1614c934c)

7. Desarrollo de la propuesta (Aqui va el analisis de su aplicación con SonarQube y Snyk, para que les muestre todos los aspectos a mejorar de su aplicación)

Análisis de la Aplicación con SonarQube: (Anteriormente el código se encuentraba así)

![image](https://github.com/user-attachments/assets/374fe9a6-64de-4329-b98d-4b31907a8c94)

![image](https://github.com/user-attachments/assets/ecadbbcc-4e9b-47f3-9946-376a80bae047)  

![image](https://github.com/user-attachments/assets/2f98665c-9f84-4b2b-989d-3c858754587b)

![image](https://github.com/user-attachments/assets/e04d426f-1afc-495f-9b33-84a0639ba177)

![image](https://github.com/user-attachments/assets/ad5866a6-2d78-42fd-8e72-53c52b01e27c)

![image](https://github.com/user-attachments/assets/b0f351cd-57d3-4f0f-88ac-fc7a63478488)

![image](https://github.com/user-attachments/assets/e464b480-26cc-4285-a6d4-d7d599529555)

![image](https://github.com/user-attachments/assets/21c8beb1-f1f2-441f-9fe0-2fb7669e433f)

![image](https://github.com/user-attachments/assets/7ba79d37-f4b5-4c07-bac2-329dc26d62fa)

![image](https://github.com/user-attachments/assets/2dbef74a-7ccb-407e-b3b0-c00c3d582211)

Como se puede ver las imágenes muestran un análisis de código que identifica problemas de mantenibilidad y consistencia en el proyecto.

Análisis de la Aplicación con Snyk

El problema mostrado en el código es que se está usando directamente una ruta de archivo que viene de una entrada del usuario, sin verificar si es segura. 
Esto podría permitir que un atacante cambie esa ruta y acceda a archivos que no debería.

![image](https://github.com/user-attachments/assets/26e083d9-44aa-490e-90b5-5772db7fdf27)

![image](https://github.com/user-attachments/assets/335b21dc-b8e6-495f-a83a-71be41c4714e)

![image](https://github.com/user-attachments/assets/0ab79821-7793-4782-918f-f78ae3357eba)

![image](https://github.com/user-attachments/assets/f5b988fc-9c81-4626-b36f-13b2cbda4874)

![image](https://github.com/user-attachments/assets/ffffe161-0b96-4f82-bdcc-e4307e68f708)

![image](https://github.com/user-attachments/assets/edecde05-1c7f-4dd5-947b-b562ab4c072d)

![image](https://github.com/user-attachments/assets/8b21e404-77e3-442a-8614-832d8c3a9f26)

## Snyk Reporte 

![image](https://github.com/user-attachments/assets/fed15ad1-4037-446e-9178-ff17f068de50)

El reporte de Snyk muestra que no se detectaron vulnerabilidades conocidas en las dependencias escaneadas dentro del proyecto analizado. Esto indica que las bibliotecas utilizadas actualmente no presentan riesgos de seguridad según la base de datos de vulnerabilidades de Snyk, lo que es una señal positiva en términos de seguridad para las dependencias externas del proyecto.

Análisis de la Aplicación con Semgrep

![image](https://github.com/user-attachments/assets/26fc401e-1624-4f64-be05-93396639cfb7)

![image](https://github.com/user-attachments/assets/428b807c-c12c-4a7c-b6fd-39a8445ee6e9)

## Semgrep Reporte

![image](https://github.com/user-attachments/assets/62b5fb8e-f88d-4e00-ad2c-dc81ca43db4c)

El reporte de Semgrep identifica varias advertencias relacionadas con problemas de seguridad, en su mayoría vinculadas a la falta de validación de tokens anti-CSRF en métodos clave del controlador OperacionesPDFController. También se detectan problemas de configuración y advertencias sobre validaciones insuficientes, clasificadas con niveles de gravedad baja a media. 

7.1.   Tecnología de información 

  **SonarQube**: Es una herramienta de análisis estático de código que permite revisar automáticamente la calidad del código fuente de la aplicación. SonarQube analiza la base de código y genera reportes sobre posibles errores, vulnerabilidades, deuda técnica, código duplicado y áreas donde se pueden aplicar mejoras. Además, realiza un seguimiento continuo de la calidad del código, integrándose con herramientas de CI/CD como GitHub Actions.
   
   **Snyk**: Snyk es una plataforma de seguridad que se enfoca en la gestión de vulnerabilidades en las dependencias y bibliotecas de código abierto. Durante el análisis, se identifican posibles vulnerabilidades en las dependencias de terceros, lo que permite corregir problemas de seguridad antes de que afecten la producción.

  **ASP.NET Core y C#**: El proyecto está desarrollado en ASP.NET Core utilizando el lenguaje de programación C#. Esto permite implementar una aplicación web robusta y escalable, con soporte para múltiples plataformas.

  **GitHub y GitHub Actions**: Se utilizó GitHub como sistema de control de versiones y plataforma de colaboración. GitHub Actions se empleó para la integración continua, ejecutando automáticamente los análisis de calidad del código con SonarQube y los análisis de seguridad con Snyk en cada push al repositorio.

  **MariaDB/MySQL**: Para la base de datos se utilizó MariaDB, que es una bifurcación de MySQL. Esta tecnología permitió gestionar el almacenamiento de datos de manera eficiente, con soporte para transacciones y consultas complejas.

7.2. Metodología, técnicas usadas
Para el desarrollo de la aplicación, se adoptaron diversas metodologías y técnicas que permitieron optimizar el flujo de trabajo y asegurar la calidad del producto final. Entre las principales metodologías y técnicas utilizadas se destacan:

   - **Desarrollo Ágil con GitHub Projects**: Se utilizó GitHub Projects para la planificación y gestión del trabajo en un entorno ágil. Las tareas se organizaron en tableros Kanban, permitiendo una visibilidad clara del progreso, asignación de tareas y establecimiento de prioridades. Cada tarea se vinculó con issues y pull requests dentro del repositorio, facilitando la colaboración y el seguimiento del avance de las funcionalidades.

  - **Integración Continua (CI)**: Se implementó un flujo de integración continua a través de GitHub Actions. Cada vez que se realizaba un cambio en el código (mediante un push o pull request), se ejecutaban pruebas automáticas, análisis de calidad con SonarQube y análisis de seguridad con Snyk, asegurando que el código estuviera siempre en condiciones óptimas para ser fusionado con la rama principal.

    - **Análisis Estático de Código**:
    
    - **SonarQube**: Para garantizar la calidad del código, se realizaron análisis estáticos con SonarQube, que permitió detectar errores, vulnerabilidades, duplicación de código y deuda técnica. Esto ayudó a mantener un código más limpio, eficiente y mantenible.
    
    - **Snyk**: Se utilizó Snyk para identificar vulnerabilidades en las dependencias de terceros, ofreciendo soluciones y actualizaciones a las bibliotecas vulnerables, mejorando la seguridad general de la aplicación.

8. Cronograma
   (personas, tiempo, otros recursos) Basado en las observaciones que la herramienta SonarQube les informara         sobre la aplicación, a fin de reducir la deuda tecnica, vulnerabilidades, fallas, etc. a 0.

9. Desarrollo de Solución de Mejora

9.1 Diagrama de Arquitectura de la aplicación

![image](https://github.com/user-attachments/assets/7c9f6c25-f6a4-4263-ba87-d4070bc088f0)

9.2. Diagrama de Clases de la aplicación

![image](https://github.com/user-attachments/assets/6e32b3d8-79d6-474d-a871-6adc216cc8a9)

9.3. Metodos de pruebas implementados para coberturar la aplicación

- Reporte de cobertura de pruebas

   Actualmente
  
   Pruebas Unitarias (cobertura de al menos 80% de codigo -  los metodos mas importantes)

   ![image](https://github.com/user-attachments/assets/e1df9c33-0755-4992-8c1b-a7fc9e769bfe)

La imagen nos muestra un reporte de pruebas unitarias donde se ha logrado una cobertura del 89.1% en el código, superando el umbral recomendado del 80%. Esto 
refleja un buen nivel de pruebas aplicadas a los métodos más importantes del sistema, lo que garantiza la validación de su funcionalidad. El análisis también 
destaca que no se encontraron problemas de seguridad ni duplicaciones de código, lo que contribuye a la mantenibilidad y confiabilidad del proyecto.

   ![image](https://github.com/user-attachments/assets/5adfcd3b-c054-4b8c-b7c2-158a3831c8e6)

   ![image](https://github.com/user-attachments/assets/c6d6c168-b26a-4a2d-a6b9-03ee408bad1b)

   ![image](https://github.com/user-attachments/assets/1625a7e3-1552-44c5-b271-0d6e0179c59a)

Se detectó un problema en la organización del código, donde una interfaz no estaba ubicada en el namespace adecuado, lo que afectaba la mantenibilidad del 
proyecto. Para solucionarlo, se movió la interfaz a un namespace más apropiado, mejorando la estructura y modularidad del código. Esta corrección hace que el 
código sea más organizado y esté alineado con las buenas prácticas de desarrollo.

   ![image](https://github.com/user-attachments/assets/b9d7db88-6e9e-48a9-872d-e6e77308660d)

   ![image](https://github.com/user-attachments/assets/01b87c2f-518e-4dda-9480-69b56d7a20b0)

Se identificó un problema de consistencia en la organización de las pruebas, ya que la clase DetalleSuscripcionRepositoryTests no estaba correctamente declarada en un namespace adecuado, lo que afectaba la claridad y mantenibilidad del código. Para solucionar esto, se corrigió el problema ubicando la clase en el namespace correspondiente, NegocioPDF.Tests, y se configuraron los datos de prueba y las dependencias con un contexto en memoria. Esta mejora asegura que las pruebas sean más modulares y sigan las mejores prácticas para mantener una estructura clara y bien organizada en el proyecto.

   ![image](https://github.com/user-attachments/assets/f7fa2ab4-698b-41a7-82f4-86b7a41d0ff3)

   ![image](https://github.com/user-attachments/assets/2c96f4f1-0830-47bc-aa13-ae169bf12b9c)

El análisis estático detectó un problema de anulabilidad en el método ObtenerUsuarioPorId dentro del repositorio UsuarioRepository, ya que el tipo de retorno no manejaba adecuadamente los valores nulos. Para solucionarlo, se corrigió el método añadiendo una excepción InvalidOperationException en caso de que no se encuentre el usuario correspondiente. Esta mejora garantiza que el método maneje correctamente los casos sin coincidencias, lo que mejora la confiabilidad y claridad del código.

   ![image](https://github.com/user-attachments/assets/fef6f6ba-aaae-4afd-95e8-876624a79214)

   ![image](https://github.com/user-attachments/assets/711acbb0-9da8-4b7c-8de2-4e28b0dd2799)

El análisis estático señala un problema de anulabilidad en el método ObtenerUsuarioPorId dentro del repositorio UsuarioRepository, indicando que el tipo de retorno no maneja adecuadamente los valores nulos. Para corregirlo, se modificó el método añadiendo una excepción InvalidOperationException si no se encuentra el usuario correspondiente. Esta solución asegura que el método maneje correctamente los casos sin coincidencias, mejorando la confiabilidad y claridad del código.

   ![image](https://github.com/user-attachments/assets/1cf8d2d9-1c9b-405c-82b0-5f80516672a6)

   ![image](https://github.com/user-attachments/assets/c0a3ae36-8ba5-4898-977e-5cd0492d4656)

El análisis estático destaca un problema en el método ActualizarSuscripcion, donde se utiliza System.Exception, lo cual no es recomendable porque dificulta la identificación precisa de los errores. La corrección realizada consistió en reemplazar System.Exception con InvalidOperationException, una excepción más específica. Esto mejora la claridad y mantenibilidad del código, proporcionando un mensaje más claro cuando no se encuentra una suscripción para actualizar. Esta práctica sigue las mejores recomendaciones para el manejo de errores en aplicaciones robustas.

   ![image](https://github.com/user-attachments/assets/34bee983-d0f7-4d94-bf04-7e11c6381bf7)

   ![image](https://github.com/user-attachments/assets/c13373f5-984e-4ccf-94d7-b315f563b930)

El análisis estático señala un problema de consistencia debido a la ausencia de un namespace definido, lo que afecta la mantenibilidad del código. La corrección realizada consistió en incluir el archivo dentro del namespace NegocioPDF.Tests, alineando la clase con las mejores prácticas de organización. Esto mejora la claridad del proyecto al agrupar correctamente las clases de prueba según su módulo correspondiente.

   Pruebas de integración utilizando Mocks o Fake Classes

   ![image](https://github.com/user-attachments/assets/24797d8f-271e-4ba6-8622-5e0fceb3e15b)

   El reporte destaca una cobertura del 89% en líneas de código y del 88% en ramas, lo que indica un alto nivel de pruebas realizadas sobre el código base. 
   Esto incluye detalles de los módulos cubiertos, con porcentajes individuales para líneas y ramas, mostrando áreas bien probadas y algunas con margen de 
   mejora.

- Reporte de Pruebas guiadas por el comportamiento (BDD Given When Then)

   Pruebas de aceptación basadas en Desarrollo Guiado por el Comportamiento una por cada caso de uso o historia de usuario.

   ![image](https://github.com/user-attachments/assets/ec46ca1d-953c-4d5d-89b1-f7eff1b0f323)

   ![image](https://github.com/user-attachments/assets/2177240a-d004-41c2-9374-901d2631e057)

   ![image](https://github.com/user-attachments/assets/d29d5d8e-f105-4b10-93a6-9c02f12d8d83)

  El reporte muestra pruebas guiadas por el comportamiento (BDD) utilizando el formato Given-When-Then, específicamente para el caso de uso de inicio de 
  sesión. Cada prueba representa un escenario distinto basado en una historia de usuario: un inicio de sesión exitoso, un intento fallido por credenciales 
  inválidas y otro fallido por un correo vacío. Esto asegura que las funcionalidades clave se validen según las expectativas del usuario y los criterios de 
  aceptación.
  
- Reporte de Pruebas mutantes

   Pruebas mutantes para ver todas las posibles pruebas.

   Informe - Pruebas con mutaciones

   ![image](https://github.com/user-attachments/assets/15b85b30-9bdb-4c71-bed7-06bfc1d2348e)

   ![image](https://github.com/user-attachments/assets/c59b2d6a-a35a-42f1-b9d3-df304c4cccb7)

   ![image](https://github.com/user-attachments/assets/8793aaf1-384d-4a74-9d7e-195cbec528a7)

   El análisis indica qué partes del código están bien cubiertas por pruebas y cuáles necesitan mayor atención, ayudando a fortalecer el conjunto de pruebas. 
  
   Reporte de Stryker.NET - Análisis de Pruebas Mutantes

   Barra Superior Colorida
- Verde (82): Mutantes eliminados (¡Bueno!)
- Rojo (27): Mutantes sobrevivieron (¡Malo!)
- Naranja (25)**: Sin cobertura

   Columnas Principales
 1. Mutation Score
- Of total: 61.19% - Porcentaje general de mutantes eliminados
- Of covered: 75.23% - Porcentaje de mutantes eliminados en código cubierto por pruebas

 2. Estado de los Mutantes
- Killed (82): Mutantes que tus pruebas detectaron y fallaron (¡Bueno!)
- Survived (27): Mutantes que tus pruebas no detectaron (¡Malo!)
- No coverage (25): Código sin pruebas unitarias
- Ignored (105): Mutantes que se ignoraron

 Análisis por Carpetas
- Data/PDFSolutionsContext.cs: 34.38% de efectividad
- Migrations: 0% (Normal, no se suelen probar)
- Models: N/A
- Repositories: 80.68% (Bastante bueno)

Reporte de Pruebas de interfaz de usuario

Pruebas (al menos 3 completas) incluir el video generado de forma automatizada por el framework

[video_1.webm](https://github.com/user-attachments/assets/40ad6cfb-b6f2-427b-8a7c-fc5d852765ae)

Se ingresa el correo y contraseña , iniciamos sesion y se muestra la interfaz de bienvenida 

[video_2.webm](https://github.com/user-attachments/assets/4acbbbc6-ebb9-4a6a-92dd-6850fdd04439)

Se aprecia como se ingresan los datos de nombre de usuario , correo y contraseña , le damos a registrarse y se nos muestra un mensaje de confirmación y se nos mostrara un boton para regresar al login 

[video_3.webm](https://github.com/user-attachments/assets/33e2e998-1436-4717-a177-c1f68fc484d1)

Si se ingresa un correo o contraseña incorrectos se nos mostrara un mensaje de error 

[video_4.webm](https://github.com/user-attachments/assets/f494f317-d15e-4ec9-8e7c-7970aef15b8b)

Iniciamos sesion , se nos mostrara la interfaz principal de bienvenida con su tupo de suscripcion cantidad de operaciones realizadas y podremos tener la suscribcion premiun 

Bibliografias: 

- Semgrep | Homepage. (s. f.). Semgrep. 
- Datadog. (2016, 14 julio). DataDog Code Monitoring | DataDog. Datadog. 
- Snyk. (s. f.). Developer security | Snyk. 


### Enlace Video: https://youtu.be/lynQ_9OPM3c"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u3-tg4melenhurtachinolopezbricecuadr,proyecto,si885-2024-ii-u3-tg4melenhurtachinolopezbricecuadr,True,1607,True,5,False,False,False,"# Proyecto: Dashboard de Detección Temprana de Abandono Estudiantil


<table align=""center"">
    <p align=""center"">
        INTEGRANTES
    </p>
  <tr>
    <th>Nombre</th>
    <th>Código</th>
  </tr>
  <tr>
    <td>Melendez Huarachi, Gabriel Fari</td>
    <td>2021070311</td>
  </tr>
  <tr>
    <td>Lopez Catunta, Brayar Christian</td>
    <td>2020068946</td>
  </tr>
  <tr>
    <td>Briceño Diaz, Jorge Luis</td>
    <td>2017059611</td>
  </tr>
  <tr>
    <td>Cuadros Garcia, Mirian</td>
    <td>2021071083</td>
  </tr>
  <tr>
    <td>Hurtado Ortiz, Leandro</td>
    <td>2015052384</td>
  </tr>
  <tr>
    <td>Chino Rivera, Angel Alessandro</td>
    <td>2021069830</td>
  </tr>
</table>

### Enlace de YouTube: 
https://youtu.be/yNKa55FB0j0 <br>
[Video del Proyecto](https://youtu.be/yNKa55FB0j0)

### Descripción
Este proyecto tiene como objetivo desarrollar un **Dashboard de Detección Temprana de Abandono Estudiantil** para el área de tutoría de **EPIS UPT**. Se busca proporcionar herramientas analíticas que ayuden a identificar a los estudiantes en riesgo de abandono y a implementar medidas preventivas eficaces.

### Curso
**Inteligencia de Negocios**

### Docente
**Ing. Cuadros Quiroga, Patrick José**

### Enlace Dashboard:
https://app.powerbi.com/links/-6iWQRhE94?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=07bc8e79-f8a7-4f72-acec-135230fe8a64 <br>
[Dashboard de Detección Temprana de Abandono Estudiantil](https://app.powerbi.com/links/-6iWQRhE94?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=07bc8e79-f8a7-4f72-acec-135230fe8a64)"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u3-tapia_ayma_poma,proyecto,si784-2024-ii-u3-tapia_ayma_poma,True,2097,False,11,True,False,False,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17291244)
# proyecto-formatos-02

<div align=""center"">
## Desarrollo de un Sistema de Gestión de Tareas y Notificaciones Personalizadas para la Mejora de la Productividad

**INTEGRANTES**  
**Erick Ayma Choque**  
**Fabiola Poma Machicado**  
**Dylan Tapia Vargas**

---

## Descripción del Proyecto


---

## 💻 Tecnologías Utilizadas
![CSS3](https://img.shields.io/badge/css3-%231572B6.svg?style=for-the-badge&logo=css3&logoColor=white)  
![HTML5](https://img.shields.io/badge/html5-%23E34F26.svg?style=for-the-badge&logo=html5&logoColor=white)  
![MySQL](https://img.shields.io/badge/mysql-4479A1.svg?style=for-the-badge&logo=mysql&logoColor=white)  
![PHP](https://img.shields.io/badge/php-%23777BB4.svg?style=for-the-badge&logo=php&logoColor=white)  
![JavaScript](https://img.shields.io/badge/javascript-%23323330.svg?style=for-the-badge&logo=javascript&logoColor=%23F7DF1E)  

---

## Funcionalidades Principales.

## Package :https://packagist.org/packages/thegoat/project?query=thegoat%2Fproject

## Diagrama de casos de uso
![Diagrama de Arquitectura](diagramas/casosdeuso.jpg)

## Diagrama de Arquitectura
![Diagrama de Arquitectura](diagramas/arquitectura.jpg)

## Diagrama de clases
![Diagrama de Arquitectura](diagramas/clases.jpg)

## Diagrama de paquetes
![Diagrama de Arquitectura](diagramas/paquetes.jpg)

## Diagrama de despliegue
![Diagrama de Arquitectura](diagramas/despliegue.jpg)

## Diagrama de Secuencia
![Diagrama de Arquitectura](diagramas/a.jpg)
![Diagrama de Arquitectura](diagramas/b.jpg)
![Diagrama de Arquitectura](diagramas/c.jpg)
![Diagrama de Arquitectura](diagramas/d.jpg)
![Diagrama de Arquitectura](diagramas/e.jpg)
![Diagrama de Arquitectura](diagramas/f.jpg)
![Diagrama de Arquitectura](diagramas/g.jpg)
![Diagrama de Arquitectura](diagramas/h.jpg)
![Diagrama de Arquitectura](diagramas/i.jpg)
</div>"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u3-floresq_leyva_chambi,proyecto,si784-2024-ii-u3-floresq_leyva_chambi,True,4987,True,7,True,True,True,"# 🚀 Proyecto Casa de cambio en línea
![Banner del Proyecto](https://i.ibb.co/m5HMZH5/asd.jpg)

## 👥 Equipo de Desarrollo

| <img src=""https://github.com/elvisleyva49.png"" width=""100"" style=""border-radius:50%""/> | <img src=""https://github.com/jf2021070309.png"" width=""100"" style=""border-radius:50%""/> | <img src=""https://i.pinimg.com/236x/f5/f7/52/f5f75210890fe7da36fb85d162c759e8.jpg"" width=""100"" style=""border-radius:50%""/> |
|:---------------------------------------------------------------------------------:|:---------------------------------------------------------------------------------:|:---------------------------------------------------------------------------------:|
| **Elvis Ronald Leyva Sardon** | **Jaime Elias Flores Quispe** | **Jerson Roni Chambi Cori** |

## 🛠️ Tecnologías Utilizadas

### Lenguajes de Programación
<div style=""display: flex; gap: 10px;"">
  <div style=""flex: 82.4"">
    <img src=""https://img.shields.io/badge/Python-82.4%25-3776AB?style=for-the-badge&logo=python&logoColor=white""/>
  </div>
  <div style=""flex: 14.8"">
    <img src=""https://img.shields.io/badge/HTML-14.8%25-E34F26?style=for-the-badge&logo=html5&logoColor=white""/>
  </div>
  <div style=""flex: 2.0"">
    <img src=""https://img.shields.io/badge/CSS-2.0%25-1572B6?style=for-the-badge&logo=css3&logoColor=white""/>
  </div>
  <div style=""flex: 0.5"">
    <img src=""https://img.shields.io/badge/JavaScript-0.5%25-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black""/>
  </div>
  <div style=""flex: 0.2"">
    <img src=""https://img.shields.io/badge/PowerShell-0.2%25-5391FE?style=for-the-badge&logo=powershell&logoColor=white""/>
  </div>
  <div style=""flex: 0.1"">
    <img src=""https://img.shields.io/badge/C-0.1%25-A8B9CC?style=for-the-badge&logo=c&logoColor=white""/>
  </div>
</div>

### 🔧 Frameworks y Herramientas de Calidad

<table>
  <tr>
    <td align=""center"">
      <a href=""https://www.sonarqube.org/"">
        <img src=""https://assets-eu-01.kc-usercontent.com/f42196a6-70a1-01d0-99f1-43134f12a58b/8e59bcad-6e39-41dc-abd9-a0e251e8d63f/Sonar%20%282%29.svg?w=160&h=40&auto=format&fit=crop"" width=""100""/>
        <br>SonarQube
      </a>
    </td>
    <td align=""center"">
      <a href=""https://snyk.io/"">
        <img src=""https://res.cloudinary.com/snyk/image/upload/v1537345894/press-kit/brand/logo-black.png"" width=""100""/>
        <br>Snyk
      </a>
    </td>
    <td align=""center"">
      <a href=""https://semgrep.dev/"">
        <img src=""https://semgrep.dev/logo.png"" width=""100""/>
        <br>Semgrep
      </a>
    </td>
  </tr>
</table>

### 🧪 Testing Frameworks

<table>
  <tr>
    <td align=""center"">
      <a href=""https://docs.pytest.org/"">
        <img src=""https://docs.pytest.org/en/stable/_static/pytest1.png"" width=""100""/>
        <br>Pytest
        <br><i>Pruebas Unitarias</i>
      </a>
    </td>
    <td align=""center"">
      <a href=""https://mutmut.readthedocs.io/"">
        <img src=""https://i.ibb.co/V2Dg3zL/Presentaci-n-proyecto-de-tecnolog-a-gradient-tecnol-gico-azul-oscuro-1920-x-500-px-910-x-500-px-910.png"" width=""100""/>
        <br>Mutmut
        <br><i>Pruebas Mutantes</i>
      </a>
    </td>
    <td align=""center"">
      <a href=""https://docs.qameta.io/allure/"">
        <img src=""https://i.ibb.co/GRgNXTJ/Presentaci-n-proyecto-de-tecnolog-a-gradient-tecnol-gico-azul-oscuro-1920-x-500-px-910-x-500-px-910.png"" width=""100""/>
        <br>Allure
        <br><i>BDD Testing</i>
      </a>
    </td>
    <td align=""center"">
      <a href=""https://playwright.dev/"">
        <img src=""https://playwright.dev/img/playwright-logo.svg"" width=""100""/>
        <br>Playwright
        <br><i>UI Testing</i>
      </a>
    </td>
  </tr>
</table>

## 📊 Dashboards de Calidad

- 🔍 [Dashboard de SonarQube](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/htmlcov/index.html)
- 🛡️ [Reporte de Vulnerabilidades Snyk](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/reporte-snyk.html)
- 📝 [Análisis de Semgrep](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/reporte-semgrep.html)
- 🧪 [Reporte de Pruebas Unitarias](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/report-unit/index.html)
- 🧬 [Reporte de Pruebas Mutantes](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/reporte-mutantes/index.html)
- 📈 [Reporte de Allure](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/allure-report/index.html)
- 🖥️ [Reporte de Playwright](https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva/playwright-report/index.html)

## 🚀 Comenzando

```bash
# Clonar el repositorio
git clone https://github.com/UPT-FAING-EPIS/proyecto-si784-2024-ii-u2-chambi_floresq_floresm_leyva.git

# Instalar dependencias
pip install -r requirements.txt

# Ejecutar pruebas
pytest

# Ejecutar pruebas mutantes
mutmut run"
UPT-FAING-EPIS/proyecto-si784-2024-ii-u3-hernandez_contreras_paja,proyecto,si784-2024-ii-u3-hernandez_contreras_paja,True,1492,False,1,True,False,False,"](https://classroom.github.com/a/-i7BWR5S)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17274511)
# proyecto-formatos-02

Link YT: https://www.youtube.com/watch?v=osCPlj5f1-0

## **CONTROL ASISTENCIA**

Link reporte de cobertura:
https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/index.html

Link reporte de mutaciones: 
https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/mutation-report.html

Link reporte de aceptacion:
https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/LivingDocReport.html

Link reporte de Snyk:
https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/container-test-result.html

Link reporte de Semgrep:
https://upt-faing-epis.github.io/proyecto-si784-2024-ii-u3-hernandez_contreras_paja/semgrep-report.html

El proyecto de Sistema de Control de Asistencia tiene como objetivo implementar una solución informática que permita gestionar y controlar de manera eficiente la asistencia de empleados o estudiantes en un determinado contexto, como una empresa, institución educativa o cualquier otro entorno donde sea necesario llevar un registro preciso de la asistencia. Integrantes:

* Alvaro Javier Contres Lipa
* Angel Gadiel Hernandez Cruz
* Piero Alexander Paja de la Cruz"
UPT-FAING-EPIS/proyecto-si885-2024-ii-u3-tgmezaquispelunamamanihernandez,proyecto,si885-2024-ii-u3-tgmezaquispelunamamanihernandez,True,341,False,0,True,False,False,"](https://classroom.github.com/a/OKCDjH9I)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17524025)
# proyecto-formatos-01
Link YT:https://www.youtube.com/watch?v=sUQ_cSFbIRg"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u2-codigo-apk,proyecto,si8811b-2024-ii-u2-codigo-apk,True,246,False,0,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17564147)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si8811b-2024-ii-u2-frontendweb,proyecto,si8811b-2024-ii-u2-frontendweb,True,246,False,0,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17567242)
# proyecto-formatos-01"
UPT-FAING-EPIS/si982_2024-rec-proyecto_si982_2024-rec-u1-proyecto-formatos-01,si982_2024,rec-proyecto_si982_2024-rec-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-llantay_soto,proyecto,si982-2024-rec-u1-llantay_soto,True,3059,False,2,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17612384)
# proyecto-formato-01
# Casos de Uso
## Iniciar Sesion
![iniciar ssion](https://github.com/user-attachments/assets/8a9112ad-05af-4541-92f1-046627e626eb)

## Registrar Usuario
![web02](https://github.com/user-attachments/assets/3fcd4131-811b-4dac-ad92-6af0a24d038c)

-Recuperar COntraseña
![restablecer contraseña](https://github.com/user-attachments/assets/abd848c8-1ef0-43f6-9605-63557bc9d493)

-Buscar Ofertas de Trabajo
![buscar ofertas de trabajo](https://github.com/user-attachments/assets/cd5e2854-f99f-4af4-9d10-210ee356de06)

-Cerrar Sesion
![cerrar sesion](https://github.com/user-attachments/assets/fb603e46-a849-4d5b-87ae-ada2d98decf0)

-Editar Informacion
![editar informacion de la oferta](https://github.com/user-attachments/assets/7f8c57bb-35c3-47a7-923e-53b5703b20a2)

-Mensaje de Error de Inicio de Sesion
![mnsaje de error de inicio de sesion](https://github.com/user-attachments/assets/c0f04d3b-719d-438d-9d6d-4237ed76e31c)

-Filtrar Ofertas por Ubicacion
![filtrar ofertas por ubicacion](https://github.com/user-attachments/assets/16471efc-5d4a-4fc2-9b06-d055ca3a43c4)

-Subir Archivos
![subir archivos](https://github.com/user-attachments/assets/c655b279-d066-422d-8f60-8bbc34ab6512)

-Ver Perfil de la Empresa
![ver erfil de la empresa](https://github.com/user-attachments/assets/e3671fe9-eb5b-4a1c-ac86-63746c804cd0)

-Administrar Ofertas de Empleo
![administrar oferta](https://github.com/user-attachments/assets/74773cf9-2be7-4007-9d20-ed10091c9395)


Diagramas de Secuencia
-Iniciar Sesion
![iniciar sesion](https://github.com/user-attachments/assets/c7380545-e9d4-4a9e-9ff2-a1e45487bf15)
-Recuperar Contraseña
![recuperar contraseña](https://github.com/user-attachments/assets/99d59982-0824-4167-897f-459d66109f78)
-Buscar Ofertas de Trabajo
![buscar ofertas](https://github.com/user-attachments/assets/dbd9a746-f2f4-4ddc-b14b-99157dcefdfb)
-Cerrar Sesion
![cerrar sesion](https://github.com/user-attachments/assets/8cca4f31-26f2-49ab-adbd-e75f0b7817d3)
-Editar Informacion
![editar informacion](https://github.com/user-attachments/assets/d9faf5cf-1130-46b0-861d-bbddf9c52234)
-Mensaje de error en Inicio de Sesion
![error en inicio de seson](https://github.com/user-attachments/assets/1884dc92-fad4-4fa0-a52c-17a1cae3bb34)
-Filtrar Ofertas por Ubicacion
![filtrar ofertas por ubicacion](https://github.com/user-attachments/assets/f8b80fd9-f03e-4f48-a244-e8283edbcb99)
-Subir Archivos
![subir archivos](https://github.com/user-attachments/assets/eec9ecbb-e10c-4eb3-bc56-b3a2d104ea6f)
-Ver Perfil de la Empresa
![ver perfil de la empresa](https://github.com/user-attachments/assets/83f71183-c1fa-4248-9736-2a77592cd819)
-Administrar Ofertas de Empleo
![administrar ofertas e de empleo](https://github.com/user-attachments/assets/ab4daffd-6775-4077-9c15-80f4eabac130)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-valverde-lizarraga,proyecto,si982-2024-rec-u1-valverde-lizarraga,True,402,False,1,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17612975)
# Sistema de Gestión de Reservas de Aulas y Laboratorios Universitarios

## Diagramas de casos de uso y secuencias en la rama ""Develop"""
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-salinas-condori,proyecto,si982-2024-rec-u1-salinas-condori,True,35155,False,80,False,True,False,"<h1 style=""text-align: center;"">CASOS DE USO</h1>

### Caso de Uso: Registro de Usuario 

```mermaid
graph TB
    A[Visitante] --> B[Registrarse en Loopify]
    B --> C[Acceder a funcionalidades según rol]
```

### Diagrama de Secuencia: Acceso al Formulario de Registro

```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Acceder al formulario de registro
    Sistema-->>Visitante: Mostrar formulario de registro
    Visitante->>Sistema: Completar los campos (nombre, correo y contraseña)
    Sistema-->>Visitante: Validar campos obligatorios
    Sistema-->>Visitante: Permitir continuar si los campos son válidos
```

### Diagrama de Secuencia: Asignación de Rol de Cliente

```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Completar registro
    Sistema-->>Cliente: Asignar rol de cliente automáticamente
    Sistema-->>Cliente: Confirmar registro exitoso
```

### Diagrama de Secuencia: Creación de Cuenta por Administrador

```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant Administrador

    Vendedor->>Sistema: Completar registro
    Sistema-->>Administrador: Notificar creación de cuenta pendiente
    Administrador->>Sistema: Aprobar o rechazar la cuenta
    Sistema-->>Vendedor: Notificar estado de la cuenta
```

### Diagrama de Secuencia: Validación de Correo Único

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro con correo
    Sistema-->>Sistema: Validar si el correo ya está registrado
    alt Correo no único
        Sistema-->>Usuario: Mostrar mensaje de error
    else Correo único
        Sistema-->>Usuario: Continuar con el registro
    end
```

### Diagrama de Secuencia: Mensaje de Confirmación de Registro

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro exitosamente
    Sistema-->>Usuario: Mostrar mensaje de confirmación
```

### Diagrama de Secuencia: Tiempo de Carga del Formulario

```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Acceder al formulario de registro
    Sistema-->>Visitante: Mostrar formulario en menos de 2 segundos
```

### Diagrama de Secuencia: Cifrado de Contraseña

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro con contraseña
    Sistema-->>Sistema: Cifrar contraseña
    Sistema-->>Usuario: Confirmar registro exitoso
```


### Caso de Uso: Inicio de Sesion 

```mermaid
graph TB
    A[Usuario registrado] --> B[Acceder al formulario de inicio de sesión]
    B --> C[Ingresar credenciales]
    C --> D[Validar credenciales]
    D --> E{¿Credenciales válidas?}
    E -- No --> F[Mostrar mensaje de error]
    E -- Sí --> G[Acceder a la cuenta según el rol] 
```

### Diagrama de Secuencia: Campos de Inicio de Sesión

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Acceder al formulario de inicio de sesión
    Sistema-->>Usuario: Mostrar campos para correo y contraseña
```

### Diagrama de Secuencia: Mensaje de Error por Credenciales Incorrectas

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intentar iniciar sesión con credenciales incorrectas
    Sistema-->>Sistema: Validar credenciales
    Sistema-->>Usuario: Mostrar mensaje de error claro
```

### Diagrama de Secuencia: Redirección según Rol

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Iniciar sesión con credenciales correctas
    Sistema-->>Sistema: Verificar rol del usuario
    Sistema-->>Usuario: Redirigir según rol (ej. cliente, vendedor, administrador)
```

### Diagrama de Secuencia: Redirección para Administrador

```mermaid
sequenceDiagram
    participant Administrador
    participant Sistema

    Administrador->>Sistema: Iniciar sesión
    Sistema-->>Sistema: Verificar rol de administrador
    Sistema-->>Administrador: Redirigir a la vista de gestión de vendedores y negocios
```

### Diagrama de Secuencia: Recuperación de Contraseña

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Solicitar recuperación de contraseña
    Sistema-->>Usuario: Enviar correo con enlace para restablecer contraseña
```

### Diagrama de Secuencia: Inicio de Sesión en Menos de 3 Segundos

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intentar iniciar sesión
    Sistema-->>Sistema: Validar credenciales
    Sistema-->>Usuario: Completar el inicio de sesión en menos de 3 segundos
```

### Diagrama de Secuencia: Expiración de Sesión por Inactividad

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Estar inactivo durante 30 minutos
    Sistema-->>Sistema: Detectar inactividad
    Sistema-->>Usuario: Expirar sesión automáticamente
```

### Caso de Uso: Gestion de Vendedores 

```mermaid
graph TB
    A[Administrador] --> B[Crear cuenta de vendedor]
    A --> C[Editar cuenta de vendedor]
    A --> D[Eliminar cuenta de vendedor]
    B --> E[Cuenta creada correctamente]
    C --> F[Cambios guardados correctamente]
    D --> G[Cuenta eliminada correctamente]
```

### Diagrama de secuencia: Opciones para editar y eliminar vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores
    Sistema->>Usuario: Muestra lista con opciones de editar y eliminar
```

### Diagrama de secuencia: Eliminar un vendedor y sus negocios y productos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Selecciona eliminar vendedor
    Sistema->>Usuario: Confirma eliminación
    Usuario->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Eliminar vendedor, negocios y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Usuario: Muestra mensaje de éxito
```

### Diagrama de secuencia: Asignar un negocio al vendedor al crear uno nuevo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Crea nuevo vendedor
    Sistema->>Usuario: Solicita información del vendedor
    Usuario->>Sistema: Completa información
    Sistema->>Usuario: Solicita asignar un negocio
    Usuario->>Sistema: Asigna negocio
    Sistema->>BaseDatos: Guardar nuevo vendedor con negocio asignado
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
```

### Diagrama de secuencia: Validación de datos al registrar o actualizar vendedor
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Intenta guardar vendedor
    Sistema->>Sistema: Valida datos (nombre, correo, teléfono)
    Sistema-->>Usuario: Datos válidos
    Sistema->>BaseDatos: Guardar datos del vendedor
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
    Sistema-->>Usuario: Muestra mensaje de error si los datos no son válidos
```

### Diagrama de secuencia: Vendedor eliminado no aparece en la lista
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores (sin el eliminado)
    Sistema->>Usuario: Muestra lista actualizada
```

### Diagrama de secuencia: Buscar vendedor específico por nombre o correo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Inicia búsqueda por nombre o correo
    Sistema->>BaseDatos: Buscar vendedor por nombre o correo
    BaseDatos-->>Sistema: Resultados de búsqueda
    Sistema->>Usuario: Muestra resultados de búsqueda
```

### Diagrama de secuencia: Reflejo en tiempo real de cambios en la lista de vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Realiza cambio (crear, editar o eliminar vendedor)
    Sistema->>BaseDatos: Confirma cambio en la base de datos
    BaseDatos-->>Sistema: Confirmación de cambio
    Sistema->>Usuario: Muestra lista de vendedores actualizada en menos de 5 segundos
```

### Caso de Uso: Gestión de negocios
```mermaid
graph TB
    A[Vendedor] --> B[Crear negocio]
    A --> C[Editar negocio]
    A --> D[Eliminar negocio]
    B --> E[Negocio creado correctamente]
    C --> F[Cambios guardados correctamente]
    D --> G[Negocio eliminado correctamente]
```



### Diagrama de secuencia: Registrar o editar un negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario para registrar/editar negocio
    Sistema->>Vendedor: Muestra campos para ingresar nombre, descripción y logo
    Vendedor->>Sistema: Ingresa la información del negocio
    Sistema->>BaseDatos: Guarda la información del negocio
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Guardar cambios en la información del negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Realiza cambios en la información del negocio
    Sistema->>BaseDatos: Guarda los cambios realizados
    BaseDatos-->>Sistema: Confirmación de actualización
    Sistema->>Vendedor: Muestra mensaje de éxito
    Sistema->>Vendedor: Actualiza la vista con la nueva información
```

### Diagrama de secuencia: Eliminar un negocio y sus productos asociados
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Selecciona eliminar un negocio
    Sistema->>Vendedor: Pide confirmación de eliminación
    Vendedor->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Elimina el negocio y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Acceder y editar/eliminar solo negocios propios
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios del vendedor
    BaseDatos-->>Sistema: Negocios del vendedor
    Vendedor->>Sistema: Selecciona un negocio que le pertenece
    Sistema->>Vendedor: Muestra opciones de editar y eliminar
    Vendedor->>Sistema: Edita o elimina su negocio
    Sistema->>BaseDatos: Guarda los cambios o elimina el negocio
    BaseDatos-->>Sistema: Confirmación de cambio/eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Ver solo negocios activos como cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta todos los negocios activos
    BaseDatos-->>Sistema: Lista de negocios activos
    Sistema->>Cliente: Muestra los negocios activos
```

### Diagrama de secuencia: Carga de imagen de logo en menos de 3 segundos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Subir logo del negocio
    Sistema->>Sistema: Procesar la carga de la imagen
    Sistema-->>Vendedor: Confirmación de carga completada en menos de 3 segundos
```

### Diagrama de secuencia: Subir logo de hasta 5 MB
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Selecciona imagen de logo
    Sistema->>Sistema: Verifica tamaño de la imagen
    alt Si la imagen es válida (menos de 5 MB)
        Sistema->>Vendedor: Procesar carga de logo
        Sistema-->>Vendedor: Confirma carga completada
    else Si la imagen es mayor de 5 MB
        Sistema->>Vendedor: Muestra error ""Tamaño de imagen demasiado grande""
    end
```

### Caso de Uso: Publicación de productos
```mermaid
graph TB
    A[Vendedor] --> B[Agregar producto con descuento]
    B --> C[Producto agregado al negocio]
    C --> D[Producto visible para clientes]
```

### Diagrama de secuencia: Publicar un nuevo producto
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario de publicación
    Sistema->>Vendedor: Muestra campos para nombre, descripción, precio, descuento y fecha de vencimiento
    Vendedor->>Sistema: Completa la información del producto
    Sistema->>BaseDatos: Guarda la información del producto
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: No permitir guardar producto sin negocio asociado
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Intenta guardar un nuevo producto
    Sistema->>BaseDatos: Verifica si el producto tiene un negocio asociado
    alt Si no hay negocio asociado
        Sistema->>Vendedor: Muestra mensaje de error ""No hay negocio asociado""
    else Si hay negocio asociado
        Sistema->>BaseDatos: Guarda el producto
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

### Diagrama de secuencia: Descuento mayor al 90%
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Ingresa un valor de descuento para el producto
    Sistema->>Sistema: Verifica si el descuento supera el 90%
    alt Si el descuento es mayor al 90%
        Sistema->>Vendedor: Muestra mensaje de error ""Descuento no puede superar el 90%""
    else Si el descuento es válido
        Sistema->>BaseDatos: Guarda el producto con el descuento
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

### Diagrama de secuencia: Ordenar productos por proximidad de vencimiento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de productos
    Sistema->>BaseDatos: Obtiene productos con fecha de vencimiento
    BaseDatos-->>Sistema: Lista de productos con fecha de vencimiento
    Sistema->>Sistema: Ordena productos por proximidad de vencimiento
    Sistema->>Cliente: Muestra lista ordenada con productos más cercanos a vencer primero
```

### Diagrama de secuencia: Ver precio original y con descuento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Visualiza producto con descuento
    Sistema->>Cliente: Muestra precio original y precio con descuento aplicado
    Sistema-->>Cliente: Muestra los dos precios (original y con descuento)
```

### Diagrama de secuencia: Tiempo de carga del formulario de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Accede al formulario de productos
    Sistema->>Sistema: Carga formulario de publicación
    alt Si el tiempo de carga es menor o igual a 2 segundos
        Sistema->>Vendedor: Muestra el formulario correctamente
    else Si el tiempo de carga supera los 2 segundos
        Sistema->>Vendedor: Muestra mensaje de error de carga lenta
    end
```

### Diagrama de secuencia: Procesamiento de imágenes de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Sube imagen del producto
    Sistema->>Sistema: Procesa la imagen
    Sistema->>Sistema: Comprime la imagen sin pérdida de calidad
    Sistema-->>Vendedor: Confirma carga y compresión de la imagen
```

### Caso de Uso: Recuperacion de contraseña 
```mermaid
graph TB
    A[Usuario registrado] --> B[Solicitar recuperación de contraseña]
    B --> C[Ingresar correo asociado a la cuenta]
    C --> D[Validar correo]
    D --> E{¿Correo válido?}
    E -- No --> F[Mostrar mensaje de error]
    E -- Sí --> G[Enviar enlace de recuperación]
    G --> H[Acceder a la página para restablecer contraseña]
    H --> I[Restablecer contraseña]
    I --> J[Contraseña restablecida correctamente]
```

### Diagrama de secuencia: Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

### Diagrama de secuencia: Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

### Diagrama de secuencia: Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

### Diagrama de secuencia: Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

### Diagrama de secuencia: Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```
### Diagrama de secuencia: Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```

### Diagrama de secuencia: Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```

### Caso de Uso: Visualizacion de Negocios
```mermaid
graph TB
    A[Cliente] --> B[Ver lista de negocios disponibles]
    B --> C[Explorar los productos del negocio]
```

### Diagrama de secuencia: Ver nombre, descripción y logo de cada negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    Sistema->>Cliente: Muestra lista con nombre, descripción y logo de cada negocio
```

### Diagrama de secuencia: Ver productos asociados a un negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Hace clic en un negocio
    Sistema->>BaseDatos: Consulta los productos asociados al negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra los productos disponibles con nombre, descripción y precio
```

### Diagrama de secuencia: Ver lista de productos en la vista del negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la vista de un negocio
    Sistema->>BaseDatos: Consulta los productos disponibles de ese negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra lista de productos con nombre, descripción y precio
```

### Diagrama de secuencia: Mensaje cuando no hay negocios registrados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    alt Si no hay negocios registrados
        Sistema->>Cliente: Muestra mensaje ""No hay negocios registrados actualmente""
    else Si hay negocios registrados
        BaseDatos-->>Sistema: Devuelve lista de negocios
        Sistema->>Cliente: Muestra la lista de negocios
    end
```

### Diagrama de secuencia: Ordenar negocios por nombre, ubicación o tipo de producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>Cliente: Muestra opciones de ordenación (nombre, ubicación, tipo de producto)
    Cliente->>Sistema: Selecciona opción de ordenación
    Sistema->>BaseDatos: Consulta negocios ordenados por la preferencia
    BaseDatos-->>Sistema: Devuelve lista ordenada
    Sistema->>Cliente: Muestra lista de negocios ordenada según la preferencia
```

### Digrama de secuencia: Tiempo de carga de la lista de negocios (menos de 3 segundos)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    alt Si el tiempo de carga es menor a 3 segundos
        Sistema->>Cliente: Muestra la lista de negocios rápidamente
    else Si el tiempo de carga supera los 3 segundos
        Sistema->>Cliente: Muestra mensaje de error de carga lenta
    end
```

### Diagrama de secuencia: Accesibilidad en dispositivos móviles
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Accede al sitio desde un dispositivo móvil
    Sistema->>Sistema: Verifica compatibilidad con dispositivos móviles
    alt Si el sistema es accesible
        Sistema->>Cliente: Muestra la plataforma optimizada para pantallas pequeñas
    else Si el sistema no es accesible
        Sistema->>Cliente: Muestra mensaje de error de incompatibilidad
    end
```

### Caso de Uso: Compra de Productos 

```mermaid
graph TB
    A[Cliente] --> B[Seleccionar producto]
    B --> C[Agregar producto al carrito de compras]
    C --> D[Producto agregado correctamente]
    D --> E[Visualizar carrito de compras]
```

### Diagrama de secuencia: Ver y agregar un producto al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve un producto disponible
    Sistema->>Cliente: Muestra información del producto
    Cliente->>Sistema: Hace clic en ""Agregar al carrito""
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido al carrito
    Sistema->>Cliente: Muestra notificación visual de éxito
```

### Diagrama de secuencia: Calcular el total con descuentos aplicados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve los productos en el carrito
    Sistema->>Carrito: Calcula el total con descuentos aplicados
    Carrito-->>Sistema: Total calculado
    Sistema->>Cliente: Muestra el total actualizado con descuento
```

### Diagrama de secuencia: Eliminar un producto del carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Elimina un producto del carrito
    Sistema->>Carrito: Elimina el producto seleccionado
    Carrito-->>Sistema: Producto eliminado correctamente
    Sistema->>Cliente: Muestra el carrito actualizado con el nuevo total
```

### Diagrama de secuencia: Ver el número total de productos y el subtotal
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Accede al carrito
    Sistema->>Carrito: Consulta el número total de productos y el subtotal
    Carrito-->>Sistema: Devuelve número total de productos y subtotal
    Sistema->>Cliente: Muestra número total de productos y subtotal
```

### Diagrama de secuencia: Notificación visual al añadir productos al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Añade un producto al carrito
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido
    Sistema->>Cliente: Muestra notificación visual de éxito
```

### Diagrama de secuencia: Actualización en tiempo real del carrito sin recargar la página
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Realiza un cambio en el carrito (añadir, eliminar productos)
    Sistema->>Carrito: Actualiza el carrito en tiempo real
    Carrito-->>Sistema: Carrito actualizado
    Sistema->>Cliente: Muestra el carrito actualizado sin recargar la página
```

### Diagrama de secuencia: Proceso de pago seguro con cifrado
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant ProcesadorDePago

    Cliente->>Sistema: Procede con el pago
    Sistema->>ProcesadorDePago: Solicita procesamiento seguro de pago
    ProcesadorDePago->>Sistema: Procesa pago cumpliendo con los estándares de cifrado
    Sistema->>Cliente: Muestra confirmación de pago exitoso
```

### Caso de Uso: Reportes 

```mermaid
graph TB
    A[Administrador] --> B[Generar reporte de ventas]
    A --> C[Generar reporte de productos]
    B --> D[Reporte de ventas generado]
    C --> E[Reporte de productos generado]
    D --> F[Evaluar rendimiento de la plataforma]
    E --> F
```

### Diagrama de secuencia: Generar reporte con ventas totales, productos vendidos y clientes atendidos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta ventas totales, productos vendidos y clientes atendidos
    BaseDatos-->>Sistema: Devuelve los datos
    Sistema->>Admin: Muestra ventas totales, productos vendidos y clientes atendidos
```

### Diagrama de secuencia: Generar reporte con un rango de fechas filtrado
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte con rango de fechas
    Sistema->>BaseDatos: Filtra datos según el rango de fechas seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados por fecha
```

### Diagrama de secuencia: Generar reporte con formato gráfico
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte gráfico
    Sistema->>BaseDatos: Consulta datos de ventas, productos y clientes
    BaseDatos-->>Sistema: Devuelve los datos requeridos
    Sistema->>Admin: Muestra los datos en formato gráfico
```

### Diagrama de secuencia: Filtrar datos por vendedor, negocio o producto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte filtrado por vendedor, negocio o producto
    Sistema->>BaseDatos: Filtra datos por vendedor, negocio o producto seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados
```

### Diagrama de secuencia: Acceso restringido a reportes solo para administradores autenticados
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita acceder a los reportes
    Sistema->>BaseDatos: Verifica si el usuario es un administrador autenticado
    alt Si es administrador autenticado
        BaseDatos-->>Sistema: Permite acceso a los reportes
        Sistema->>Admin: Muestra los reportes
    else Si no es administrador autenticado
        BaseDatos-->>Sistema: Niega el acceso
        Sistema->>Admin: Muestra mensaje de error ""Acceso denegado""
    end
```

### Diagrama de secuencia: Generar reporte en menos de 5 segundos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta los datos necesarios
    BaseDatos-->>Sistema: Devuelve los datos
    alt Si el tiempo de generación es menor a 5 segundos
        Sistema->>Admin: Muestra el reporte generado
    else Si el tiempo de generación supera los 5 segundos
        Sistema->>Admin: Muestra mensaje de error ""Tiempo de generación excedido""
    end
```

### Diagrama de secuencia: Exportar reporte a PDF
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema

    Admin->>Sistema: Solicita exportar reporte
    Sistema->>Sistema: Genera el reporte en formato PDF
    Sistema-->>Admin: Entrega el archivo PDF
```

### Caso de Uso: Notificaciones 

```mermaid
graph TB
    A[Cliente] --> B[Suscribirse a notificaciones]
    B --> C[Recibir notificación de nuevos productos]
    C --> D[Ver detalles del producto]
    D --> E[Aprovechar ofertas antes de que se agoten]
```

### Diagrama de secuencia: Recibir notificaciones por correo electrónico al suscribirse a una categoría de productos o negocios
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos
    participant Correo

    Cliente->>Sistema: Se suscribe a una categoría de productos o negocios
    Sistema->>BaseDatos: Registra suscripción del cliente
    BaseDatos-->>Sistema: Confirmación de suscripción
    Sistema->>Correo: Envía notificación por correo electrónico sobre nuevos productos en la categoría
    Correo-->>Cliente: Recibe notificación con nuevos productos
```

### Diagrama de secuencia: No recibir notificaciones si el vendedor desactiva las notificaciones de un producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Vendedor
    participant BaseDatos

    Cliente->>Sistema: Se suscribe a un producto
    Sistema->>BaseDatos: Registra la suscripción del cliente
    BaseDatos-->>Sistema: Confirmación de suscripción
    Vendedor->>Sistema: Desactiva notificaciones del producto
    Sistema->>BaseDatos: Desactiva notificaciones para el cliente sobre ese producto
    BaseDatos-->>Sistema: Confirmación de desactivación
    Cliente->>Sistema: No recibe notificación sobre el producto desactivado
```

### Diagrama de secuencia: Recibir notificaciones con detalles del producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Recibe notificación de un nuevo producto
    Sistema->>Correo: Genera correo con nombre, precio y fecha de vencimiento del producto
    Correo-->>Cliente: Recibe correo con detalles del producto (nombre, precio, fecha de vencimiento)
```

### Diagrama de secuencia: Elegir cómo recibir las notificaciones (correo electrónico, SMS, o ambas)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Se suscribe a notificaciones
    Sistema->>Cliente: Solicita elección de canal de notificación (correo, SMS o ambos)
    Cliente->>Sistema: Elige recibir notificaciones por correo y SMS
    Sistema->>BaseDatos: Registra la preferencia de notificación
    BaseDatos-->>Sistema: Confirmación de preferencia registrada
    Sistema->>Cliente: Envia notificaciones a través de los canales seleccionados
```

### Diagrama de secuencia: Recibir notificaciones fáciles de leer con enlace directo al producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Recibe notificación
    Sistema->>Correo: Genera notificación fácil de leer con enlace directo al producto
    Correo-->>Cliente: Recibe correo con enlace directo al producto en la web
```

### Diagrama de secuencia: Enviar notificaciones en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Se suscribe a notificaciones
    Sistema->>Correo: Procesa envío de notificación
    alt Si la notificación se envía en menos de 1 minuto
        Correo-->>Cliente: Recibe notificación
    else Si la notificación supera 1 minuto
        Sistema->>Cliente: Muestra mensaje de error ""Notificación retrasada""
    end
```

### Diagrama de secuencia: Manejar hasta 100 notificaciones por minuto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant Correo

    Admin->>Sistema: Activa el sistema de notificaciones
    Sistema->>Correo: Envía notificaciones a los clientes
    alt Si se envían menos de 100 notificaciones por minuto
        Correo-->>Cliente: Reciben las notificaciones correctamente
    else Si se envían más de 100 notificaciones por minuto
        Sistema->>Correo: Mantiene el rendimiento y procesa todas las notificaciones
        Correo-->>Cliente: Reciben todas las notificaciones sin demora
    end
```"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-delacruz_vela,proyecto,si982-2024-rec-u1-delacruz_vela,True,2261,False,0,True,False,False,"﻿**Casos de Uso** 

1. **Registro de Usuarios** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.001.jpeg)

2. **Inicio de Sesión** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.002.jpeg)

3. **Gestión de Roles** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.003.jpeg)

4. **Evaluación de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.004.jpeg)

5. **Creación y Edición de Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.005.jpeg)

6. **Asociación de Planes de Estudio con Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.006.jpeg)

7. **Registro de Asistencias de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.007.jpeg)

8. **Generación de Reportes Académicos** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.008.jpeg)

9. **Configuración de Perfil de Usuario** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.009.jpeg)

10. **Notificaciones de Eventos Importantes**

    ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.010.jpeg)

**Diagrama de Secuencia** 

1. **Registro de Usuarios** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.011.jpeg)

2. **Inicio de Sesión** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.012.jpeg)

3. **Gestión de Roles** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.013.jpeg)

4. **Evaluación de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.014.jpeg)

5. **Creación y Edición de Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.015.jpeg)

6. **Asociación de Planes de Estudio con Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.016.jpeg)

7. **Registro de Asistencias de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.017.jpeg)

8. **Generación de Reportes Académicos** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.018.jpeg)

9. **Configuración de Perfil de Usuario** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.019.png)

10. **Notificaciones de Eventos Importantes**

![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.020.jpeg)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-ccalli_apaza,proyecto,si982-2024-rec-u1-ccalli_apaza,True,48689,True,0,True,False,False,"# Sistema Web de Gestión Veterinaria para Mascotas

 
**HU01: Iniciar Sesión** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Iniciar Sesión) 

(Iniciar Sesión) --> (Validar Credenciales) 

(Iniciar Sesión) --> (Bloquear por Intentos Fallidos) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.010.png)

**Diagramas de Secuencia** 

**CAF06: Validación de Credenciales** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa correo y contraseña válidos Sistema -->> Usuario: Permite acceso 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.011.png)

**CAF07: Manejo de Errores** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa credenciales incorrectas Sistema -->> Usuario: Muestra mensaje de error 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.012.png)

**CAF08: Bloqueo por Intentos Fallidos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

loop Hasta 5 intentos fallidos 

`    `Usuario ->> Sistema: Ingresa credenciales incorrectas     Sistema -->> Usuario: Muestra mensaje de error 

end 

Sistema -->> Usuario: Bloquea cuenta temporalmente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.013.png)

**CAF09: Recordar Sesión** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Activa opción ""Recordar sesión"" Sistema -->> Usuario: Mantiene sesión abierta 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.014.png)

**CAF10: Cierre Automático por Inactividad** 

mermaid 

Copiar código sequenceDiagram participant Usuario participant Sistema 

Usuario ->> Sistema: Inactivo por más de 15 minutos Sistema -->> Usuario: Cierra sesión automáticamente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.015.png)

**CANF03: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita iniciar sesión 

Sistema -->> Usuario: Responde en menos de 2 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.016.png)

**CANF04: Seguridad de Sesión** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Genera token seguro con expiración 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.017.png)

**HU03: Recuperar Contraseña ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.018.png)**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Recuperar Contraseña) 

(Recuperar Contraseña) --> (Validar Correo Existente) (Recuperar Contraseña) --> (Enviar Código de Recuperación) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.019.png)

**Diagramas de Secuencia** 

**CAF11: Solicitud de Recuperación** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa su correo 

Sistema -->> Usuario: Envía correo con instrucciones de recuperación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.020.png)

**CAF12: Validación de Correo Existente** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa un correo no registrado Sistema -->> Usuario: Muestra mensaje de error 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.021.png)

**CAF13: Confirmación de Cambio** 

mermaid 

Copiar código sequenceDiagram participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa cambio de contraseña Sistema -->> Usuario: Muestra confirmación de éxito 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.022.png)

**CAF14: Contraseña Segura** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa una contraseña débil 

Sistema -->> Usuario: Solicita contraseña que cumpla requisitos ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.023.png)

**CAF15: Verificación de Código** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa el código de recuperación Sistema -->> Usuario: Valida y permite cambiar la contraseña 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.024.png)

**CANF05: Seguridad en el Proceso** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Expira códigos de recuperación tras 10 minutos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.025.png)

**CANF06: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita recuperación 

Sistema -->> Usuario: Responde en menos de 1 minuto 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.026.png)

**HU04: Actualizar Perfil** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Actualizar Perfil) 

(Actualizar Perfil) --> (Validar Datos) (Actualizar Perfil) --> (Guardar Cambios) (Actualizar Perfil) --> (Confirmar Actualización) @enduml ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.027.png)

**Diagramas de Secuencia** 

**CAF16: Validación de Datos** 

mermaid 

Copiar código sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Envía datos inválidos 

Sistema -->> Usuario: Retorna mensaje indicando los errores 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.028.png)

**CAF17: Confirmación de Cambios** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Realiza cambios en su perfil 

Sistema -->> Usuario: Confirma que los cambios fueron exitosos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.029.png)

**CAF18: Verificación de Correo** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Cambia su correo electrónico Sistema -->> Usuario: Envía correo de verificación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.030.png)

**CAF19: Reversión de Cambios** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita revertir cambios en su perfil Sistema -->> Usuario: Reversa los cambios y confirma la acción ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.031.png)

**CAF20: Actualización de Foto de Perfil** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Sube una nueva foto de perfil Sistema -->> Usuario: Guarda la nueva imagen correctamente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.032.png)

**CANF07: Compatibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede desde diferentes navegadores 

Sistema -->> Usuario: Funciona correctamente en Chrome, Firefox y Edge 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.033.png)

**CANF08: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Realiza actualizaciones en su perfil Sistema -->> Usuario: Responde en menos de 3 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.034.png)

**HU05: Agregar Mascota ![ref1]**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Agregar Mascota) 

(Agregar Mascota) --> (Validar Campos Obligatorios) (Agregar Mascota) --> (Registrar Mascota) 

(Agregar Mascota) --> (Confirmar Registro) 

@enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.036.png)

**Diagramas de Secuencia** 

**CAF21: Validación de Campos Obligatorios** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa datos incompletos 

Sistema -->> Usuario: Muestra mensaje indicando los campos faltantes 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.037.png)

**CAF22: Registro Exitoso** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa el formulario correctamente Sistema -->> Usuario: Registra la mascota y confirma el éxito 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.038.png)

**CAF23: Selección de Especie y Raza** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Selecciona una especie Sistema -->> Usuario: Muestra las razas disponibles 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.039.png)

**CAF24: Validación de Fecha de Nacimiento** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa una fecha de nacimiento inválida Sistema -->> Usuario: Muestra mensaje de error ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.040.png)

**CAF25: Confirmación de Registro** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Agrega una mascota correctamente Sistema -->> Usuario: Muestra mensaje confirmando el registro 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.041.png)

**CANF09: Seguridad de Datos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Cifra los datos sensibles de la mascota 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.042.png)

**CANF10: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa el registro de la mascota Sistema -->> Usuario: Responde en menos de 3 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.043.png)

**HU06: Programar Citas ![ref1]**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Programar Citas) 

(Programar Citas) --> (Seleccionar Fecha y Hora) (Programar Citas) --> (Confirmar Cita) (Programar Citas) --> (Notificar Veterinario) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.044.png)

**Diagramas de Secuencia** 

**CAF26: Selección de Fecha y Hora** 

mermaid 

Copiar código sequenceDiagram participant Usuario participant Sistema 

Usuario ->> Sistema: Solicita una fecha y hora Sistema -->> Usuario: Valida disponibilidad y confirma 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.045.png)

**CAF27: Confirmación de Cita** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa la programación de la cita Sistema -->> Usuario: Confirma y envía notificación. 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.046.png)

**CAF28: Visualización de Citas Programadas** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita ver citas programadas Sistema -->> Usuario: Muestra las citas futuras 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.047.png)

**CAF29: Cancelación de Cita** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita cancelar una cita 

Sistema -->> Usuario: Cancela la cita y envía notificación al veterinario 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.048.png)

**CAF30: Modificación de Cita** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita modificar fecha y hora Sistema -->> Usuario: Valida y actualiza la cita 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.049.png)

**CANF11: Escalabilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Maneja múltiples usuarios programando citas simultáneamente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.050.png)

**CANF12: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa la programación de citas Sistema -->> Usuario: Responde en menos de 5 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.051.png)

**HU07: Notificaciones de Vacunas** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Notificaciones de Vacunas) 

(Notificaciones de Vacunas) --> (Registrar Fechas de Vacunación) (Notificaciones de Vacunas) --> (Configurar Recordatorios) (Notificaciones de Vacunas) --> (Enviar Notificaciones Automáticas) @enduml ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.052.png)

**Diagramas de Secuencia** 

**CAF31: Registro de Vacunas** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Registra una vacuna con fecha 

Sistema -->> Usuario: Programa la notificación correspondiente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.053.png)

**CAF32: Personalización de Notificaciones** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Configura tiempo de aviso antes de vacuna Sistema -->> Usuario: Guarda configuración personalizada 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.054.png)

**CAF33: Notificación Automática** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

participant Usuario 

Sistema -->> Usuario: Envía notificación en la fecha programada Usuario ->> Sistema: Confirma recepción de la notificación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.055.png)

**CAF34: Confirmación de Recepción** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Sistema -->> Usuario: Envía notificación 

Usuario ->> Sistema: Confirma recepción de la notificación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.056.png)

**CAF35: Cancelación de Notificaciones** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Elimina una vacuna registrada Sistema -->> Usuario: Cancela notificaciones asociadas 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.057.png)

**CANF13: Disponibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Configura recordatorio 

Sistema -->> Usuario: Garantiza disponibilidad del 99.9% anual 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.058.png)

**CANF14: Frecuencia de Envío** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Envía notificaciones con una tasa máxima de 2 por segundo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.059.png)

**HU08: Historial Médico de Mascota ![ref1]**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Historial Médico de Mascota) 

(Historial Médico de Mascota) --> (Registrar Consultas) (Historial Médico de Mascota) --> (Visualizar Historial Completo) (Historial Médico de Mascota) --> (Exportar Historial) 

@enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.060.png)

**Diagramas de Secuencia** 

**CAF36: Visualización de Historial Completo** 

mermaid 

Copiar código sequenceDiagram participant Usuario participant Sistema 

Usuario ->> Sistema: Solicita historial médico Sistema -->> Usuario: Muestra el historial completo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.061.png)

**CAF37: Registro de Consultas** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa detalles de una consulta médica Sistema -->> Usuario: Guarda consulta en el historial 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.062.png)

**CAF38: Filtros de Búsqueda** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Aplica filtro por fecha y tipo de evento Sistema -->> Usuario: Muestra eventos relevantes según filtro 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.063.png)

**CAF39: Exportación del Historial** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita exportar historial 

Sistema -->> Usuario: Genera archivo en formato PDF o Excel ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.064.png)

**CAF40: Edición de Eventos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita editar detalles de un evento Sistema -->> Usuario: Permite edición y guarda cambios 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.065.png)

**CANF15: Escalabilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Maneja hasta 1,000 registros por mascota sin degradación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.066.png)

**CANF16: Seguridad de Datos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Cifra datos del historial en tránsito y reposo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.067.png)

**HU09: Agregar Veterinarias ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.068.png)**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Agregar Veterinarias) 

(Agregar Veterinarias) --> (Buscar Veterinarias) 

(Agregar Veterinarias) --> (Registrar Veterinarias en Lista) (Agregar Veterinarias) --> (Visualizar Detalles de Veterinarias) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.069.png)

**Diagramas de Secuencia** 

**CAF41: Búsqueda de Veterinarias** 

mermaid Copiar código sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Busca veterinarias por nombre o ubicación Sistema -->> Usuario: Muestra resultados relevantes 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.070.png)

**CAF42: Agregar Veterinaria** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Selecciona una veterinaria 

Sistema -->> Usuario: Agrega veterinaria a su lista y confirma 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.071.png)

**CAF43: Gestión de Veterinarias** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita eliminar veterinaria de su lista Sistema -->> Usuario: Elimina y confirma eliminación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.072.png)

**CAF44: Visualización de Detalles** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita detalles de una veterinaria Sistema -->> Usuario: Muestra información completa ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.073.png)

**CAF45: Geolocalización** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita ubicación de la veterinaria Sistema -->> Usuario: Muestra mapa con geolocalización 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.074.png)

**CANF17: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Realiza búsqueda de veterinarias Sistema -->> Usuario: Responde en menos de 3 segundos ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.075.png)

**CANF18: Compatibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede desde un dispositivo móvil 

Sistema -->> Usuario: Funciona correctamente en dispositivos móviles 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.076.png)

**HU10: Directorio de Farmacias** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Consultar Directorio de Farmacias) 

(Consultar Directorio de Farmacias) --> (Buscar Farmacias) 

(Consultar Directorio de Farmacias) --> (Ver Medicamentos Disponibles) (Consultar Directorio de Farmacias) --> (Agregar Farmacia a Favoritos) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.077.png)

**Diagramas de Secuencia** 

**CAF46: Búsqueda de Farmacias** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Busca farmacias por ubicación o nombre Sistema -->> Usuario: Muestra resultados relevantes 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.078.png)

**CAF47: Visualización de Medicamentos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita lista de medicamentos de una farmacia Sistema -->> Usuario: Muestra los medicamentos disponibles ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.079.png)

**CAF48: Agregar a Favoritos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Marca farmacia como favorita 

Sistema -->> Usuario: Agrega farmacia a la lista de favoritos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.080.png)

**CAF49: Filtrar por Servicios** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Aplica filtros de servicios en el directorio Sistema -->> Usuario: Muestra farmacias que cumplen los criterios ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.081.png)

**CAF50: Contacto Directo** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita información de contacto de una farmacia Sistema -->> Usuario: Muestra teléfono y correo de la farmacia 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.082.png)

**CANF19: Escalabilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Maneja hasta 500 farmacias registradas sin degradación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.083.png)

**CANF20: Disponibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede al directorio de farmacias Sistema -->> Usuario: Asegura disponibilidad del 99.9% 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.084.png)

**HU11: Reportes Personalizados ![ref1]**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Generar Reportes Personalizados) 

(Generar Reportes Personalizados) --> (Configurar Filtros) (Generar Reportes Personalizados) --> (Descargar Reporte) (Generar Reportes Personalizados) --> (Compartir Reporte) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.085.png)

**Diagramas de Secuencia** 

**CAF51: Generación de Reportes** 

mermaid Copiar código sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita generar reporte 

Sistema -->> Usuario: Proporciona el reporte solicitado 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.086.png)

**CAF52: Filtros Personalizados** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Aplica filtros específicos para el reporte Sistema -->> Usuario: Genera reporte basado en los filtros 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.087.png)

**CAF53: Descarga de Reportes** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita descargar un reporte 

Sistema -->> Usuario: Proporciona archivo en formato PDF o Excel 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.088.png)

**CAF54: Visualización de Resumen** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita resumen general 

Sistema -->> Usuario: Muestra gráfico interactivo con datos principales 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.089.png)

**CAF55: Compartir Reportes** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita compartir reporte por correo Sistema -->> Usuario: Envía reporte al correo indicado 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.090.png)

**CANF21: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita generar reporte Sistema -->> Usuario: Responde en menos de 5 segundos ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.091.png)

**CANF22: Seguridad de Datos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Protege reportes contra accesos no autorizados 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.092.png)

**HU12: Eliminar Mascota ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.093.png)**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Eliminar Mascota) 

(Eliminar Mascota) --> (Confirmar Eliminación) 

(Eliminar Mascota) --> (Validar Permisos) 

(Eliminar Mascota) --> (Cancelar Notificaciones Asociadas) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.094.png)

**Diagramas de Secuencia** 

**CAF56: Confirmación de Eliminación** mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita eliminar una mascota Sistema -->> Usuario: Solicita confirmación de eliminación 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.095.png)

**CAF57: Validación de Permisos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Intenta eliminar una mascota 

Sistema -->> Usuario: Valida que sea el propietario de la cuenta 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.096.png)

**CAF58: Eliminación Exitosa** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Confirma la eliminación Sistema -->> Usuario: Elimina mascota del sistema 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.097.png)

**CAF59: Cancelación de Notificaciones** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita eliminar mascota con notificaciones pendientes 

Sistema -->> Usuario: Cancela todas las notificaciones asociadas 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.098.png)

**CAF60: Historial Asociado** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Intenta acceder al historial de una mascota eliminada 

Sistema -->> Usuario: Informa que la mascota ya no está disponible 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.099.png)

**CANF23: Persistencia** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Elimina datos de la mascota de la base de datos en menos de 3 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.100.png)

**CANF24: Seguridad de Permisos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita eliminar una mascota 

Sistema -->> Sistema: Verifica autenticación y permisos antes de proceder 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.101.png)

**HU13: Cambiar Contraseña** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Cambiar Contraseña) 

(Cambiar Contraseña) --> (Validar Contraseña Actual) (Cambiar Contraseña) --> (Ingresar Nueva Contraseña) (Cambiar Contraseña) --> (Confirmar Cambio) 

@enduml ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.102.png)

**Diagramas de Secuencia** 

**CAF61: Validación de Contraseña Actual** 

mermaid 

Copiar código sequenceDiagram participant Usuario participant Sistema 

Usuario ->> Sistema: Ingresa contraseña actual incorrecta Sistema -->> Usuario: Muestra mensaje de error 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.103.png)

**CAF62: Validación de Nueva Contraseña** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa nueva contraseña que no cumple requisitos Sistema -->> Usuario: Solicita contraseña válida 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.104.png)

**CAF63: Confirmación de Cambio** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa cambio de contraseña Sistema -->> Usuario: Confirma el cambio exitoso 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.105.png)

**CAF64: Notificación de Cambio** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

participant Usuario 

Sistema -->> Usuario: Envía correo notificando el cambio de contraseña 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.106.png)

**CAF65: Expiración de Sesiones** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Cambia su contraseña 

Sistema -->> Usuario: Cierra todas las sesiones activas 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.107.png)

**CANF25: Seguridad de Contraseñas** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Almacena contraseñas cifradas con bcrypt 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.108.png)

**CANF26: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita cambiar contraseña Sistema -->> Usuario: Responde en menos de 3 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.109.png)

**HU14: Rol de Administrador ![ref1]**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Administrador 

Administrador --> (Gestionar Usuarios) Administrador --> (Gestionar Veterinarias) Administrador --> (Visualizar Reportes) Administrador --> (Configurar Roles) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.110.png)

**Diagramas de Secuencia** 

**CAF66: Gestión de Usuarios** 

mermaid 

Copiar código 

sequenceDiagram 

participant Administrador 

participant Sistema 

Administrador ->> Sistema: Solicita acceso al panel de usuarios Sistema -->> Administrador: Muestra lista de usuarios Administrador ->> Sistema: Edita o elimina un usuario 

Sistema -->> Administrador: Confirma los cambios 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.111.png)

**CAF67: Gestión de Veterinarias** 

mermaid 

Copiar código 

sequenceDiagram 

participant Administrador 

participant Sistema 

Administrador ->> Sistema: Accede al panel de veterinarias Sistema -->> Administrador: Permite agregar, editar o eliminar veterinarias 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.112.png)

**CAF68: Visualización de Reportes** 

mermaid 

Copiar código 

sequenceDiagram 

participant Administrador 

participant Sistema 

Administrador ->> Sistema: Genera un reporte del sistema Sistema -->> Administrador: Proporciona reporte solicitado 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.113.png)

**CAF69: Configuración de Roles** 

mermaid 

Copiar código 

sequenceDiagram 

participant Administrador 

participant Sistema 

Administrador ->> Sistema: Modifica permisos de un usuario Sistema -->> Administrador: Actualiza los roles correctamente ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.114.png)

**CAF70: Auditoría de Actividades** 

mermaid 

Copiar código 

sequenceDiagram 

participant Administrador 

participant Sistema 

Administrador ->> Sistema: Realiza cambios críticos en el sistema Sistema -->> Administrador: Registra las acciones para auditoría 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.115.png)

**CANF27: Escalabilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Soporta hasta 1,000 administradores concurrentes 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.116.png)

**CANF28: Seguridad de Roles** 

mermaid 

Copiar código 

sequenceDiagram 

participant Administrador 

participant Sistema 

Administrador ->> Sistema: Solicita acceso a funciones críticas Sistema -->> Administrador: Solicita autenticación de dos factores (2FA) 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.117.png)

**HU15: Soporte Técnico ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.118.png)**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Contactar Soporte Técnico) 

(Contactar Soporte Técnico) --> (Completar Formulario) (Contactar Soporte Técnico) --> (Generar Ticket de Soporte) (Contactar Soporte Técnico) --> (Visualizar Estado del Ticket) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.119.png)

**Diagramas de Secuencia** 

**CAF71: Solicitud de Ayuda** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Completa formulario de soporte Sistema -->> Usuario: Confirma generación de ticket 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.120.png)

**CAF72: Respuesta Automática** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Envía solicitud de soporte 

Sistema -->> Usuario: Genera ticket y envía respuesta automática ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.121.png)

**CAF73: Visualización del Estado del Ticket** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Consulta estado del ticket Sistema -->> Usuario: Muestra progreso del ticket 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.122.png)

**CAF74: Prioridad de Casos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Describe problema urgente Sistema -->> Usuario: Asigna prioridad alta al caso 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.123.png)

**CAF75: Escalamiento de Problemas** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Reporta problema no resuelto Sistema -->> Usuario: Escala el caso a nivel superior 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.124.png)

**CANF29: Tiempo de Respuesta Inicial** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Envía solicitud de soporte Sistema -->> Usuario: Responde en menos de 1 minuto ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.125.png)

**CANF30: Disponibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede al módulo de soporte 

Sistema -->> Usuario: Garantiza disponibilidad 24/7 con 99.9% de uptime 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.126.png)

**HU16: Cierre de Sesión Automático** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Cierre de Sesión Automático) 

(Cierre de Sesión Automático) --> (Detectar Inactividad) (Cierre de Sesión Automático) --> (Notificar al Usuario) (Cierre de Sesión Automático) --> (Cerrar Sesión) @enduml ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.127.png)

**Diagramas de Secuencia** 

**CAF76: Detección de Inactividad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: No realiza actividad por más de 15 minutos 

Sistema -->> Usuario: Detecta inactividad 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.128.png)

**CAF77: Notificación de Cierre** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

participant Usuario 

Sistema -->> Usuario: Envía notificación de cierre inminente Usuario ->> Sistema: Responde para mantener sesión activa (opcional) 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.129.png)

**CAF78: Cierre Seguro** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Invalida token de sesión y cierra sesión del usuario 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.130.png)

**CAF79: Persistencia de Datos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Cierra sesión automáticamente 

Sistema -->> Usuario: Guarda cambios no enviados antes de cerrar sesión 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.131.png)

**CAF80: Reautenticación** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Intenta acceder después del cierre automático Sistema -->> Usuario: Solicita credenciales nuevamente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.132.png)

**CANF31: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Completa cierre de sesión en menos de 1 segundo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.133.png)

**CANF32: Seguridad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Invalida todos los tokens activos asociados al usuario 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.134.png)

**HU17: Visualización en Móviles ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.135.png)**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Visualización en Móviles) 

(Visualización en Móviles) --> (Adaptación Responsiva) (Visualización en Móviles) --> (Compatibilidad con Navegadores) (Visualización en Móviles) --> (Optimización de Recursos) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.136.png)

**Diagramas de Secuencia** 

**CAF81: Diseño Responsivo** 

mermaid 

Copiar código sequenceDiagram participant Usuario participant Sistema 

Usuario ->> Sistema: Accede desde un dispositivo móvil 

Sistema -->> Usuario: Adapta diseño a la pantalla del dispositivo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.137.png)

**CAF82: Navegación Intuitiva** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Interactúa con la interfaz móvil 

Sistema -->> Usuario: Proporciona una experiencia fluida y clara 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.138.png)

**CAF83: Acceso a Funcionalidades Principales** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita funcionalidades desde móvil Sistema -->> Usuario: Habilita acceso a todas las funciones principales 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.139.png)

**CAF84: Optimización de Imágenes** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita recursos gráficos desde móvil Sistema -->> Usuario: Carga imágenes optimizadas para dispositivos móviles 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.140.png)

**CAF85: Notificaciones Push** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Habilita notificaciones push en el móvil Sistema -->> Usuario: Envia notificaciones programadas 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.141.png)

**CANF33: Compatibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede desde navegadores móviles Sistema -->> Usuario: Funciona correctamente en Android e iOS ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.142.png)

**CANF34: Tiempo de Respuesta** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita acceso desde móvil Sistema -->> Usuario: Carga en menos de 3 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.143.png)

**HU18: Seguridad de Datos ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.144.png)**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Seguridad de Datos) 

(Seguridad de Datos) --> (Encriptación de Datos) (Seguridad de Datos) --> (Autenticación de Usuario) (Seguridad de Datos) --> (Registro de Actividades) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.145.png)

**Diagramas de Secuencia** 

**CAF86: Encriptación de Datos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Ingresa datos sensibles 

Sistema ->> Sistema: Cifra datos antes de almacenarlos Sistema -->> Usuario: Confirma que los datos están protegidos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.146.png)

**CAF87: Autenticación de Usuario** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita acceso 

Sistema -->> Usuario: Valida credenciales y permite acceso 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.147.png)

**CAF88: Protección de Sesiones** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Inicia sesión 

Sistema ->> Sistema: Genera token seguro para autenticación Sistema -->> Usuario: Permite acceso al sistema 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.148.png)

**CAF89: Registro de Actividades** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Realiza una acción sensible 

Sistema ->> Sistema: Registra la acción en los logs de auditoría ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.149.png)

**CAF90: Manejo de Errores de Seguridad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Intenta acceso no autorizado 

Sistema ->> Sistema: Bloquea intento y registra actividad Sistema -->> Usuario: Notifica intento fallido 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.150.png)

**CANF35: Cifrado de Datos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Cifra todos los datos sensibles en tránsito y reposo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.151.png)

**CANF36: Tiempo de Respuesta** 

mermaid 

Copiar código sequenceDiagram 

participant Usuario participant Sistema 

Usuario ->> Sistema: Solicita autenticación Sistema -->> Usuario: Valida en menos de 2 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.152.png)

**HU19: Tiempo de Respuesta Rápido** 

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Tiempo de Respuesta Rápido) 

(Tiempo de Respuesta Rápido) --> (Optimización de Consultas) (Tiempo de Respuesta Rápido) --> (Caché de Recursos) 

(Tiempo de Respuesta Rápido) --> (Reducción de Tamaño de Archivos) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.153.png)

**Diagramas de Secuencia** 

**CAF91: Optimización de Consultas** 

mermaid 

Copiar código sequenceDiagram 

Usuario ->> Sistema: Solicita datos desde una página Sistema ->> Sistema: Optimiza consultas en la base de datos Sistema -->> Usuario: Responde con datos rápidamente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.154.png)

**CAF92: Caché de Recursos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede a una página por segunda vez Sistema ->> Sistema: Recupera recursos estáticos del caché Sistema -->> Usuario: Carga la página con recursos en caché 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.155.png)

**CAF93: Reducción de Tamaño de Archivos** 


mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Solicita una página web 

Sistema ->> Sistema: Minimiza archivos CSS y JavaScript Sistema -->> Usuario: Envía archivos optimizados 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.156.png)

**CAF94: Monitorización de Rendimiento** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Monitorea rendimiento en tiempo real 

Sistema -->> Administrador: Reporta posibles problemas de rendimiento ![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.157.png)

**CAF95: Tiempo de Carga** mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede a una página 

Sistema -->> Usuario: Carga la página en menos de 3 segundos 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.158.png)

**CANF37: Escalabilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Mantiene tiempos de respuesta consistentes con 10,000 usuarios concurrentes 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.159.png)

**CANF38: Disponibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Accede al sistema 

Sistema -->> Usuario: Garantiza un uptime del 99.9% anual 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.160.png)

**HU20: Modo Oscuro ![ref1]**

**Diagrama de Caso de Uso** 

plantuml 

Copiar código 

@startuml 

actor Usuario 

Usuario --> (Modo Oscuro) 

(Modo Oscuro) --> (Activación de Modo Oscuro) (Modo Oscuro) --> (Guardado de Preferencias) (Modo Oscuro) --> (Compatibilidad de Elementos) @enduml 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.161.png)

**Diagramas de Secuencia** 

**CAF96: Activación de Modo Oscuro** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Activa modo oscuro 

Sistema -->> Usuario: Actualiza la interfaz al modo oscuro 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.162.png)

**CAF97: Guardado de Preferencias** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Cambia al modo oscuro 

Sistema ->> Sistema: Guarda preferencia del usuario 

Sistema -->> Usuario: Aplica preferencia en sesiones futuras 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.163.png)

**CAF98: Compatibilidad de Elementos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Cambia entre modo oscuro y claro 

Sistema ->> Sistema: Asegura compatibilidad de todos los elementos visuales 

Sistema -->> Usuario: Interfaz adaptada correctamente 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.164.png)

**CAF99: Alternancia Rápida** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Alterna entre modos oscuro y claro Sistema -->> Usuario: Cambia en menos de 1 segundo 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.165.png)

**CAF100: Accesibilidad del Modo Oscuro** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Activa modo oscuro 

Sistema -->> Usuario: Proporciona un diseño accesible conforme a estándares WCAG 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.166.png)

**CANF39: Compatibilidad** 

mermaid 

Copiar código 

sequenceDiagram 

participant Usuario 

participant Sistema 

Usuario ->> Sistema: Usa modo oscuro en diferentes navegadores Sistema -->> Usuario: Funciona correctamente en Chrome, Firefox y Edge 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.167.png)

**CANF40: Consumo de Recursos** 

mermaid 

Copiar código 

sequenceDiagram 

participant Sistema 

Sistema ->> Sistema: Garantiza que el modo oscuro no aumente significativame 

![](img/Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.168.png)

[ref1]: Aspose.Words.e50a2bb2-48a6-43f0-9cb1-b370c8dc3049.035.png"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-medina_zevallos,proyecto,si982-2024-rec-u1-medina_zevallos,True,2431,False,12,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17616412)
# PROYECTO: Sistema Web ""EventifyMe"" para la gestión y reserva de eventos

### Diagrama de Casos de Uso
<img src=""https://github.com/user-attachments/assets/bdb8a116-e15b-43f5-a4c1-4f4a70d3414e"" alt=""Diagrama de Casos de Uso"" width=""600""/>

### Diagrama de Secuencia

#### Inicio de Sesión
<img src=""https://github.com/user-attachments/assets/46fc7d1e-ac2b-4552-8495-73a63b37098e"" alt=""Diagrama de Secuencia - Inicio de Sesión"" width=""600""/>

#### Registro de Usuarios
<img src=""https://github.com/user-attachments/assets/6206e5ea-2c79-4de9-8657-e0c487678708"" alt=""Diagrama de Secuencia - Registro de Usuarios"" width=""600""/>

#### Gestión de Reservas
<img src=""https://github.com/user-attachments/assets/6287b7f7-5479-425a-a3f6-56c5f6aa3645"" alt=""Diagrama de Secuencia - Gestión de Reservas"" width=""600""/>

#### Pagos Seguros
<img src=""https://github.com/user-attachments/assets/42c5128f-75cc-4b42-a450-456c045f8222"" alt=""Diagrama de Secuencia - Pagos Seguros"" width=""600""/>

#### Publicación de Comentarios
<img src=""https://github.com/user-attachments/assets/d98e1158-6936-4b2d-8959-0d9f3ba3afbb"" alt=""Diagrama de Secuencia - Publicación de Comentarios"" width=""600""/>

#### Visualización del Catálogo de Eventos
<img src=""https://github.com/user-attachments/assets/1a758897-6a1e-4f1a-91d6-53e0b5027af5"" alt=""Diagrama de Secuencia - Visualización del Catálogo de Eventos"" width=""600""/>

#### Interacción con Chatbot
<img src=""https://github.com/user-attachments/assets/29f5d48f-d349-4148-aaa5-cfa6dab214d9"" alt=""Diagrama de Secuencia - Interacción con Chatbot"" width=""600""/>

#### Consulta de Reservas
<img src=""https://github.com/user-attachments/assets/24fb5581-1c62-44c2-b921-06a29d174829"" alt=""Diagrama de Secuencia - Consulta de Reservas"" width=""600""/>

#### Notificaciones Automáticas
<img src=""https://github.com/user-attachments/assets/3cc12065-376b-41ef-be62-f967ab2196b6"" alt=""Diagrama de Secuencia - Notificaciones Automáticas"" width=""600""/>

#### Filtrado de Eventos por Categorías
<img src=""https://github.com/user-attachments/assets/a57d1dc5-7324-4857-8c33-7fb66942ab89"" alt=""Diagrama de Secuencia - Filtrado de Eventos por Categorías"" width=""600""/>"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-gonzalez,proyecto,si982-2024-rec-u1-gonzalez,True,366,False,1,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17616416)
# proyecto-WhatsFacil-Gonzalez

## Casos de uso

![Caso de uso General](media/CasodeUsoGeneral.png)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-concha-ticahuanca,proyecto,si982-2024-rec-u1-concha-ticahuanca,True,5550,False,0,True,False,True,"**FACULTAD DE INGENIERÍA**   

**ESCUELA PROFESIONAL DE INGENIERÍA DE SISTEMAS**   

![](img/Aspose.Words.64a506e7-bf2e-41ae-95af-f301b8fabc10.014.png)

NOMBRE DEL TRABAJO: “Trabajo de Asignación N°01**”**  TEMA DEL TRABAJO*:* **“Avance FD03 - Diagramas”**  

**Integrantes:** 

|**Nº**  |**Código Universitario**  |**Apellidos y Nombres** |
| - | - | - |
|**1.-**  |**2017057849**  |**Concha Llaca, Gerardo Alejandro**  |
|**2.-** |**2020068765** |**Fiorela Milady Ticahuanca Cutipa** |

**CURSO : “Programación Web II”** 

**SECCION : “A”**   

**DOCENTE**  **:**   **Ing. “Patrick Cuadros Quiroga”**  

**Tacna - Perú**  **2025** 


**DIAGRAMA DE CASOS DE USO**

**HU01: Registrar Estudiantes**
![image](https://github.com/user-attachments/assets/eaf72bac-a9db-4e89-8e3f-bcff5eba49bc)

**HU02: Registrar Docentes**
![image](https://github.com/user-attachments/assets/cefead40-528c-4229-b75d-8bf81502e3af)

**HU03: Iniciar Sesión**
![image](https://github.com/user-attachments/assets/35273047-b9ac-4202-9d69-e81667fc38ca)

**HU04: Recuperar Contraseña**
![image](https://github.com/user-attachments/assets/ed141514-280e-48b8-889a-7d49b1f28024)

**HU05: Visualizar Contenidos**
![image](https://github.com/user-attachments/assets/95b8d2c4-1c87-4237-a2e0-a082a5b87fd4)

**HU06: Publicar Contenidos**
![image](https://github.com/user-attachments/assets/eb86e373-9572-4893-ba7a-0266bf5384ec)

**HU07: Registrar Asistencias**
![image](https://github.com/user-attachments/assets/b17e8d28-c173-4bcd-891d-23f73843a63b)

**HU08: Generar Reportes**
![image](https://github.com/user-attachments/assets/71705fad-a91d-43e2-aa74-80feb87b394b)

**HU09: Subir Tareas**
![image](https://github.com/user-attachments/assets/25b4ad55-6f34-4cfb-b7a6-3119fedeeef4)

**HU10: Asignar Evaluaciones**
![image](https://github.com/user-attachments/assets/4854fc57-08e2-48ad-ab11-63c1f2cc7686)

**HU11: Actualizar Perfil**
![image](https://github.com/user-attachments/assets/daec0867-9067-4eb2-b9c0-267f3fa35f24)

**HU12: Consultar Contenidos**
![image](https://github.com/user-attachments/assets/310a04f6-9fbd-41c3-b979-95561a0fde86)

**HU13: Gestionar Permisos**
![image](https://github.com/user-attachments/assets/6218696f-8277-4aa4-9525-3cde97b461e2)

**HU14: Generar Copias de Seguridad**
![image](https://github.com/user-attachments/assets/6f045511-3077-4753-a2f6-13fe10ed79f2)

**HU15: Crear Chat en Línea**
![image](https://github.com/user-attachments/assets/e1904978-8ffe-4f2b-9f9d-90f101108371)

**HU16: Enviar Notificaciones**
![image](https://github.com/user-attachments/assets/fd24f582-9875-4c3a-aaa5-0b3438d97915)

**HU17: Crear Grupos de Trabajo**
![image](https://github.com/user-attachments/assets/77e6f5f5-0538-44c4-8b4b-39d248b92ccb)

**HU18: Crear Foro de Discusión**
![image](https://github.com/user-attachments/assets/05c6c7c9-df8a-4fcf-81a3-cd2bd42c7379)

**HU19: Registrar Observaciones**
![image](https://github.com/user-attachments/assets/05b43dbe-4a06-48f7-8ce4-4cf5e11ddca7)

**HU20: Gestionar Cursos**
![image](https://github.com/user-attachments/assets/742ae63d-e186-49e4-bd1c-8d7ae63e6209)


**DIAGRAMA DE SECUENCIA**

**HU01: Registrar Estudiantes**
![image](https://github.com/user-attachments/assets/35ac48ab-da44-4d84-9966-450ddb6b4c04)

**HU02: Registrar Docentes**
![image](https://github.com/user-attachments/assets/fedd84fd-6735-40bd-9258-86b7b37c9a3f)

**HU03: Iniciar Sesión**
![image](https://github.com/user-attachments/assets/efc1e686-160d-4c92-91de-fa520054f0c9)

**HU04: Recuperar Contraseña**
![image](https://github.com/user-attachments/assets/1b2ffc03-f393-4747-8764-64969c66621f)

**HU05: Visualizar Contenidos**
![image](https://github.com/user-attachments/assets/9d82a9d5-beb2-46d1-a6a2-dbd11bda7724)

**HU06: Publicar Contenidos**
![image](https://github.com/user-attachments/assets/dbec96f8-adf2-4068-bad3-b39d30b019c3)

**HU07: Registrar Asistencias**
![image](https://github.com/user-attachments/assets/2dd05e47-8546-494b-b06f-006be5c0357e)

**HU08: Generar Reportes**
![image](https://github.com/user-attachments/assets/c71d41f0-ca71-429d-aa2a-f1fecab0c4b6)

**HU09: Subir Tareas**
![image](https://github.com/user-attachments/assets/f520051a-a419-4a9f-8aaf-89fa51b72c2a)

**HU10: Asignar Evaluaciones**
![image](https://github.com/user-attachments/assets/4ad9c9dc-9d52-4430-be82-b28cf7421728)

**HU11: Actualizar Perfil**
![image](https://github.com/user-attachments/assets/0b51d6d6-5257-4d35-a93d-ff0b45d2fad5)

**HU12: Consultar Contenidos**
![image](https://github.com/user-attachments/assets/d9f9eaed-dcc5-4c40-98c2-69c867d4e921)

**HU13: Gestionar Permisos**
![image](https://github.com/user-attachments/assets/78f0dc54-8770-4a61-9bb5-801cd6dbb032)

**HU14: Generar Copias de Seguridad**
![image](https://github.com/user-attachments/assets/0c8a6754-f870-4093-ac03-cd86f325cf09)

**HU15: Crear Chat en Línea**
![image](https://github.com/user-attachments/assets/e263c750-2747-4503-a52e-3093990da42d)

**HU16: Enviar Notificaciones**
![image](https://github.com/user-attachments/assets/c879e92a-a9c9-4442-af1f-1b4219049af4)

**HU17: Crear Grupos de Trabajo**
![image](https://github.com/user-attachments/assets/4acb2f7c-3c15-41e4-b972-87839a6feac3)

**HU18: Crear Foro de Discusión**
![image](https://github.com/user-attachments/assets/95bc4e1f-cada-43f4-9e90-ace13b479883)

**HU19: Registrar Observaciones**
![image](https://github.com/user-attachments/assets/7a184375-a324-49ea-abcf-a12fc2181b8c)

**HU20: Gestionar Cursos**
![image](https://github.com/user-attachments/assets/e3eb621c-b083-4fcf-b299-a1c0460ac664)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-cuadros,proyecto,si982-2024-rec-u1-cuadros,True,289,False,0,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17616450)
# proyecto-formatos-01"
UPT-FAING-EPIS/si982_2024-rec-proyecto_si982_2024-rec-u2-proyecto-formatos-01,si982_2024,rec-proyecto_si982_2024-rec-u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-proyectou2_web2_ccalli_apaza,proyecto,si982-2024-rec-u2-proyectou2_web2_ccalli_apaza,True,6150,True,32,True,False,True,"# Sistema de Gestión Veterinaria ""Animalia"" Tacna

## Estudiantes:

| Apellido y Nombre                  |
|-------------------------------------|
| Apaza Mamani, Edward Hernan   |
| CCalli Chata, Joel  Robert |

 ## 1. Antecedentes

El sistema de gestión veterinaria surge como una necesidad ante las deficiencias en el manejo de historiales clínicos, control de inventarios y administración de citas en clínicas veterinarias. La falta de digitalización y la gestión manual generan errores, retrasos y pérdida de información. Este proyecto busca optimizar la administración de las clínicas veterinarias mediante un software eficiente y automatizado.

## 2. Planteamiento del Problema

### a. Problema
Las clínicas veterinarias enfrentan dificultades en la organización de historiales médicos, control de productos y notificación de citas a clientes. La ausencia de un sistema centralizado dificulta la eficiencia operativa y el seguimiento adecuado de los pacientes.

### b. Justificación
Implementar un sistema de gestión permitirá mejorar la calidad del servicio veterinario, reduciendo tiempos administrativos, evitando pérdida de información y optimizando la relación con los clientes.

### c. Alcance
El sistema abarcará la gestión de historiales clínicos, administración de inventarios, control de citas, notificaciones automáticas por correo electrónico y generación de reportes en PDF. No incluirá telemedicina ni facturación electrónica en esta primera fase.

## 3. Objetivos

### Objetivo general
Desarrollar un sistema de gestión veterinaria que optimice la administración de clínicas veterinarias y mejore la experiencia del cliente.

### Objetivos específicos
- Digitalizar los historiales clínicos de los pacientes.
- Implementar un sistema de control de productos veterinarios.
- Automatizar las notificaciones de citas y recordatorios.
- Generar reportes en formato PDF para análisis de gestión.

## 4. Marco Teórico

- Conceptos y fundamentos de la gestión veterinaria.
- Aplicaciones de tecnologías de la información en el ámbito veterinario.
- Seguridad y normativas aplicadas al software de gestión clínica.

## 5. Desarrollo de la Solución

### a. Análisis de Factibilidad
- **Evaluación técnica:** Tecnologías y recursos disponibles.
- **Evaluación económica:** Costos de desarrollo y mantenimiento.
- **Evaluación operativa:** Beneficios y eficiencia operativa esperada.
- **Evaluación social:** Impacto en la comunidad veterinaria.
- **Evaluación legal:** Cumplimiento de normativas sobre datos clínicos.
- **Evaluación ambiental:** Uso responsable de recursos digitales.

### b. Tecnología de Desarrollo
- **Lenguajes de programación:** ASP.NET/SQL SERVER para backend.
- **Base de datos:** SQL SERVER para almacenamiento de información.
- **Infraestructura:** Implementación en la nube para accesibilidad y seguridad.

### c. Metodología de Implementación
- Uso de metodologías ágiles (Scrum) para desarrollo iterativo.
- Creación de documentos de **Visión**, **SRS** y **SAD** como referencia técnica.

## 6. Cronograma

- Planificación detallada de actividades mediante diagrama de Gantt.
- Fases de análisis, diseño, desarrollo, pruebas e implementación.

![Cronograma](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.001.jpeg)

## 7. Presupuesto

### Costos Generales

| **Elemento** | **Costo (S/.)** |
|-------------|--------------|
| Infraestructura en la nube | 0 |
| Licencias de software | 600 |
| Equipos adicionales | 1,200 |

### Costos Operativos Durante el Desarrollo

| **Elemento** | **Costo Mensual (S/.)** |
|-------------|-----------------|
| Servicios básicos | 300 |
| Internet | 150 |

### Costos de Personal

| **Rol** | **Cantidad** | **Salario Mensual (S/.)** | **Duración (Meses)** | **Costo Total (S/.)** |
|--------|------------|-----------------|----------------|----------------|
| Desarrollador Backend | 1 | 1,200 | 2 | 2,400 |
| Desarrollador Frontend | 1 | 1,200 | 2 | 2,400 |

### Costos Totales

| **Categoría** | **Costo Total (S/.)** |
|-------------|----------------|
| Costos Generales | 2,600 |
| Costos Operativos | 900 |
| Costos de Personal | 4,800 |
| **Total** | **8,300** |

![Criterios de Inversión](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.003.png)

## 8. Conclusiones

- Beneficios esperados en la administración de clínicas veterinarias.
- Impacto positivo en la eficiencia y reducción de errores administrativos.
- Potencial de escalabilidad y mejoras futuras.

## 9. Recomendaciones

- Sugerencias para la optimización del sistema a largo plazo.
- Evaluación periódica de la funcionalidad y rendimiento.

## 10. Bibliografía

- Smith, J. (2020). *Veterinary Management Systems: A Digital Approach.* Springer. DOI: 10.1007/s00134-020-06134
- Brown, L. & White, K. (2019). *Technological Advancements in Animal Healthcare.* Elsevier. DOI: 10.1016/j.vet.2019.05.012
- World Health Organization (2021). *Digital Innovations in Veterinary Practice.* WHO Press. Available at: [https://www.who.int/publications/i/item/digital-vet-2021](https://www.who.int/publications/i/item/digital-vet-2021)

## 11. Anexos

### **Anexo 01 Factibilidad Económica**

![Costos Generales](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.002.png)

### **Anexo 02 Visión**

![Visión](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.005.png)

### **Anexo 03 – SRS**

![Diagrama de Caso de Uso](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.009.jpeg)
![Diagrama de Paquetes](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.010.jpeg)

### **Diagrama de Clases**

![Diagrama de Clases](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.017.jpeg)

### **Diagrama de Base de Datos**

![Diagrama de Base de Datos](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.018.jpeg)

### **Diagrama de Arquitectura**

![Diagrama de Arquitectura](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.019.jpeg)

### **Diagrama de Componentes**

![Diagrama de Componentes](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.020.jpeg)

### **Diagrama de Actividades**

![Diagrama de Actividades](img/Aspose.Words.2e46135b-7d25-48a0-a53c-90bf4435b955.021.jpeg)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-proyecto_w2u2_salinas_condori,proyecto,si982-2024-rec-u2-proyecto_w2u2_salinas_condori,True,77625,False,93,True,True,True,"<h1 style=""text-align: center;"">CASOS DE USO</h1>

### Enlace Repositorio : https://github.com/tomasyoel/automatizacionloopify   

## Introduccion

### .1 Definición del problema
En el mundo actual, el desperdicio de productos perecederos y no perecederos es un problema significativo. Tiendas y consumidores enfrentan el reto de manejar inventarios que incluyen productos próximos a su fecha de vencimiento, lo que genera pérdidas económicas y un impacto ambiental negativo. Este problema afecta tanto a los negocios, que no logran optimizar sus ventas, como a los consumidores, que podrían aprovechar ofertas en productos aún útiles.

### 1.2 Objetivo general y específicos
Objetivo general:
Desarrollar una aplicación web llamada Loopify que permita a los usuarios adquirir productos próximos a su fecha de vencimiento a precios reducidos, promoviendo el ahorro y la reducción del desperdicio.

### Objetivos específicos:

Crear una plataforma intuitiva que conecte consumidores con negocios que ofrecen productos cercanos a su fecha de expiración.
Facilitar a los negocios un canal para optimizar la venta de inventarios sobrantes.
Contribuir a la sostenibilidad ambiental mediante la reducción de desperdicios.
Ofrecer categorías diferenciadas para alimentos, abarrotes y otros productos, ajustadas a las necesidades de los usuarios.


### 1.3 Alcance

Loopify estará diseñado inicialmente para operar exclusivamente en la ciudad de Tacna, conectando a pequeños comercios y usuarios finales. La aplicación incluirá funcionalidades como búsqueda por categorías, filtros por ubicación, notificación de descuentos y métodos de pago integrados. Se enfocará en productos alimenticios y no alimenticios que estén por vencer, expandiéndose progresivamente a otras categorías según la demanda del mercado.

### Caso de Uso: Registro de Usuario 
```mermaid
graph TB
    A[Visitante] --> B[Registrarse en Loopify]
    B --> C[Acceder a funcionalidades según rol]
```

### Diagrama de Secuencia: Acceso al Formulario de Registro

```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Acceder al formulario de registro
    Sistema-->>Visitante: Mostrar formulario de registro
    Visitante->>Sistema: Completar los campos (nombre, correo y contraseña)
    Sistema-->>Visitante: Validar campos obligatorios
    Sistema-->>Visitante: Permitir continuar si los campos son válidos
```

### Diagrama de Secuencia: Asignación de Rol de Cliente

```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Completar registro
    Sistema-->>Cliente: Asignar rol de cliente automáticamente
    Sistema-->>Cliente: Confirmar registro exitoso
```

### Diagrama de Secuencia: Creación de Cuenta por Administrador

```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant Administrador

    Vendedor->>Sistema: Completar registro
    Sistema-->>Administrador: Notificar creación de cuenta pendiente
    Administrador->>Sistema: Aprobar o rechazar la cuenta
    Sistema-->>Vendedor: Notificar estado de la cuenta
```

### Diagrama de Secuencia: Validación de Correo Único

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro con correo
    Sistema-->>Sistema: Validar si el correo ya está registrado
    alt Correo no único
        Sistema-->>Usuario: Mostrar mensaje de error
    else Correo único
        Sistema-->>Usuario: Continuar con el registro
    end
```

### Diagrama de Secuencia: Mensaje de Confirmación de Registro

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro exitosamente
    Sistema-->>Usuario: Mostrar mensaje de confirmación
```

### Diagrama de Secuencia: Tiempo de Carga del Formulario

```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Acceder al formulario de registro
    Sistema-->>Visitante: Mostrar formulario en menos de 2 segundos
```

### Diagrama de Secuencia: Cifrado de Contraseña

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro con contraseña
    Sistema-->>Sistema: Cifrar contraseña
    Sistema-->>Usuario: Confirmar registro exitoso
```


### Caso de Uso: Inicio de Sesion 

```mermaid
graph TB
    A[Usuario registrado] --> B[Acceder al formulario de inicio de sesión]
    B --> C[Ingresar credenciales]
    C --> D[Validar credenciales]
    D --> E{¿Credenciales válidas?}
    E -- No --> F[Mostrar mensaje de error]
    E -- Sí --> G[Acceder a la cuenta según el rol] 
```

### Diagrama de Secuencia: Campos de Inicio de Sesión

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Acceder al formulario de inicio de sesión
    Sistema-->>Usuario: Mostrar campos para correo y contraseña
```

### Diagrama de Secuencia: Mensaje de Error por Credenciales Incorrectas

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intentar iniciar sesión con credenciales incorrectas
    Sistema-->>Sistema: Validar credenciales
    Sistema-->>Usuario: Mostrar mensaje de error claro
```

### Diagrama de Secuencia: Redirección según Rol

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Iniciar sesión con credenciales correctas
    Sistema-->>Sistema: Verificar rol del usuario
    Sistema-->>Usuario: Redirigir según rol (ej. cliente, vendedor, administrador)
```

### Diagrama de Secuencia: Redirección para Administrador

```mermaid
sequenceDiagram
    participant Administrador
    participant Sistema

    Administrador->>Sistema: Iniciar sesión
    Sistema-->>Sistema: Verificar rol de administrador
    Sistema-->>Administrador: Redirigir a la vista de gestión de vendedores y negocios
```

### Diagrama de Secuencia: Recuperación de Contraseña

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Solicitar recuperación de contraseña
    Sistema-->>Usuario: Enviar correo con enlace para restablecer contraseña
```

### Diagrama de Secuencia: Inicio de Sesión en Menos de 3 Segundos

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intentar iniciar sesión
    Sistema-->>Sistema: Validar credenciales
    Sistema-->>Usuario: Completar el inicio de sesión en menos de 3 segundos
```

### Diagrama de Secuencia: Expiración de Sesión por Inactividad

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Estar inactivo durante 30 minutos
    Sistema-->>Sistema: Detectar inactividad
    Sistema-->>Usuario: Expirar sesión automáticamente
```

### Caso de Uso: Gestion de Vendedores 

```mermaid
graph TB
    A[Administrador] --> B[Crear cuenta de vendedor]
    A --> C[Editar cuenta de vendedor]
    A --> D[Eliminar cuenta de vendedor]
    B --> E[Cuenta creada correctamente]
    C --> F[Cambios guardados correctamente]
    D --> G[Cuenta eliminada correctamente]
```

### Diagrama de secuencia: Opciones para editar y eliminar vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores
    Sistema->>Usuario: Muestra lista con opciones de editar y eliminar
```

### Diagrama de secuencia: Eliminar un vendedor y sus negocios y productos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Selecciona eliminar vendedor
    Sistema->>Usuario: Confirma eliminación
    Usuario->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Eliminar vendedor, negocios y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Usuario: Muestra mensaje de éxito
```

### Diagrama de secuencia: Asignar un negocio al vendedor al crear uno nuevo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Crea nuevo vendedor
    Sistema->>Usuario: Solicita información del vendedor
    Usuario->>Sistema: Completa información
    Sistema->>Usuario: Solicita asignar un negocio
    Usuario->>Sistema: Asigna negocio
    Sistema->>BaseDatos: Guardar nuevo vendedor con negocio asignado
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
```

### Diagrama de secuencia: Validación de datos al registrar o actualizar vendedor
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Intenta guardar vendedor
    Sistema->>Sistema: Valida datos (nombre, correo, teléfono)
    Sistema-->>Usuario: Datos válidos
    Sistema->>BaseDatos: Guardar datos del vendedor
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
    Sistema-->>Usuario: Muestra mensaje de error si los datos no son válidos
```

### Diagrama de secuencia: Vendedor eliminado no aparece en la lista
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores (sin el eliminado)
    Sistema->>Usuario: Muestra lista actualizada
```

### Diagrama de secuencia: Buscar vendedor específico por nombre o correo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Inicia búsqueda por nombre o correo
    Sistema->>BaseDatos: Buscar vendedor por nombre o correo
    BaseDatos-->>Sistema: Resultados de búsqueda
    Sistema->>Usuario: Muestra resultados de búsqueda
```

### Diagrama de secuencia: Reflejo en tiempo real de cambios en la lista de vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Realiza cambio (crear, editar o eliminar vendedor)
    Sistema->>BaseDatos: Confirma cambio en la base de datos
    BaseDatos-->>Sistema: Confirmación de cambio
    Sistema->>Usuario: Muestra lista de vendedores actualizada en menos de 5 segundos
```

### Caso de Uso: Gestión de negocios
```mermaid
graph TB
    A[Vendedor] --> B[Crear negocio]
    A --> C[Editar negocio]
    A --> D[Eliminar negocio]
    B --> E[Negocio creado correctamente]
    C --> F[Cambios guardados correctamente]
    D --> G[Negocio eliminado correctamente]
```



### Diagrama de secuencia: Registrar o editar un negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario para registrar/editar negocio
    Sistema->>Vendedor: Muestra campos para ingresar nombre, descripción y logo
    Vendedor->>Sistema: Ingresa la información del negocio
    Sistema->>BaseDatos: Guarda la información del negocio
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Guardar cambios en la información del negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Realiza cambios en la información del negocio
    Sistema->>BaseDatos: Guarda los cambios realizados
    BaseDatos-->>Sistema: Confirmación de actualización
    Sistema->>Vendedor: Muestra mensaje de éxito
    Sistema->>Vendedor: Actualiza la vista con la nueva información
```

### Diagrama de secuencia: Eliminar un negocio y sus productos asociados
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Selecciona eliminar un negocio
    Sistema->>Vendedor: Pide confirmación de eliminación
    Vendedor->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Elimina el negocio y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Acceder y editar/eliminar solo negocios propios
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios del vendedor
    BaseDatos-->>Sistema: Negocios del vendedor
    Vendedor->>Sistema: Selecciona un negocio que le pertenece
    Sistema->>Vendedor: Muestra opciones de editar y eliminar
    Vendedor->>Sistema: Edita o elimina su negocio
    Sistema->>BaseDatos: Guarda los cambios o elimina el negocio
    BaseDatos-->>Sistema: Confirmación de cambio/eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Ver solo negocios activos como cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta todos los negocios activos
    BaseDatos-->>Sistema: Lista de negocios activos
    Sistema->>Cliente: Muestra los negocios activos
```

### Diagrama de secuencia: Carga de imagen de logo en menos de 3 segundos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Subir logo del negocio
    Sistema->>Sistema: Procesar la carga de la imagen
    Sistema-->>Vendedor: Confirmación de carga completada en menos de 3 segundos
```

### Diagrama de secuencia: Subir logo de hasta 5 MB
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Selecciona imagen de logo
    Sistema->>Sistema: Verifica tamaño de la imagen
    alt Si la imagen es válida (menos de 5 MB)
        Sistema->>Vendedor: Procesar carga de logo
        Sistema-->>Vendedor: Confirma carga completada
    else Si la imagen es mayor de 5 MB
        Sistema->>Vendedor: Muestra error ""Tamaño de imagen demasiado grande""
    end
```

### Caso de Uso: Publicación de productos
```mermaid
graph TB
    A[Vendedor] --> B[Agregar producto con descuento]
    B --> C[Producto agregado al negocio]
    C --> D[Producto visible para clientes]
```

### Diagrama de secuencia: Publicar un nuevo producto
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario de publicación
    Sistema->>Vendedor: Muestra campos para nombre, descripción, precio, descuento y fecha de vencimiento
    Vendedor->>Sistema: Completa la información del producto
    Sistema->>BaseDatos: Guarda la información del producto
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: No permitir guardar producto sin negocio asociado
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Intenta guardar un nuevo producto
    Sistema->>BaseDatos: Verifica si el producto tiene un negocio asociado
    alt Si no hay negocio asociado
        Sistema->>Vendedor: Muestra mensaje de error ""No hay negocio asociado""
    else Si hay negocio asociado
        Sistema->>BaseDatos: Guarda el producto
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

### Diagrama de secuencia: Descuento mayor al 90%
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Ingresa un valor de descuento para el producto
    Sistema->>Sistema: Verifica si el descuento supera el 90%
    alt Si el descuento es mayor al 90%
        Sistema->>Vendedor: Muestra mensaje de error ""Descuento no puede superar el 90%""
    else Si el descuento es válido
        Sistema->>BaseDatos: Guarda el producto con el descuento
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

### Diagrama de secuencia: Ordenar productos por proximidad de vencimiento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de productos
    Sistema->>BaseDatos: Obtiene productos con fecha de vencimiento
    BaseDatos-->>Sistema: Lista de productos con fecha de vencimiento
    Sistema->>Sistema: Ordena productos por proximidad de vencimiento
    Sistema->>Cliente: Muestra lista ordenada con productos más cercanos a vencer primero
```

### Diagrama de secuencia: Ver precio original y con descuento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Visualiza producto con descuento
    Sistema->>Cliente: Muestra precio original y precio con descuento aplicado
    Sistema-->>Cliente: Muestra los dos precios (original y con descuento)
```

### Diagrama de secuencia: Tiempo de carga del formulario de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Accede al formulario de productos
    Sistema->>Sistema: Carga formulario de publicación
    alt Si el tiempo de carga es menor o igual a 2 segundos
        Sistema->>Vendedor: Muestra el formulario correctamente
    else Si el tiempo de carga supera los 2 segundos
        Sistema->>Vendedor: Muestra mensaje de error de carga lenta
    end
```

### Diagrama de secuencia: Procesamiento de imágenes de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Sube imagen del producto
    Sistema->>Sistema: Procesa la imagen
    Sistema->>Sistema: Comprime la imagen sin pérdida de calidad
    Sistema-->>Vendedor: Confirma carga y compresión de la imagen
```

### Caso de Uso: Recuperacion de contraseña 
```mermaid
graph TB
    A[Usuario registrado] --> B[Solicitar recuperación de contraseña]
    B --> C[Ingresar correo asociado a la cuenta]
    C --> D[Validar correo]
    D --> E{¿Correo válido?}
    E -- No --> F[Mostrar mensaje de error]
    E -- Sí --> G[Enviar enlace de recuperación]
    G --> H[Acceder a la página para restablecer contraseña]
    H --> I[Restablecer contraseña]
    I --> J[Contraseña restablecida correctamente]
```

### Diagrama de secuencia: Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

### Diagrama de secuencia: Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

### Diagrama de secuencia: Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

### Diagrama de secuencia: Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

### Diagrama de secuencia: Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```
### Diagrama de secuencia: Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```

### Diagrama de secuencia: Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```

### Caso de Uso: Visualizacion de Negocios
```mermaid
graph TB
    A[Cliente] --> B[Ver lista de negocios disponibles]
    B --> C[Explorar los productos del negocio]
```

### Diagrama de secuencia: Ver nombre, descripción y logo de cada negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    Sistema->>Cliente: Muestra lista con nombre, descripción y logo de cada negocio
```

### Diagrama de secuencia: Ver productos asociados a un negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Hace clic en un negocio
    Sistema->>BaseDatos: Consulta los productos asociados al negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra los productos disponibles con nombre, descripción y precio
```

### Diagrama de secuencia: Ver lista de productos en la vista del negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la vista de un negocio
    Sistema->>BaseDatos: Consulta los productos disponibles de ese negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra lista de productos con nombre, descripción y precio
```

### Diagrama de secuencia: Mensaje cuando no hay negocios registrados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    alt Si no hay negocios registrados
        Sistema->>Cliente: Muestra mensaje ""No hay negocios registrados actualmente""
    else Si hay negocios registrados
        BaseDatos-->>Sistema: Devuelve lista de negocios
        Sistema->>Cliente: Muestra la lista de negocios
    end
```

### Diagrama de secuencia: Ordenar negocios por nombre, ubicación o tipo de producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>Cliente: Muestra opciones de ordenación (nombre, ubicación, tipo de producto)
    Cliente->>Sistema: Selecciona opción de ordenación
    Sistema->>BaseDatos: Consulta negocios ordenados por la preferencia
    BaseDatos-->>Sistema: Devuelve lista ordenada
    Sistema->>Cliente: Muestra lista de negocios ordenada según la preferencia
```

### Digrama de secuencia: Tiempo de carga de la lista de negocios (menos de 3 segundos)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    alt Si el tiempo de carga es menor a 3 segundos
        Sistema->>Cliente: Muestra la lista de negocios rápidamente
    else Si el tiempo de carga supera los 3 segundos
        Sistema->>Cliente: Muestra mensaje de error de carga lenta
    end
```

### Diagrama de secuencia: Accesibilidad en dispositivos móviles
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Accede al sitio desde un dispositivo móvil
    Sistema->>Sistema: Verifica compatibilidad con dispositivos móviles
    alt Si el sistema es accesible
        Sistema->>Cliente: Muestra la plataforma optimizada para pantallas pequeñas
    else Si el sistema no es accesible
        Sistema->>Cliente: Muestra mensaje de error de incompatibilidad
    end
```

### Caso de Uso: Compra de Productos 

```mermaid
graph TB
    A[Cliente] --> B[Seleccionar producto]
    B --> C[Agregar producto al carrito de compras]
    C --> D[Producto agregado correctamente]
    D --> E[Visualizar carrito de compras]
```

### Diagrama de secuencia: Ver y agregar un producto al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve un producto disponible
    Sistema->>Cliente: Muestra información del producto
    Cliente->>Sistema: Hace clic en ""Agregar al carrito""
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido al carrito
    Sistema->>Cliente: Muestra notificación visual de éxito
```

### Diagrama de secuencia: Calcular el total con descuentos aplicados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve los productos en el carrito
    Sistema->>Carrito: Calcula el total con descuentos aplicados
    Carrito-->>Sistema: Total calculado
    Sistema->>Cliente: Muestra el total actualizado con descuento
```

### Diagrama de secuencia: Eliminar un producto del carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Elimina un producto del carrito
    Sistema->>Carrito: Elimina el producto seleccionado
    Carrito-->>Sistema: Producto eliminado correctamente
    Sistema->>Cliente: Muestra el carrito actualizado con el nuevo total
```

### Diagrama de secuencia: Ver el número total de productos y el subtotal
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Accede al carrito
    Sistema->>Carrito: Consulta el número total de productos y el subtotal
    Carrito-->>Sistema: Devuelve número total de productos y subtotal
    Sistema->>Cliente: Muestra número total de productos y subtotal
```

### Diagrama de secuencia: Notificación visual al añadir productos al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Añade un producto al carrito
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido
    Sistema->>Cliente: Muestra notificación visual de éxito
```

### Diagrama de secuencia: Actualización en tiempo real del carrito sin recargar la página
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Realiza un cambio en el carrito (añadir, eliminar productos)
    Sistema->>Carrito: Actualiza el carrito en tiempo real
    Carrito-->>Sistema: Carrito actualizado
    Sistema->>Cliente: Muestra el carrito actualizado sin recargar la página
```

### Diagrama de secuencia: Proceso de pago seguro con cifrado
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant ProcesadorDePago

    Cliente->>Sistema: Procede con el pago
    Sistema->>ProcesadorDePago: Solicita procesamiento seguro de pago
    ProcesadorDePago->>Sistema: Procesa pago cumpliendo con los estándares de cifrado
    Sistema->>Cliente: Muestra confirmación de pago exitoso
```

### Caso de Uso: Reportes 

```mermaid
graph TB
    A[Administrador] --> B[Generar reporte de ventas]
    A --> C[Generar reporte de productos]
    B --> D[Reporte de ventas generado]
    C --> E[Reporte de productos generado]
    D --> F[Evaluar rendimiento de la plataforma]
    E --> F
```

### Diagrama de secuencia: Generar reporte con ventas totales, productos vendidos y clientes atendidos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta ventas totales, productos vendidos y clientes atendidos
    BaseDatos-->>Sistema: Devuelve los datos
    Sistema->>Admin: Muestra ventas totales, productos vendidos y clientes atendidos
```

### Diagrama de secuencia: Generar reporte con un rango de fechas filtrado
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte con rango de fechas
    Sistema->>BaseDatos: Filtra datos según el rango de fechas seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados por fecha
```

### Diagrama de secuencia: Generar reporte con formato gráfico
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte gráfico
    Sistema->>BaseDatos: Consulta datos de ventas, productos y clientes
    BaseDatos-->>Sistema: Devuelve los datos requeridos
    Sistema->>Admin: Muestra los datos en formato gráfico
```

### Diagrama de secuencia: Filtrar datos por vendedor, negocio o producto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte filtrado por vendedor, negocio o producto
    Sistema->>BaseDatos: Filtra datos por vendedor, negocio o producto seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados
```

### Diagrama de secuencia: Acceso restringido a reportes solo para administradores autenticados
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita acceder a los reportes
    Sistema->>BaseDatos: Verifica si el usuario es un administrador autenticado
    alt Si es administrador autenticado
        BaseDatos-->>Sistema: Permite acceso a los reportes
        Sistema->>Admin: Muestra los reportes
    else Si no es administrador autenticado
        BaseDatos-->>Sistema: Niega el acceso
        Sistema->>Admin: Muestra mensaje de error ""Acceso denegado""
    end
```

### Diagrama de secuencia: Generar reporte en menos de 5 segundos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta los datos necesarios
    BaseDatos-->>Sistema: Devuelve los datos
    alt Si el tiempo de generación es menor a 5 segundos
        Sistema->>Admin: Muestra el reporte generado
    else Si el tiempo de generación supera los 5 segundos
        Sistema->>Admin: Muestra mensaje de error ""Tiempo de generación excedido""
    end
```

### Diagrama de secuencia: Exportar reporte a PDF
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema

    Admin->>Sistema: Solicita exportar reporte
    Sistema->>Sistema: Genera el reporte en formato PDF
    Sistema-->>Admin: Entrega el archivo PDF
```

### Caso de Uso: Notificaciones 

```mermaid
graph TB
    A[Cliente] --> B[Suscribirse a notificaciones]
    B --> C[Recibir notificación de nuevos productos]
    C --> D[Ver detalles del producto]
    D --> E[Aprovechar ofertas antes de que se agoten]
```

### Diagrama de secuencia: Recibir notificaciones por correo electrónico al suscribirse a una categoría de productos o negocios
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos
    participant Correo

    Cliente->>Sistema: Se suscribe a una categoría de productos o negocios
    Sistema->>BaseDatos: Registra suscripción del cliente
    BaseDatos-->>Sistema: Confirmación de suscripción
    Sistema->>Correo: Envía notificación por correo electrónico sobre nuevos productos en la categoría
    Correo-->>Cliente: Recibe notificación con nuevos productos
```

### Diagrama de secuencia: No recibir notificaciones si el vendedor desactiva las notificaciones de un producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Vendedor
    participant BaseDatos

    Cliente->>Sistema: Se suscribe a un producto
    Sistema->>BaseDatos: Registra la suscripción del cliente
    BaseDatos-->>Sistema: Confirmación de suscripción
    Vendedor->>Sistema: Desactiva notificaciones del producto
    Sistema->>BaseDatos: Desactiva notificaciones para el cliente sobre ese producto
    BaseDatos-->>Sistema: Confirmación de desactivación
    Cliente->>Sistema: No recibe notificación sobre el producto desactivado
```

### Diagrama de secuencia: Recibir notificaciones con detalles del producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Recibe notificación de un nuevo producto
    Sistema->>Correo: Genera correo con nombre, precio y fecha de vencimiento del producto
    Correo-->>Cliente: Recibe correo con detalles del producto (nombre, precio, fecha de vencimiento)
```

### Diagrama de secuencia: Elegir cómo recibir las notificaciones (correo electrónico, SMS, o ambas)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Se suscribe a notificaciones
    Sistema->>Cliente: Solicita elección de canal de notificación (correo, SMS o ambos)
    Cliente->>Sistema: Elige recibir notificaciones por correo y SMS
    Sistema->>BaseDatos: Registra la preferencia de notificación
    BaseDatos-->>Sistema: Confirmación de preferencia registrada
    Sistema->>Cliente: Envia notificaciones a través de los canales seleccionados
```

### Diagrama de secuencia: Recibir notificaciones fáciles de leer con enlace directo al producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Recibe notificación
    Sistema->>Correo: Genera notificación fácil de leer con enlace directo al producto
    Correo-->>Cliente: Recibe correo con enlace directo al producto en la web
```

### Diagrama de secuencia: Enviar notificaciones en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Se suscribe a notificaciones
    Sistema->>Correo: Procesa envío de notificación
    alt Si la notificación se envía en menos de 1 minuto
        Correo-->>Cliente: Recibe notificación
    else Si la notificación supera 1 minuto
        Sistema->>Cliente: Muestra mensaje de error ""Notificación retrasada""
    end
```

### Diagrama de secuencia: Manejar hasta 100 notificaciones por minuto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant Correo

    Admin->>Sistema: Activa el sistema de notificaciones
    Sistema->>Correo: Envía notificaciones a los clientes
    alt Si se envían menos de 100 notificaciones por minuto
        Correo-->>Cliente: Reciben las notificaciones correctamente
    else Si se envían más de 100 notificaciones por minuto
        Sistema->>Correo: Mantiene el rendimiento y procesa todas las notificaciones
        Correo-->>Cliente: Reciben todas las notificaciones sin demora
    end
```



### Diagramas secuencia - SAD 

Diagrama de Secuencia: Acceso al Formulario de Registro
```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Solicita acceso al formulario de registro
    Sistema-->>Visitante: Muestra formulario de registro
    Visitante->>Sistema: Completa los campos (nombre, correo, contraseña)
    Sistema-->>Sistema: Valida campos obligatorios
    Sistema-->>Visitante: Permite continuar si los campos son válidos
```

Diagrama de Secuencia: Asignación de Rol de Cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Completa el registro
    Sistema-->>Cliente: Asigna rol de cliente automáticamente
    Sistema-->>Cliente: Confirma registro exitoso
```

Diagrama de Secuencia: Creación de Cuenta por Administrador
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant Administrador

    Vendedor->>Sistema: Completa registro
    Sistema-->>Administrador: Notifica creación de cuenta pendiente
    Administrador->>Sistema: Aprueba o rechaza la cuenta
    Sistema-->>Vendedor: Notifica estado de la cuenta
```

Diagrama de Secuencia: Validación de Correo Único
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completa registro con correo
    Sistema-->>Sistema: Verifica si el correo ya está registrado
    alt Correo no único
        Sistema-->>Usuario: Muestra mensaje de error
    else Correo único
        Sistema-->>Usuario: Continúa con el registro
    end
```

Diagrama de Secuencia: Mensaje de Confirmación de Registro
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completa registro exitosamente
    Sistema-->>Usuario: Muestra mensaje de confirmación
```

Diagrama de Secuencia: Tiempo de Carga del Formulario
```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Accede al formulario de registro
    Sistema-->>Visitante: Muestra formulario en menos de 2 segundos
```

Diagrama de Secuencia: Cifrado de Contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completa registro con contraseña
    Sistema-->>Sistema: Cifra la contraseña
    Sistema-->>Usuario: Confirma registro exitoso
```

Diagrama de Secuencia: Campos de Inicio de Sesión
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Accede al formulario de inicio de sesión
    Sistema-->>Usuario: Muestra campos para correo y contraseña
```

Diagrama de Secuencia: Mensaje de Error por Credenciales Incorrectas
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intenta iniciar sesión con credenciales incorrectas
    Sistema-->>Sistema: Valida credenciales
    Sistema-->>Usuario: Muestra mensaje de error claro
```

Diagrama de Secuencia: Redirección según Rol
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con credenciales correctas
    Sistema-->>Sistema: Verifica rol del usuario
    Sistema-->>Usuario: Redirige según rol (ej. cliente, vendedor, administrador)
```

Diagrama de Secuencia: Redirección para Administrador
```mermaid
sequenceDiagram
    participant Administrador
    participant Sistema

    Administrador->>Sistema: Inicia sesión
    Sistema-->>Sistema: Verifica rol de administrador
    Sistema-->>Administrador: Redirige a la vista de gestión de vendedores y negocios
```

Diagrama de Secuencia: Recuperación de Contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema-->>Usuario: Envía correo con enlace para restablecer contraseña
```

Diagrama de Secuencia: Inicio de Sesión en Menos de 3 Segundos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intenta iniciar sesión
    Sistema-->>Sistema: Valida credenciales
    Sistema-->>Usuario: Completa el inicio de sesión en menos de 3 segundos
```


Diagrama de Secuencia: Expiración de Sesión por Inactividad
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Está inactivo durante 30 minutos
    Sistema-->>Sistema: Detecta inactividad
    Sistema-->>Usuario: Expira sesión automáticamente
```


Diagrama de Secuencia: Opciones para Editar y Eliminar Vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores
    Sistema->>Usuario: Muestra lista con opciones de editar y eliminar
```

Diagrama de Secuencia: Eliminar un Vendedor y sus Negocios y Productos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Selecciona eliminar vendedor
    Sistema->>Usuario: Confirma eliminación
    Usuario->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Eliminar vendedor, negocios y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Usuario: Muestra mensaje de éxito
```

Diagrama de Secuencia: Asignar un Negocio al Vendedor al Crear uno Nuevo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Crea nuevo vendedor
    Sistema->>Usuario: Solicita información del vendedor
    Usuario->>Sistema: Completa información
    Sistema->>Usuario: Solicita asignar un negocio
    Usuario->>Sistema: Asigna negocio
    Sistema->>BaseDatos: Guardar nuevo vendedor con negocio asignado
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
```

Diagrama de Secuencia: Validación de Datos al Registrar o Actualizar Vendedor
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Intenta guardar vendedor
    Sistema->>Sistema: Valida datos (nombre, correo, teléfono)
    Sistema-->>Usuario: Datos válidos
    Sistema->>BaseDatos: Guardar datos del vendedor
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
    Sistema-->>Usuario: Muestra mensaje de error si los datos no son válidos
```

Diagrama de Secuencia: Vendedor Eliminado no Aparece en la Lista
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores (sin el eliminado)
    Sistema->>Usuario: Muestra lista actualizada
```

Diagrama de Secuencia: Buscar Vendedor Específico por Nombre o Correo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Inicia búsqueda por nombre o correo
    Sistema->>BaseDatos: Buscar vendedor por nombre o correo
    BaseDatos-->>Sistema: Resultados de búsqueda
    Sistema->>Usuario: Muestra resultados de búsqueda
```

Diagrama de Secuencia: Reflejo en Tiempo Real de Cambios en la Lista de Vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Realiza cambio (crear, editar o eliminar vendedor)
    Sistema->>BaseDatos: Confirma cambio en la base de datos
    BaseDatos-->>Sistema: Confirmación de cambio
    Sistema->>Usuario: Muestra lista de vendedores actualizada en menos de 5 segundos
```

Registrar o editar un negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario para registrar/editar negocio
    Sistema->>Vendedor: Muestra campos para ingresar nombre, descripción y logo
    Vendedor->>Sistema: Ingresa la información del negocio
    Sistema->>BaseDatos: Guarda la información del negocio
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

Guardar cambios en la información del negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Realiza cambios en la información del negocio
    Sistema->>BaseDatos: Guarda los cambios realizados
    BaseDatos-->>Sistema: Confirmación de actualización
    Sistema->>Vendedor: Muestra mensaje de éxito
    Sistema->>Vendedor: Actualiza la vista con la nueva información
```

Eliminar un negocio y sus productos asociados
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Selecciona eliminar un negocio
    Sistema->>Vendedor: Pide confirmación de eliminación
    Vendedor->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Elimina el negocio y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

Acceder y editar/eliminar solo negocios propios
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios del vendedor
    BaseDatos-->>Sistema: Negocios del vendedor
    Vendedor->>Sistema: Selecciona un negocio que le pertenece
    Sistema->>Vendedor: Muestra opciones de editar y eliminar
    Vendedor->>Sistema: Edita o elimina su negocio
    Sistema->>BaseDatos: Guarda los cambios o elimina el negocio
    BaseDatos-->>Sistema: Confirmación de cambio/eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

Ver solo negocios activos como cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta todos los negocios activos
    BaseDatos-->>Sistema: Lista de negocios activos
    Sistema->>Cliente: Muestra los negocios activos
```

Carga de imagen de logo en menos de 3 segundos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Subir logo del negocio
    Sistema->>Sistema: Procesar la carga de la imagen
    Sistema-->>Vendedor: Confirmación de carga completada en menos de 3 segundos
```

Subir logo de hasta 5 MB
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Selecciona imagen de logo
    Sistema->>Sistema: Verifica tamaño de la imagen
    alt Si la imagen es válida (menos de 5 MB)
        Sistema->>Vendedor: Procesar carga de logo
        Sistema-->>Vendedor: Confirma carga completada
    else Si la imagen es mayor de 5 MB
        Sistema->>Vendedor: Muestra error ""Tamaño de imagen demasiado grande""
    end
```


Publicar un nuevo producto
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario de publicación
    Sistema->>Vendedor: Muestra campos para nombre, descripción, precio, descuento y fecha de vencimiento
    Vendedor->>Sistema: Completa la información del producto
    Sistema->>BaseDatos: Guarda la información del producto
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

No permitir guardar producto sin negocio asociado
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Intenta guardar un nuevo producto
    Sistema->>BaseDatos: Verifica si el producto tiene un negocio asociado
    alt Si no hay negocio asociado
        Sistema->>Vendedor: Muestra mensaje de error ""No hay negocio asociado""
    else Si hay negocio asociado
        Sistema->>BaseDatos: Guarda el producto
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

Descuento mayor al 90%
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Ingresa un valor de descuento para el producto
    Sistema->>Sistema: Verifica si el descuento supera el 90%
    alt Si el descuento es mayor al 90%
        Sistema->>Vendedor: Muestra mensaje de error ""Descuento no puede superar el 90%""
    else Si el descuento es válido
        Sistema->>BaseDatos: Guarda el producto con el descuento
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

Ordenar productos por proximidad de vencimiento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de productos
    Sistema->>BaseDatos: Obtiene productos con fecha de vencimiento
    BaseDatos-->>Sistema: Lista de productos con fecha de vencimiento
    Sistema->>Sistema: Ordena productos por proximidad de vencimiento
    Sistema->>Cliente: Muestra lista ordenada con productos más cercanos a vencer primero
```


Ver precio original y con descuento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Visualiza producto con descuento
    Sistema->>Cliente: Muestra precio original y precio con descuento aplicado
    Sistema-->>Cliente: Muestra los dos precios (original y con descuento)
```

Tiempo de carga del formulario de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Accede al formulario de productos
    Sistema->>Sistema: Carga formulario de publicación
    alt Si el tiempo de carga es menor o igual a 2 segundos
        Sistema->>Vendedor: Muestra el formulario correctamente
    else Si el tiempo de carga supera los 2 segundos
        Sistema->>Vendedor: Muestra mensaje de error de carga lenta
    end
```

Procesamiento de imágenes de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Sube imagen del producto
    Sistema->>Sistema: Procesa la imagen
    Sistema->>Sistema: Comprime la imagen sin pérdida de calidad
    Sistema-->>Vendedor: Confirma carga y compresión de la imagen
```

Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```

Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```

Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```

Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```

Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```


Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```


Ver nombre, descripción y logo de cada negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    Sistema->>Cliente: Muestra lista con nombre, descripción y logo de cada negocio
```

Ver productos asociados a un negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Hace clic en un negocio
    Sistema->>BaseDatos: Consulta los productos asociados al negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra los productos disponibles con nombre, descripción y precio
```

Ver lista de productos en la vista del negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la vista de un negocio
    Sistema->>BaseDatos: Consulta los productos disponibles de ese negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra lista de productos con nombre, descripción y precio
```

Mensaje cuando no hay negocios registrados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    alt Si no hay negocios registrados
        Sistema->>Cliente: Muestra mensaje ""No hay negocios registrados actualmente""
    else Si hay negocios registrados
        BaseDatos-->>Sistema: Devuelve lista de negocios
        Sistema->>Cliente: Muestra la lista de negocios
    end
```

Ordenar negocios por nombre, ubicación o tipo de producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>Cliente: Muestra opciones de ordenación (nombre, ubicación, tipo de producto)
    Cliente->>Sistema: Selecciona opción de ordenación
    Sistema->>BaseDatos: Consulta negocios ordenados por la preferencia
    BaseDatos-->>Sistema: Devuelve lista ordenada
    Sistema->>Cliente: Muestra lista de negocios ordenada según la preferencia
```

Tiempo de carga de la lista de negocios (menos de 3 segundos)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    alt Si el tiempo de carga es menor a 3 segundos
        Sistema->>Cliente: Muestra la lista de negocios rápidamente
    else Si el tiempo de carga supera los 3 segundos
        Sistema->>Cliente: Muestra mensaje de error de carga lenta
    end
```

Diagrama de secuencia SAD: Accesibilidad en dispositivos móviles
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Accede al sitio desde un dispositivo móvil
    Sistema->>Sistema: Verifica compatibilidad con dispositivos móviles
    alt Si el sistema es accesible
        Sistema->>Cliente: Muestra la plataforma optimizada para pantallas pequeñas
    else Si el sistema no es accesible
        Sistema->>Cliente: Muestra mensaje de error de incompatibilidad
    end
```

Ver y agregar un producto al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve un producto disponible
    Sistema->>Cliente: Muestra información del producto
    Cliente->>Sistema: Hace clic en ""Agregar al carrito""
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido al carrito
    Sistema->>Cliente: Muestra notificación visual de éxito
```


Calcular el total con descuentos aplicados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve los productos en el carrito
    Sistema->>Carrito: Calcula el total con descuentos aplicados
    Carrito-->>Sistema: Total calculado
    Sistema->>Cliente: Muestra el total actualizado con descuento
```


Eliminar un producto del carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Elimina un producto del carrito
    Sistema->>Carrito: Elimina el producto seleccionado
    Carrito-->>Sistema: Producto eliminado correctamente
    Sistema->>Cliente: Muestra el carrito actualizado con el nuevo total
```

Ver el número total de productos y el subtotal
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Accede al carrito
    Sistema->>Carrito: Consulta el número total de productos y el subtotal
    Carrito-->>Sistema: Devuelve número total de productos y subtotal
    Sistema->>Cliente: Muestra número total de productos y subtotal
```

Notificación visual al añadir productos al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Añade un producto al carrito
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido
    Sistema->>Cliente: Muestra notificación visual de éxito
```

Actualización en tiempo real del carrito sin recargar la página
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Realiza un cambio en el carrito (añadir, eliminar productos)
    Sistema->>Carrito: Actualiza el carrito en tiempo real
    Carrito-->>Sistema: Carrito actualizado
    Sistema->>Cliente: Muestra el carrito actualizado sin recargar la página
```

Proceso de pago seguro con cifrado
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant ProcesadorDePago

    Cliente->>Sistema: Procede con el pago
    Sistema->>ProcesadorDePago: Solicita procesamiento seguro de pago
    ProcesadorDePago->>Sistema: Procesa pago cumpliendo con los estándares de cifrado
    Sistema->>Cliente: Muestra confirmación de pago exitoso
```

Generar reporte con ventas totales, productos vendidos y clientes atendidos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta ventas totales, productos vendidos y clientes atendidos
    BaseDatos-->>Sistema: Devuelve los datos
    Sistema->>Admin: Muestra ventas totales, productos vendidos y clientes atendidos
```

Generar reporte con un rango de fechas filtrado
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte con rango de fechas
    Sistema->>BaseDatos: Filtra datos según el rango de fechas seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados por fecha
```

Generar reporte con formato gráfico
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte gráfico
    Sistema->>BaseDatos: Consulta datos de ventas, productos y clientes
    BaseDatos-->>Sistema: Devuelve los datos requeridos
    Sistema->>Admin: Muestra los datos en formato gráfico
```

Filtrar datos por vendedor, negocio o producto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte filtrado por vendedor, negocio o producto
    Sistema->>BaseDatos: Filtra datos por vendedor, negocio o producto seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados
```

Acceso restringido a reportes solo para administradores autenticados
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita acceder a los reportes
    Sistema->>BaseDatos: Verifica si el usuario es un administrador autenticado
    alt Si es administrador autenticado
        BaseDatos-->>Sistema: Permite acceso a los reportes
        Sistema->>Admin: Muestra los reportes
    else Si no es administrador autenticado
        BaseDatos-->>Sistema: Niega el acceso
        Sistema->>Admin: Muestra mensaje de error ""Acceso denegado""
    end
```

Generar reporte en menos de 5 segundos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta los datos necesarios
    BaseDatos-->>Sistema: Devuelve los datos
    alt Si el tiempo de generación es menor a 5 segundos
        Sistema->>Admin: Muestra el reporte generado
    else Si el tiempo de generación supera los 5 segundos
        Sistema->>Admin: Muestra mensaje de error ""Tiempo de generación excedido""
    end
```

Exportar reporte a PDF
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema

    Admin->>Sistema: Solicita exportar reporte
    Sistema->>Sistema: Genera el reporte en formato PDF
    Sistema-->>Admin: Entrega el archivo PDF
```


Diagrama de secuencia: Flujo de suscripción y notificación por correo electrónico
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant BaseDatos
    participant Servicio_Correo

    Cliente->>API_Notificaciones: Solicita suscripción a una categoría de productos
    API_Notificaciones->>BaseDatos: Almacena suscripción del cliente
    BaseDatos-->>API_Notificaciones: Confirmación de suscripción
    API_Notificaciones->>Servicio_Correo: Envía solicitud de notificación
    Servicio_Correo-->>Cliente: Recibe correo con nuevos productos
```

Control de notificaciones cuando el vendedor desactiva un producto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Vendedor
    participant BaseDatos

    Cliente->>API_Notificaciones: Se suscribe a un producto
    API_Notificaciones->>BaseDatos: Registra suscripción del cliente
    BaseDatos-->>API_Notificaciones: Confirmación de suscripción
    Vendedor->>API_Notificaciones: Desactiva notificaciones del producto
    API_Notificaciones->>BaseDatos: Marca notificaciones como deshabilitadas
    BaseDatos-->>API_Notificaciones: Confirmación de desactivación
    Cliente->>API_Notificaciones: No recibe notificación del producto desactivado
```

Envío de notificación con detalles del producto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Servicio_Correo

    API_Notificaciones->>Servicio_Correo: Genera email con detalles (nombre, precio, fecha)
    Servicio_Correo-->>Cliente: Recibe email con información estructurada
```

Cliente elige cómo recibir notificaciones
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant BaseDatos

    Cliente->>API_Notificaciones: Selecciona tipo de notificación (correo, SMS o ambos)
    API_Notificaciones->>BaseDatos: Guarda preferencias del usuario
    BaseDatos-->>API_Notificaciones: Confirmación de preferencias
    API_Notificaciones->>Cliente: Confirma configuración de notificación
```

Notificaciones con enlaces directos al producto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Servicio_Correo

    API_Notificaciones->>Servicio_Correo: Genera mensaje con enlace al producto
    Servicio_Correo-->>Cliente: Recibe notificación con acceso directo al producto
```

Enviar notificaciones en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Servicio_Correo

    Cliente->>API_Notificaciones: Se suscribe a notificaciones
    API_Notificaciones->>Servicio_Correo: Procesa envío de notificación
    alt Si la notificación se envía en menos de 1 minuto
        Servicio_Correo-->>Cliente: Recibe notificación correctamente
    else Si hay retraso
        API_Notificaciones->>Cliente: Muestra error ""Notificación retrasada""
    end
```

Manejar hasta 100 notificaciones por minuto
```mermaid
sequenceDiagram
    participant Admin
    participant API_Notificaciones
    participant Servicio_Correo

    Admin->>API_Notificaciones: Activa el sistema de notificaciones
    API_Notificaciones->>Servicio_Correo: Procesa y envía notificaciones
    alt Si hay menos de 100 notificaciones por minuto
        Servicio_Correo-->>Cliente: Notificaciones entregadas sin retraso
    else Si hay más de 100 notificaciones por minuto
        API_Notificaciones->>Servicio_Correo: Distribuye carga y gestiona la cola de envío
        Servicio_Correo-->>Cliente: Todas las notificaciones entregadas correctamente
    end
```

### DIAGRAMA DE CLASES

```mermaid
classDiagram
    class Usuario {
        +int Id
        +string Nombre
        +string Correo
        +string Password
        +string Rol
    }

    class Negocio {
        +int Id
        +string Nombre
        +string Descripcion
        +string Direccion
        +string Ubicacion
        +string Logo
        +string Banner
        +int UsuarioId
        +int CategoriaId
        +int? Subcategoria1Id
        +int? Subcategoria2Id
    }

    class Producto {
        +int Id
        +string Nombre
        +double PrecioOriginal
        +double PrecioDescuento
        +bool PorExpirar
        +DateTime? FechaExpiracion
        +string Imagen
        +int NegocioId
        +string Descripcion
    }

    class Pedido {
        +int Id
        +DateTime Fecha
        +int UsuarioId
    }

    class DetallePedido {
        +int Id
        +int PedidoId
        +int ProductoId
        +int Cantidad
        +double Precio
    }

    class Categoria {
        +int Id
        +string Nombre
    }

    class Subcategoria {
        +int Id
        +string Nombre
    }

    %% Relaciones entre clases
    Usuario ""1"" --> ""0..*"" Negocio : Posee
    Negocio ""1"" --> ""0..*"" Producto : Ofrece
    Negocio ""1"" --> ""1"" Categoria : Pertenece
    Negocio ""1"" --> ""0..1"" Subcategoria : Tiene (Opcional)
    Producto ""1"" --> ""0..*"" DetallePedido : Contiene
    Pedido ""1"" --> ""0..*"" DetallePedido : Tiene
    Pedido ""1"" --> ""1"" Usuario : Realizado por
    DetallePedido ""1"" --> ""1"" Producto : Incluye
```

### DIAGRAMA DE PAQUETES: 

```mermaid
graph TD;
    subgraph LoopifyFinal
        subgraph App_Start
            BundleConfig[BundleConfig.cs]
            FilterConfig[FilterConfig.cs]
            RouteConfig[RouteConfig.cs]
        end
        
        subgraph Assets
            CSS[css]
            JS[js]
            Images[banner.jpg, lecheentera.jpg, LoppifyLogo.png, etc.]
        end
        
        subgraph Content
        end
        
        subgraph Controllers
            AdministradorController[AdministradorController.cs]
            ClienteController[ClienteController.cs]
            CuentaController[CuentaController.cs]
            VendedorController[VendedorController.cs]
        end
        
        subgraph Migrations
        end
        
        subgraph Models
            Categoria[Categoria.cs]
            DbContext[DbContext.cs]
            DetallePedido[DetallePedido.cs]
            Negocio[Negocio.cs]
            Pedido[Pedido.cs]
            Producto[Producto.cs]
            Subcategoria[Subcategoria.cs]
            Usuario[Usuario.cs]
        end
        
        subgraph Scripts
        end
        
        subgraph Views
            Administrador[Administrador]
            Cliente[Cliente]
            Cuenta[Cuenta]
            Shared[Shared]
            Vendedor[Vendedor]
        end
    end
```


### DIAGRAMA DE DESPLIEGUE

```mermaid
graph TD;
    subgraph Azure
        A[App Service - Aplicación ASP.NET Core]
        B[SQL Server - Base de Datos]
    end

    U[Usuario] -->|HTTPS| A
    A -->|Conexión SQL| B
```

### DIAGRAMA RELACIONAL BASE DE DATOS

```mermaid
erDiagram
    Usuarios {
        int UsuarioID PK
        string Nombre
        string Apellido
        string Email
        string PasswordHash
        string Rol
        datetime FechaRegistro
    }
    
    Negocios {
        int NegocioID PK
        string Nombre
        string Direccion
        string Telefono
        string Email
        int UsuarioID FK
    }
    
    Categorias {
        int CategoriaID PK
        string Nombre
    }
    
    Subcategorias {
        int SubcategoriaID PK
        string Nombre
        int CategoriaID FK
    }
    
    Productos {
        int ProductoID PK
        string Nombre
        string Descripcion
        decimal Precio
        int Stock
        int NegocioID FK
        int SubcategoriaID FK
    }
    
    Pedidos {
        int PedidoID PK
        datetime FechaPedido
        decimal Total
        string Estado
        int UsuarioID FK
    }
    
    DetallesPedidos {
        int DetalleID PK
        int PedidoID FK
        int ProductoID FK
        int Cantidad
        decimal PrecioUnitario
    }
    
    Usuarios ||--o{ Negocios : ""posee""
    Categorias ||--o{ Subcategorias : ""tiene""
    Subcategorias ||--o{ Productos : ""contiene""
    Negocios ||--o{ Productos : ""vende""
    Usuarios ||--o{ Pedidos : ""realiza""
    Pedidos ||--o{ DetallesPedidos : ""incluye""
    Productos ||--o{ DetallesPedidos : ""contiene""
```

### DIAGRAMA DE OBJETOS 

```mermaid
classDiagram
    class Usuario {
        +int Id
        +string Nombre
        +string Correo
        +string Password
        +string Rol
    }
    
    class Pedido {
        +int Id
        +DateTime Fecha
        +int UsuarioId
        +Usuario Usuario
        +ICollection~DetallePedido~ Detalles
    }
    
    class DetallePedido {
        +int Id
        +int PedidoId
        +Pedido Pedido
        +int ProductoId
        +Producto Producto
        +int Cantidad
        +double Precio
    }
    
    class Producto {
        +int Id
        +string Nombre
        +double PrecioOriginal
        +double PrecioDescuento
        +bool PorExpirar
        +DateTime? FechaExpiracion
        +string Imagen
        +int NegocioId
        +Negocio Negocio
        +string Descripcion
    }
    
    class Negocio {
        +int Id
        +string Nombre
        +string Descripcion
        +string Direccion
        +string Ubicacion
        +string Logo
        +string Banner
        +int UsuarioId
        +Usuario Usuario
        +int CategoriaId
        +Categoria Categoria
        +int? Subcategoria1Id
        +Subcategoria Subcategoria1
        +int? Subcategoria2Id
        +Subcategoria Subcategoria2
        +ICollection~Producto~ Productos
    }
    
    class Categoria {
        +int Id
        +string Nombre
    }
    
    class Subcategoria {
        +int Id
        +string Nombre
    }
    
    Usuario ""1"" --> ""*"" Pedido
    Pedido ""1"" --> ""*"" DetallePedido
    DetallePedido ""*"" --> ""1"" Producto
    Usuario ""1"" --> ""*"" Negocio
    Negocio ""1"" --> ""*"" Producto
    Negocio ""1"" --> ""1"" Categoria
    Negocio ""1"" --> ""0..1"" Subcategoria : Subcategoria1
    Negocio ""1"" --> ""0..1"" Subcategoria : Subcategoria2
```

### DIAGRAMA DE ACTIVIDADES 

![image](https://github.com/user-attachments/assets/2b710544-d1f8-4771-8ff1-f6311ce74d9c)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u1-tropa-del-infierno,proyecto,si982-2024-rec-u1-tropa-del-infierno,True,289,False,0,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18153984)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-proyectowebu2_soto_llantay,proyecto,si982-2024-rec-u2-proyectowebu2_soto_llantay,True,1084,False,6,True,False,True,"](https://classroom.github.com/a/JlnjGag6)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18156436)

# PROYECTO BOLSA DE TRABAJO

## INTEGRANTES :

| Nombre | Código |
|--------|--------|
| SOTO RODRIGUES Duanet | 2015051384 |
| LLLANTAY MACHACA Marjiory Grace   | 2020068951 |

## DIAGRAMA BASE DE DATOS 

![WhatsApp Image 2025-02-11 at 11 46 12 PM (1)](https://github.com/user-attachments/assets/0df1217a-30b9-4802-919c-a069a42511e5)

## DIAGRAMA DE PROCESO PROPUESTO

![image](https://github.com/user-attachments/assets/38c58bb0-a615-49ea-9133-e26fb2437f57)

## DIAGRAMA DE CLASES

![image](https://github.com/user-attachments/assets/fc4f5900-b2f5-496c-a6eb-dee6998e909d)

## DIAGRAMA DE ARQUITECTURA 
![image](https://github.com/user-attachments/assets/e9a10a52-3397-4a99-bddc-c399717e7e90)

## DIAGRAMA DE INFRAESTRUCTURA

![image](https://github.com/user-attachments/assets/cdac48ff-0daa-486b-ae55-94312f0dd097)"
UPT-FAING-EPIS/si982_2024-rec-proyecto_si982_2024-rec-u3-proyecto-formatos-01,si982_2024,rec-proyecto_si982_2024-rec-u3-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-conchaticahuanca,proyecto,si982-2024-rec-u2-conchaticahuanca,True,5650,False,0,True,False,True,"**FACULTAD DE INGENIERÍA**   

**ESCUELA PROFESIONAL DE INGENIERÍA DE SISTEMAS**   

![](img/Aspose.Words.64a506e7-bf2e-41ae-95af-f301b8fabc10.014.png)

Proyecto “Sistema Web para mejorar el aprendizaje de los estudiantes del VI ciclo de educación secundaria en el curso de Educación para el Trabajo”

**Integrantes:** 

|**Nº**  |**Código Universitario**  |**Apellidos y Nombres** |
| - | - | - |
|**1.-**  |**2017057849**  |**Concha Llaca, Gerardo Alejandro**  |
|**2.-** |**2020068765** |**Fiorela Milady Ticahuanca Cutipa** |
|**3.-** |**2017057851** |**Raul Marcelo Cuadros Napa** |

**CURSO : “Programación Web II”** 

**SECCION : “A”**   

**DOCENTE**  **:**   **Ing. “Patrick Cuadros Quiroga”**  

**Tacna - Perú**  **2025** 


**DIAGRAMA DE CASOS DE USO**

**HU01: Registrar Estudiantes**
![image](https://github.com/user-attachments/assets/eaf72bac-a9db-4e89-8e3f-bcff5eba49bc)

**HU02: Registrar Docentes**
![image](https://github.com/user-attachments/assets/cefead40-528c-4229-b75d-8bf81502e3af)

**HU03: Iniciar Sesión**
![image](https://github.com/user-attachments/assets/35273047-b9ac-4202-9d69-e81667fc38ca)

**HU04: Recuperar Contraseña**
![image](https://github.com/user-attachments/assets/ed141514-280e-48b8-889a-7d49b1f28024)

**HU05: Visualizar Contenidos**
![image](https://github.com/user-attachments/assets/95b8d2c4-1c87-4237-a2e0-a082a5b87fd4)

**HU06: Publicar Contenidos**
![image](https://github.com/user-attachments/assets/eb86e373-9572-4893-ba7a-0266bf5384ec)

**HU07: Registrar Asistencias**
![image](https://github.com/user-attachments/assets/b17e8d28-c173-4bcd-891d-23f73843a63b)

**HU08: Generar Reportes**
![image](https://github.com/user-attachments/assets/71705fad-a91d-43e2-aa74-80feb87b394b)

**HU09: Subir Tareas**
![image](https://github.com/user-attachments/assets/25b4ad55-6f34-4cfb-b7a6-3119fedeeef4)

**HU10: Asignar Evaluaciones**
![image](https://github.com/user-attachments/assets/4854fc57-08e2-48ad-ab11-63c1f2cc7686)

**HU11: Actualizar Perfil**
![image](https://github.com/user-attachments/assets/daec0867-9067-4eb2-b9c0-267f3fa35f24)

**HU12: Consultar Contenidos**
![image](https://github.com/user-attachments/assets/310a04f6-9fbd-41c3-b979-95561a0fde86)

**HU13: Gestionar Permisos**
![image](https://github.com/user-attachments/assets/6218696f-8277-4aa4-9525-3cde97b461e2)

**HU14: Generar Copias de Seguridad**
![image](https://github.com/user-attachments/assets/6f045511-3077-4753-a2f6-13fe10ed79f2)

**HU15: Crear Chat en Línea**
![image](https://github.com/user-attachments/assets/e1904978-8ffe-4f2b-9f9d-90f101108371)

**HU16: Enviar Notificaciones**
![image](https://github.com/user-attachments/assets/fd24f582-9875-4c3a-aaa5-0b3438d97915)

**HU17: Crear Grupos de Trabajo**
![image](https://github.com/user-attachments/assets/77e6f5f5-0538-44c4-8b4b-39d248b92ccb)

**HU18: Crear Foro de Discusión**
![image](https://github.com/user-attachments/assets/05c6c7c9-df8a-4fcf-81a3-cd2bd42c7379)

**HU19: Registrar Observaciones**
![image](https://github.com/user-attachments/assets/05b43dbe-4a06-48f7-8ce4-4cf5e11ddca7)

**HU20: Gestionar Cursos**
![image](https://github.com/user-attachments/assets/742ae63d-e186-49e4-bd1c-8d7ae63e6209)


**DIAGRAMA DE SECUENCIA**

**HU01: Registrar Estudiantes**
![image](https://github.com/user-attachments/assets/35ac48ab-da44-4d84-9966-450ddb6b4c04)

**HU02: Registrar Docentes**
![image](https://github.com/user-attachments/assets/fedd84fd-6735-40bd-9258-86b7b37c9a3f)

**HU03: Iniciar Sesión**
![image](https://github.com/user-attachments/assets/efc1e686-160d-4c92-91de-fa520054f0c9)

**HU04: Recuperar Contraseña**
![image](https://github.com/user-attachments/assets/1b2ffc03-f393-4747-8764-64969c66621f)

**HU05: Visualizar Contenidos**
![image](https://github.com/user-attachments/assets/9d82a9d5-beb2-46d1-a6a2-dbd11bda7724)

**HU06: Publicar Contenidos**
![image](https://github.com/user-attachments/assets/dbec96f8-adf2-4068-bad3-b39d30b019c3)

**HU07: Registrar Asistencias**
![image](https://github.com/user-attachments/assets/2dd05e47-8546-494b-b06f-006be5c0357e)

**HU08: Generar Reportes**
![image](https://github.com/user-attachments/assets/c71d41f0-ca71-429d-aa2a-f1fecab0c4b6)

**HU09: Subir Tareas**
![image](https://github.com/user-attachments/assets/f520051a-a419-4a9f-8aaf-89fa51b72c2a)

**HU10: Asignar Evaluaciones**
![image](https://github.com/user-attachments/assets/4ad9c9dc-9d52-4430-be82-b28cf7421728)

**HU11: Actualizar Perfil**
![image](https://github.com/user-attachments/assets/0b51d6d6-5257-4d35-a93d-ff0b45d2fad5)

**HU12: Consultar Contenidos**
![image](https://github.com/user-attachments/assets/d9f9eaed-dcc5-4c40-98c2-69c867d4e921)

**HU13: Gestionar Permisos**
![image](https://github.com/user-attachments/assets/78f0dc54-8770-4a61-9bb5-801cd6dbb032)

**HU14: Generar Copias de Seguridad**
![image](https://github.com/user-attachments/assets/0c8a6754-f870-4093-ac03-cd86f325cf09)

**HU15: Crear Chat en Línea**
![image](https://github.com/user-attachments/assets/e263c750-2747-4503-a52e-3093990da42d)

**HU16: Enviar Notificaciones**
![image](https://github.com/user-attachments/assets/c879e92a-a9c9-4442-af1f-1b4219049af4)

**HU17: Crear Grupos de Trabajo**
![image](https://github.com/user-attachments/assets/4acb2f7c-3c15-41e4-b972-87839a6feac3)

**HU18: Crear Foro de Discusión**
![image](https://github.com/user-attachments/assets/95bc4e1f-cada-43f4-9e90-ace13b479883)

**HU19: Registrar Observaciones**
![image](https://github.com/user-attachments/assets/7a184375-a324-49ea-abcf-a12fc2181b8c)

**HU20: Gestionar Cursos**
![image](https://github.com/user-attachments/assets/e3eb621c-b083-4fcf-b299-a1c0460ac664)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-proyectoweb2u2_vela_delacruz,proyecto,si982-2024-rec-u2-proyectoweb2u2_vela_delacruz,True,289,False,0,True,False,False,"](https://classroom.github.com/a/JlnjGag6)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18157750)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-proyectowebii-valverde-lizarraga,proyecto,si982-2024-rec-u2-proyectowebii-valverde-lizarraga,True,1109,False,6,True,False,True,"](https://classroom.github.com/a/JlnjGag6)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18167507)
# Sistema de Gestión de Reservas de Aulas y Laboratorios Universitarios

## Estudiantes:

| Apellido y Nombre                  |
|-------------------------------------|
| Valverde Zamora, Jean Pier Elias   |
| Lizarraga Pomareda, Sergio Pedro   |

## Diagrama de Clases

![image](https://github.com/user-attachments/assets/1171e796-bff3-44a0-ae29-b5783202b679)

## Diagrama de Arquitectura

![image](https://github.com/user-attachments/assets/55222084-e04b-4623-bf2b-1cee67535d7d)

## Diagrama de Base de datos

![image](https://github.com/user-attachments/assets/d1fbb6a5-5c71-4b35-be8d-44f29058cf72)

## Diagrama de Despliegue

![image](https://github.com/user-attachments/assets/3ad874ea-8d94-40a4-a423-ff3b2e96ba51)

## Diagrama de Infraestructura

![image](https://github.com/user-attachments/assets/1b22aee7-20a3-4a49-866b-a9abed8b0e05)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u2-proyectou2_web2_medina_zevallos,proyecto,si982-2024-rec-u2-proyectou2_web2_medina_zevallos,True,2434,False,12,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17616412)
# PROYECTO U2: Sistema Web ""EventifyMe"" para la gestión y reserva de eventos

### Diagrama de Casos de Uso
<img src=""https://github.com/user-attachments/assets/bdb8a116-e15b-43f5-a4c1-4f4a70d3414e"" alt=""Diagrama de Casos de Uso"" width=""600""/>

### Diagrama de Secuencia

#### Inicio de Sesión
<img src=""https://github.com/user-attachments/assets/46fc7d1e-ac2b-4552-8495-73a63b37098e"" alt=""Diagrama de Secuencia - Inicio de Sesión"" width=""600""/>

#### Registro de Usuarios
<img src=""https://github.com/user-attachments/assets/6206e5ea-2c79-4de9-8657-e0c487678708"" alt=""Diagrama de Secuencia - Registro de Usuarios"" width=""600""/>

#### Gestión de Reservas
<img src=""https://github.com/user-attachments/assets/6287b7f7-5479-425a-a3f6-56c5f6aa3645"" alt=""Diagrama de Secuencia - Gestión de Reservas"" width=""600""/>

#### Pagos Seguros
<img src=""https://github.com/user-attachments/assets/42c5128f-75cc-4b42-a450-456c045f8222"" alt=""Diagrama de Secuencia - Pagos Seguros"" width=""600""/>

#### Publicación de Comentarios
<img src=""https://github.com/user-attachments/assets/d98e1158-6936-4b2d-8959-0d9f3ba3afbb"" alt=""Diagrama de Secuencia - Publicación de Comentarios"" width=""600""/>

#### Visualización del Catálogo de Eventos
<img src=""https://github.com/user-attachments/assets/1a758897-6a1e-4f1a-91d6-53e0b5027af5"" alt=""Diagrama de Secuencia - Visualización del Catálogo de Eventos"" width=""600""/>

#### Interacción con Chatbot
<img src=""https://github.com/user-attachments/assets/29f5d48f-d349-4148-aaa5-cfa6dab214d9"" alt=""Diagrama de Secuencia - Interacción con Chatbot"" width=""600""/>

#### Consulta de Reservas
<img src=""https://github.com/user-attachments/assets/24fb5581-1c62-44c2-b921-06a29d174829"" alt=""Diagrama de Secuencia - Consulta de Reservas"" width=""600""/>

#### Notificaciones Automáticas
<img src=""https://github.com/user-attachments/assets/3cc12065-376b-41ef-be62-f967ab2196b6"" alt=""Diagrama de Secuencia - Notificaciones Automáticas"" width=""600""/>

#### Filtrado de Eventos por Categorías
<img src=""https://github.com/user-attachments/assets/a57d1dc5-7324-4857-8c33-7fb66942ab89"" alt=""Diagrama de Secuencia - Filtrado de Eventos por Categorías"" width=""600""/>"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-sistemaveterinaria_ccalli_apaza_web2,proyecto,si982-2024-rec-u3-sistemaveterinaria_ccalli_apaza_web2,True,7156,False,5,True,False,True,"﻿**Sistema de Gestión Veterinaria ""Animalia"" Tacna** 

**Estudiantes:** 

**Apellido y Nombre** Apaza Mamani, Edward Hernan CCalli Chata, Joel Robert 

1. **Antecedentes** 

El sistema de gestión veterinaria surge como una necesidad ante las deficiencias en el manejo de historiales clínicos, control de inventarios y administración de citas en clínicas veterinarias. La falta de digitalización y la gestión manual generan errores, retrasos y pérdida de información. Este proyecto busca optimizar la administración de las clínicas veterinarias mediante un software eficiente y automatizado. 

2. **Planteamiento del Problema** 
1. **Problema** 

Las clínicas veterinarias enfrentan dificultades en la organización de historiales médicos, control de productos y notificación de citas a clientes. La ausencia de un sistema centralizado dificulta la eficiencia operativa y el seguimiento adecuado de los pacientes. 

2. **Justificación** 

Implementar un sistema de gestión permitirá mejorar la calidad del servicio veterinario, reduciendo tiempos administrativos, evitando pérdida de información y optimizando la relación con los clientes. 

3. **Alcance** 

El sistema abarcará la gestión de historiales clínicos, administración de inventarios, control de citas, notificaciones automáticas por correo electrónico y generación de reportes en PDF. No incluirá telemedicina ni facturación electrónica en esta primera fase. 

3. **Objetivos** 

**Objetivo general** 

Desarrollar un sistema de gestión veterinaria que optimice la administración de clínicas veterinarias y mejore la experiencia del cliente. 

**Objetivos específicos** 

- Digitalizar los historiales clínicos de los pacientes. 
- Implementar un sistema de control de productos veterinarios. 
- Automatizar las notificaciones de citas y recordatorios. 
- Generar reportes en formato PDF para análisis de gestión. 
4. **Marco Teórico** 
- Conceptos y fundamentos de la gestión veterinaria. 
- Aplicaciones de tecnologías de la información en el ámbito veterinario. 
- Seguridad y normativas aplicadas al software de gestión clínica. 
5. **Desarrollo de la Solución** 
1. **Análisis de Factibilidad** 
- **Evaluación técnica:** Tecnologías y recursos disponibles. 
- **Evaluación económica:** Costos de desarrollo y mantenimiento. 
- **Evaluación operativa:** Beneficios y eficiencia operativa esperada. 
- **Evaluación social:** Impacto en la comunidad veterinaria. 
- **Evaluación legal:** Cumplimiento de normativas sobre datos clínicos. 
- **Evaluación ambiental:** Uso responsable de recursos digitales. 
2. **Tecnología de Desarrollo** 
- **Lenguajes de programación:** ASP.NET/SQL SERVER para backend. 
- **Base de datos:** SQL SERVER para almacenamiento de información. 
- **Infraestructura:** Implementación en la nube para accesibilidad y seguridad. 
3. **Metodología de Implementación** 
- Uso de metodologías ágiles (Scrum) para desarrollo iterativo. 
- Creación de documentos de **Visión**, **SRS** y **SAD** como referencia técnica. 
6. **Cronograma** 
- Planificación detallada de actividades mediante diagrama de Gantt. 
- Fases de análisis, diseño, desarrollo, pruebas e implementación. 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.001.png)

## 7. **Presupuesto**

### **Costos Generales**

| **Elemento**                 | **Costo (S/.)** |
|------------------------------|---------------|
| Infraestructura en la nube   | 0             |
| Licencias de software        | 600           |
| Equipos adicionales          | 1,200         |

### **Costos Operativos Durante el Desarrollo**

| **Elemento**       | **Costo Mensual (S/.)** |
|--------------------|---------------------|
| Servicios básicos | 300                 |
| Internet         | 150                 |

### **Costos de Personal**

| **Rol**                 | **Cantidad** | **Salario Mensual (S/.)** | **Duración (Meses)** | **Costo Total (S/.)** |
|-------------------------|------------|------------------------|-----------------|----------------|
| Desarrollador Backend  | 1          | 1,200                  | 2               | 2,400          |
| Desarrollador Frontend | 1          | 1,200                  | 2               | 2,400          |

### **Costos Totales**

| **Categoría**        | **Costo Total (S/.)** |
|----------------------|-----------------|
| Costos Generales     | 2,600           |
| Costos Operativos    | 900             |
| Costos de Personal   | 4,800           |
| **Total**           | **8,300**       |

8. **Conclusiones ![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.002.png)**
- Beneficios esperados en la administración de clínicas veterinarias. 
- Impacto positivo en la eficiencia y reducción de errores administrativos. 
- Potencial de escalabilidad y mejoras futuras. 
9. **Recomendaciones** 
- Sugerencias para la optimización del sistema a largo plazo. 
- Evaluación periódica de la funcionalidad y rendimiento. 
10. **Bibliografía** 
- Smith, J. (2020). *Veterinary Management Systems: A Digital Approach.* Springer. DOI: 10.1007/s00134-020-06134 
- Brown, L. & White, K. (2019). *Technological Advancements in Animal Healthcare.* Elsevier. DOI: 10.1016/j.vet.2019.05.012 
- World Health Organization (2021). *Digital Innovations in Veterinary Practice.* WHO Press. Available 

  at:[ https://www.who.int/publications/i/item/digital-vet-2021 ](https://www.who.int/publications/i/item/digital-vet-2021)

11. **Anexos** 

**Anexo 01 Factibilidad Económica ![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.003.png)Anexo 02 Visión ![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.004.png)**

**Anexo 03 – SRS** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.005.jpeg)

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.006.png)

**Diagrama de Clases** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.007.jpeg)

**Diagrama de Base de Datos** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.008.jpeg)

**Diagrama de Arquitectura** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.009.jpeg)

**Diagrama de Componentes** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.010.png)

**Diagrama de Actividades** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.011.png)

**Diagrama de despliegue** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.012.jpeg)

**Diagrama de Infraestructura** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.013.jpeg)

**Infracost Report:** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.014.jpeg)

**Diagrama de Arquitectura:** 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.015.jpeg)

Despliegue de Sistema en la Nube: 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.016.jpeg)

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.017.jpeg)

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.018.jpeg)

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.019.jpeg)

Gestión de Productos: 

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.020.jpeg)

Notificaciones:  

![](img/Aspose.Words.7ac47401-2047-4bfe-a396-00672ce642ec.021.jpeg)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-gestiondocentes_delacruz_vela_web2,proyecto,si982-2024-rec-u3-gestiondocentes_delacruz_vela_web2,True,4264,True,10,True,False,False,"# 📌 Sistema de Gestión y Evaluación de Docentes  
📍 **Escuela de Odontología - Universidad Privada de Tacna**  

## 📖 Descripción  
Este sistema permite la gestión eficiente de docentes en la **Escuela de Odontología**. Facilita el **registro de usuarios, evaluación docente, administración de roles y reportes académicos**.  

## 🚀 Funcionalidades  
✔ Registro y gestión de usuarios (administradores, docentes y estudiantes).  
✔ Evaluación docente mediante criterios predefinidos.  
✔ Registro y control de asistencias.  
✔ Administración de semestres y planes de estudio.  
✔ Generación de reportes académicos detallados.  
✔ Notificaciones de eventos educativos importantes.  
✔ Interfaz web intuitiva y adaptable.  

---

## 🖥️ **Cómo Usar el Sistema**  

### **1️⃣ Login de Acceso**  
El usuario debe ingresar sus credenciales en la pantalla de inicio de sesión.  
📌 **Ejemplo:**  
![Login](img/funcionamiento/imagen1.png)  

### **2️⃣ Dashboard del Proyecto**  
Una vez dentro, el usuario accede al panel de control, donde puede gestionar todas las funcionalidades.  
📌 **Ejemplo:**  
![Dashboard](img/funcionamiento/imagen2.png)  

### **3️⃣ Lista de Usuarios**  
El administrador puede visualizar la lista de usuarios registrados y gestionar permisos.  
📌 **Ejemplo:**  
![Lista de Usuarios](img/funcionamiento/imagen3.png)  

### **4️⃣ Gestión de Docentes**  
Permite registrar nuevos docentes, modificar datos y asignarles roles específicos.  
📌 **Ejemplo:**  
![Gestión de Docentes](img/funcionamiento/imagen4.png)  

---


## 🛠️ **Tecnologías Utilizadas**  
✅ **ASP.NET MVC** - Estructura del sistema  
✅ **C#** - Desarrollo del backend  
✅ **SQL Server** - Base de datos  
✅ **HTML, CSS, JavaScript** - Interfaz de usuario  
✅ **Bootstrap** - Diseño responsivo  

---

## 📥 **Instalación y Configuración**  
### **1️⃣ Clonar el Repositorio**  

git clone https://github.com/UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-gestiondocentes_delacruz_vela_web2.git
cd sistema-evaluacion-docentes



﻿**Casos de Uso** 

1. **Registro de Usuarios** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.001.jpeg)

2. **Inicio de Sesión** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.002.jpeg)

3. **Gestión de Roles** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.003.jpeg)

4. **Evaluación de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.004.jpeg)

5. **Creación y Edición de Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.005.jpeg)

6. **Asociación de Planes de Estudio con Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.006.jpeg)

7. **Registro de Asistencias de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.007.jpeg)

8. **Generación de Reportes Académicos** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.008.jpeg)

9. **Configuración de Perfil de Usuario** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.009.jpeg)

10. **Notificaciones de Eventos Importantes**

    ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.010.jpeg)

**Diagrama de Secuencia** 

1. **Registro de Usuarios** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.011.jpeg)

2. **Inicio de Sesión** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.012.jpeg)

3. **Gestión de Roles** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.013.jpeg)

4. **Evaluación de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.014.jpeg)

5. **Creación y Edición de Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.015.jpeg)

6. **Asociación de Planes de Estudio con Semestres** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.016.jpeg)

7. **Registro de Asistencias de Docentes** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.017.jpeg)

8. **Generación de Reportes Académicos** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.018.jpeg)

9. **Configuración de Perfil de Usuario** 

   ![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.019.png)

10. **Notificaciones de Eventos Importantes**

![](img/Aspose.Words.ef128a41-b49e-45ce-aea1-7a1561ed71b7.020.jpeg)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-sistemaloppify,proyecto,si982-2024-rec-u3-sistemaloppify,True,75953,False,88,True,True,True,"<h1 style=""text-align: center;"">CASOS DE USO</h1>

### Enlace Repositorio : https://github.com/tomasyoel/automatizacionloopify   


### Caso de Uso: Registro de Usuario 
```mermaid
graph TB
    A[Visitante] --> B[Registrarse en Loopify]
    B --> C[Acceder a funcionalidades según rol]
```

### Diagrama de Secuencia: Acceso al Formulario de Registro

```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Acceder al formulario de registro
    Sistema-->>Visitante: Mostrar formulario de registro
    Visitante->>Sistema: Completar los campos (nombre, correo y contraseña)
    Sistema-->>Visitante: Validar campos obligatorios
    Sistema-->>Visitante: Permitir continuar si los campos son válidos
```

### Diagrama de Secuencia: Asignación de Rol de Cliente

```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Completar registro
    Sistema-->>Cliente: Asignar rol de cliente automáticamente
    Sistema-->>Cliente: Confirmar registro exitoso
```

### Diagrama de Secuencia: Creación de Cuenta por Administrador

```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant Administrador

    Vendedor->>Sistema: Completar registro
    Sistema-->>Administrador: Notificar creación de cuenta pendiente
    Administrador->>Sistema: Aprobar o rechazar la cuenta
    Sistema-->>Vendedor: Notificar estado de la cuenta
```

### Diagrama de Secuencia: Validación de Correo Único

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro con correo
    Sistema-->>Sistema: Validar si el correo ya está registrado
    alt Correo no único
        Sistema-->>Usuario: Mostrar mensaje de error
    else Correo único
        Sistema-->>Usuario: Continuar con el registro
    end
```

### Diagrama de Secuencia: Mensaje de Confirmación de Registro

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro exitosamente
    Sistema-->>Usuario: Mostrar mensaje de confirmación
```

### Diagrama de Secuencia: Tiempo de Carga del Formulario

```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Acceder al formulario de registro
    Sistema-->>Visitante: Mostrar formulario en menos de 2 segundos
```

### Diagrama de Secuencia: Cifrado de Contraseña

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completar registro con contraseña
    Sistema-->>Sistema: Cifrar contraseña
    Sistema-->>Usuario: Confirmar registro exitoso
```


### Caso de Uso: Inicio de Sesion 

```mermaid
graph TB
    A[Usuario registrado] --> B[Acceder al formulario de inicio de sesión]
    B --> C[Ingresar credenciales]
    C --> D[Validar credenciales]
    D --> E{¿Credenciales válidas?}
    E -- No --> F[Mostrar mensaje de error]
    E -- Sí --> G[Acceder a la cuenta según el rol] 
```

### Diagrama de Secuencia: Campos de Inicio de Sesión

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Acceder al formulario de inicio de sesión
    Sistema-->>Usuario: Mostrar campos para correo y contraseña
```

### Diagrama de Secuencia: Mensaje de Error por Credenciales Incorrectas

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intentar iniciar sesión con credenciales incorrectas
    Sistema-->>Sistema: Validar credenciales
    Sistema-->>Usuario: Mostrar mensaje de error claro
```

### Diagrama de Secuencia: Redirección según Rol

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Iniciar sesión con credenciales correctas
    Sistema-->>Sistema: Verificar rol del usuario
    Sistema-->>Usuario: Redirigir según rol (ej. cliente, vendedor, administrador)
```

### Diagrama de Secuencia: Redirección para Administrador

```mermaid
sequenceDiagram
    participant Administrador
    participant Sistema

    Administrador->>Sistema: Iniciar sesión
    Sistema-->>Sistema: Verificar rol de administrador
    Sistema-->>Administrador: Redirigir a la vista de gestión de vendedores y negocios
```

### Diagrama de Secuencia: Recuperación de Contraseña

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Solicitar recuperación de contraseña
    Sistema-->>Usuario: Enviar correo con enlace para restablecer contraseña
```

### Diagrama de Secuencia: Inicio de Sesión en Menos de 3 Segundos

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intentar iniciar sesión
    Sistema-->>Sistema: Validar credenciales
    Sistema-->>Usuario: Completar el inicio de sesión en menos de 3 segundos
```

### Diagrama de Secuencia: Expiración de Sesión por Inactividad

```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Estar inactivo durante 30 minutos
    Sistema-->>Sistema: Detectar inactividad
    Sistema-->>Usuario: Expirar sesión automáticamente
```

### Caso de Uso: Gestion de Vendedores 

```mermaid
graph TB
    A[Administrador] --> B[Crear cuenta de vendedor]
    A --> C[Editar cuenta de vendedor]
    A --> D[Eliminar cuenta de vendedor]
    B --> E[Cuenta creada correctamente]
    C --> F[Cambios guardados correctamente]
    D --> G[Cuenta eliminada correctamente]
```

### Diagrama de secuencia: Opciones para editar y eliminar vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores
    Sistema->>Usuario: Muestra lista con opciones de editar y eliminar
```

### Diagrama de secuencia: Eliminar un vendedor y sus negocios y productos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Selecciona eliminar vendedor
    Sistema->>Usuario: Confirma eliminación
    Usuario->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Eliminar vendedor, negocios y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Usuario: Muestra mensaje de éxito
```

### Diagrama de secuencia: Asignar un negocio al vendedor al crear uno nuevo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Crea nuevo vendedor
    Sistema->>Usuario: Solicita información del vendedor
    Usuario->>Sistema: Completa información
    Sistema->>Usuario: Solicita asignar un negocio
    Usuario->>Sistema: Asigna negocio
    Sistema->>BaseDatos: Guardar nuevo vendedor con negocio asignado
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
```

### Diagrama de secuencia: Validación de datos al registrar o actualizar vendedor
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Intenta guardar vendedor
    Sistema->>Sistema: Valida datos (nombre, correo, teléfono)
    Sistema-->>Usuario: Datos válidos
    Sistema->>BaseDatos: Guardar datos del vendedor
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
    Sistema-->>Usuario: Muestra mensaje de error si los datos no son válidos
```

### Diagrama de secuencia: Vendedor eliminado no aparece en la lista
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores (sin el eliminado)
    Sistema->>Usuario: Muestra lista actualizada
```

### Diagrama de secuencia: Buscar vendedor específico por nombre o correo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Inicia búsqueda por nombre o correo
    Sistema->>BaseDatos: Buscar vendedor por nombre o correo
    BaseDatos-->>Sistema: Resultados de búsqueda
    Sistema->>Usuario: Muestra resultados de búsqueda
```

### Diagrama de secuencia: Reflejo en tiempo real de cambios en la lista de vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Realiza cambio (crear, editar o eliminar vendedor)
    Sistema->>BaseDatos: Confirma cambio en la base de datos
    BaseDatos-->>Sistema: Confirmación de cambio
    Sistema->>Usuario: Muestra lista de vendedores actualizada en menos de 5 segundos
```

### Caso de Uso: Gestión de negocios
```mermaid
graph TB
    A[Vendedor] --> B[Crear negocio]
    A --> C[Editar negocio]
    A --> D[Eliminar negocio]
    B --> E[Negocio creado correctamente]
    C --> F[Cambios guardados correctamente]
    D --> G[Negocio eliminado correctamente]
```



### Diagrama de secuencia: Registrar o editar un negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario para registrar/editar negocio
    Sistema->>Vendedor: Muestra campos para ingresar nombre, descripción y logo
    Vendedor->>Sistema: Ingresa la información del negocio
    Sistema->>BaseDatos: Guarda la información del negocio
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Guardar cambios en la información del negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Realiza cambios en la información del negocio
    Sistema->>BaseDatos: Guarda los cambios realizados
    BaseDatos-->>Sistema: Confirmación de actualización
    Sistema->>Vendedor: Muestra mensaje de éxito
    Sistema->>Vendedor: Actualiza la vista con la nueva información
```

### Diagrama de secuencia: Eliminar un negocio y sus productos asociados
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Selecciona eliminar un negocio
    Sistema->>Vendedor: Pide confirmación de eliminación
    Vendedor->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Elimina el negocio y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Acceder y editar/eliminar solo negocios propios
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios del vendedor
    BaseDatos-->>Sistema: Negocios del vendedor
    Vendedor->>Sistema: Selecciona un negocio que le pertenece
    Sistema->>Vendedor: Muestra opciones de editar y eliminar
    Vendedor->>Sistema: Edita o elimina su negocio
    Sistema->>BaseDatos: Guarda los cambios o elimina el negocio
    BaseDatos-->>Sistema: Confirmación de cambio/eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: Ver solo negocios activos como cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta todos los negocios activos
    BaseDatos-->>Sistema: Lista de negocios activos
    Sistema->>Cliente: Muestra los negocios activos
```

### Diagrama de secuencia: Carga de imagen de logo en menos de 3 segundos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Subir logo del negocio
    Sistema->>Sistema: Procesar la carga de la imagen
    Sistema-->>Vendedor: Confirmación de carga completada en menos de 3 segundos
```

### Diagrama de secuencia: Subir logo de hasta 5 MB
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Selecciona imagen de logo
    Sistema->>Sistema: Verifica tamaño de la imagen
    alt Si la imagen es válida (menos de 5 MB)
        Sistema->>Vendedor: Procesar carga de logo
        Sistema-->>Vendedor: Confirma carga completada
    else Si la imagen es mayor de 5 MB
        Sistema->>Vendedor: Muestra error ""Tamaño de imagen demasiado grande""
    end
```

### Caso de Uso: Publicación de productos
```mermaid
graph TB
    A[Vendedor] --> B[Agregar producto con descuento]
    B --> C[Producto agregado al negocio]
    C --> D[Producto visible para clientes]
```

### Diagrama de secuencia: Publicar un nuevo producto
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario de publicación
    Sistema->>Vendedor: Muestra campos para nombre, descripción, precio, descuento y fecha de vencimiento
    Vendedor->>Sistema: Completa la información del producto
    Sistema->>BaseDatos: Guarda la información del producto
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

### Diagrama de secuencia: No permitir guardar producto sin negocio asociado
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Intenta guardar un nuevo producto
    Sistema->>BaseDatos: Verifica si el producto tiene un negocio asociado
    alt Si no hay negocio asociado
        Sistema->>Vendedor: Muestra mensaje de error ""No hay negocio asociado""
    else Si hay negocio asociado
        Sistema->>BaseDatos: Guarda el producto
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

### Diagrama de secuencia: Descuento mayor al 90%
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Ingresa un valor de descuento para el producto
    Sistema->>Sistema: Verifica si el descuento supera el 90%
    alt Si el descuento es mayor al 90%
        Sistema->>Vendedor: Muestra mensaje de error ""Descuento no puede superar el 90%""
    else Si el descuento es válido
        Sistema->>BaseDatos: Guarda el producto con el descuento
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

### Diagrama de secuencia: Ordenar productos por proximidad de vencimiento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de productos
    Sistema->>BaseDatos: Obtiene productos con fecha de vencimiento
    BaseDatos-->>Sistema: Lista de productos con fecha de vencimiento
    Sistema->>Sistema: Ordena productos por proximidad de vencimiento
    Sistema->>Cliente: Muestra lista ordenada con productos más cercanos a vencer primero
```

### Diagrama de secuencia: Ver precio original y con descuento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Visualiza producto con descuento
    Sistema->>Cliente: Muestra precio original y precio con descuento aplicado
    Sistema-->>Cliente: Muestra los dos precios (original y con descuento)
```

### Diagrama de secuencia: Tiempo de carga del formulario de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Accede al formulario de productos
    Sistema->>Sistema: Carga formulario de publicación
    alt Si el tiempo de carga es menor o igual a 2 segundos
        Sistema->>Vendedor: Muestra el formulario correctamente
    else Si el tiempo de carga supera los 2 segundos
        Sistema->>Vendedor: Muestra mensaje de error de carga lenta
    end
```

### Diagrama de secuencia: Procesamiento de imágenes de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Sube imagen del producto
    Sistema->>Sistema: Procesa la imagen
    Sistema->>Sistema: Comprime la imagen sin pérdida de calidad
    Sistema-->>Vendedor: Confirma carga y compresión de la imagen
```

### Caso de Uso: Recuperacion de contraseña 
```mermaid
graph TB
    A[Usuario registrado] --> B[Solicitar recuperación de contraseña]
    B --> C[Ingresar correo asociado a la cuenta]
    C --> D[Validar correo]
    D --> E{¿Correo válido?}
    E -- No --> F[Mostrar mensaje de error]
    E -- Sí --> G[Enviar enlace de recuperación]
    G --> H[Acceder a la página para restablecer contraseña]
    H --> I[Restablecer contraseña]
    I --> J[Contraseña restablecida correctamente]
```

### Diagrama de secuencia: Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

### Diagrama de secuencia: Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

### Diagrama de secuencia: Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

### Diagrama de secuencia: Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

### Diagrama de secuencia: Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```
### Diagrama de secuencia: Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```

### Diagrama de secuencia: Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```

### Caso de Uso: Visualizacion de Negocios
```mermaid
graph TB
    A[Cliente] --> B[Ver lista de negocios disponibles]
    B --> C[Explorar los productos del negocio]
```

### Diagrama de secuencia: Ver nombre, descripción y logo de cada negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    Sistema->>Cliente: Muestra lista con nombre, descripción y logo de cada negocio
```

### Diagrama de secuencia: Ver productos asociados a un negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Hace clic en un negocio
    Sistema->>BaseDatos: Consulta los productos asociados al negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra los productos disponibles con nombre, descripción y precio
```

### Diagrama de secuencia: Ver lista de productos en la vista del negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la vista de un negocio
    Sistema->>BaseDatos: Consulta los productos disponibles de ese negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra lista de productos con nombre, descripción y precio
```

### Diagrama de secuencia: Mensaje cuando no hay negocios registrados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    alt Si no hay negocios registrados
        Sistema->>Cliente: Muestra mensaje ""No hay negocios registrados actualmente""
    else Si hay negocios registrados
        BaseDatos-->>Sistema: Devuelve lista de negocios
        Sistema->>Cliente: Muestra la lista de negocios
    end
```

### Diagrama de secuencia: Ordenar negocios por nombre, ubicación o tipo de producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>Cliente: Muestra opciones de ordenación (nombre, ubicación, tipo de producto)
    Cliente->>Sistema: Selecciona opción de ordenación
    Sistema->>BaseDatos: Consulta negocios ordenados por la preferencia
    BaseDatos-->>Sistema: Devuelve lista ordenada
    Sistema->>Cliente: Muestra lista de negocios ordenada según la preferencia
```

### Digrama de secuencia: Tiempo de carga de la lista de negocios (menos de 3 segundos)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    alt Si el tiempo de carga es menor a 3 segundos
        Sistema->>Cliente: Muestra la lista de negocios rápidamente
    else Si el tiempo de carga supera los 3 segundos
        Sistema->>Cliente: Muestra mensaje de error de carga lenta
    end
```

### Diagrama de secuencia: Accesibilidad en dispositivos móviles
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Accede al sitio desde un dispositivo móvil
    Sistema->>Sistema: Verifica compatibilidad con dispositivos móviles
    alt Si el sistema es accesible
        Sistema->>Cliente: Muestra la plataforma optimizada para pantallas pequeñas
    else Si el sistema no es accesible
        Sistema->>Cliente: Muestra mensaje de error de incompatibilidad
    end
```

### Caso de Uso: Compra de Productos 

```mermaid
graph TB
    A[Cliente] --> B[Seleccionar producto]
    B --> C[Agregar producto al carrito de compras]
    C --> D[Producto agregado correctamente]
    D --> E[Visualizar carrito de compras]
```

### Diagrama de secuencia: Ver y agregar un producto al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve un producto disponible
    Sistema->>Cliente: Muestra información del producto
    Cliente->>Sistema: Hace clic en ""Agregar al carrito""
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido al carrito
    Sistema->>Cliente: Muestra notificación visual de éxito
```

### Diagrama de secuencia: Calcular el total con descuentos aplicados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve los productos en el carrito
    Sistema->>Carrito: Calcula el total con descuentos aplicados
    Carrito-->>Sistema: Total calculado
    Sistema->>Cliente: Muestra el total actualizado con descuento
```

### Diagrama de secuencia: Eliminar un producto del carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Elimina un producto del carrito
    Sistema->>Carrito: Elimina el producto seleccionado
    Carrito-->>Sistema: Producto eliminado correctamente
    Sistema->>Cliente: Muestra el carrito actualizado con el nuevo total
```

### Diagrama de secuencia: Ver el número total de productos y el subtotal
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Accede al carrito
    Sistema->>Carrito: Consulta el número total de productos y el subtotal
    Carrito-->>Sistema: Devuelve número total de productos y subtotal
    Sistema->>Cliente: Muestra número total de productos y subtotal
```

### Diagrama de secuencia: Notificación visual al añadir productos al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Añade un producto al carrito
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido
    Sistema->>Cliente: Muestra notificación visual de éxito
```

### Diagrama de secuencia: Actualización en tiempo real del carrito sin recargar la página
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Realiza un cambio en el carrito (añadir, eliminar productos)
    Sistema->>Carrito: Actualiza el carrito en tiempo real
    Carrito-->>Sistema: Carrito actualizado
    Sistema->>Cliente: Muestra el carrito actualizado sin recargar la página
```

### Diagrama de secuencia: Proceso de pago seguro con cifrado
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant ProcesadorDePago

    Cliente->>Sistema: Procede con el pago
    Sistema->>ProcesadorDePago: Solicita procesamiento seguro de pago
    ProcesadorDePago->>Sistema: Procesa pago cumpliendo con los estándares de cifrado
    Sistema->>Cliente: Muestra confirmación de pago exitoso
```

### Caso de Uso: Reportes 

```mermaid
graph TB
    A[Administrador] --> B[Generar reporte de ventas]
    A --> C[Generar reporte de productos]
    B --> D[Reporte de ventas generado]
    C --> E[Reporte de productos generado]
    D --> F[Evaluar rendimiento de la plataforma]
    E --> F
```

### Diagrama de secuencia: Generar reporte con ventas totales, productos vendidos y clientes atendidos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta ventas totales, productos vendidos y clientes atendidos
    BaseDatos-->>Sistema: Devuelve los datos
    Sistema->>Admin: Muestra ventas totales, productos vendidos y clientes atendidos
```

### Diagrama de secuencia: Generar reporte con un rango de fechas filtrado
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte con rango de fechas
    Sistema->>BaseDatos: Filtra datos según el rango de fechas seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados por fecha
```

### Diagrama de secuencia: Generar reporte con formato gráfico
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte gráfico
    Sistema->>BaseDatos: Consulta datos de ventas, productos y clientes
    BaseDatos-->>Sistema: Devuelve los datos requeridos
    Sistema->>Admin: Muestra los datos en formato gráfico
```

### Diagrama de secuencia: Filtrar datos por vendedor, negocio o producto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte filtrado por vendedor, negocio o producto
    Sistema->>BaseDatos: Filtra datos por vendedor, negocio o producto seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados
```

### Diagrama de secuencia: Acceso restringido a reportes solo para administradores autenticados
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita acceder a los reportes
    Sistema->>BaseDatos: Verifica si el usuario es un administrador autenticado
    alt Si es administrador autenticado
        BaseDatos-->>Sistema: Permite acceso a los reportes
        Sistema->>Admin: Muestra los reportes
    else Si no es administrador autenticado
        BaseDatos-->>Sistema: Niega el acceso
        Sistema->>Admin: Muestra mensaje de error ""Acceso denegado""
    end
```

### Diagrama de secuencia: Generar reporte en menos de 5 segundos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta los datos necesarios
    BaseDatos-->>Sistema: Devuelve los datos
    alt Si el tiempo de generación es menor a 5 segundos
        Sistema->>Admin: Muestra el reporte generado
    else Si el tiempo de generación supera los 5 segundos
        Sistema->>Admin: Muestra mensaje de error ""Tiempo de generación excedido""
    end
```

### Diagrama de secuencia: Exportar reporte a PDF
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema

    Admin->>Sistema: Solicita exportar reporte
    Sistema->>Sistema: Genera el reporte en formato PDF
    Sistema-->>Admin: Entrega el archivo PDF
```

### Caso de Uso: Notificaciones 

```mermaid
graph TB
    A[Cliente] --> B[Suscribirse a notificaciones]
    B --> C[Recibir notificación de nuevos productos]
    C --> D[Ver detalles del producto]
    D --> E[Aprovechar ofertas antes de que se agoten]
```

### Diagrama de secuencia: Recibir notificaciones por correo electrónico al suscribirse a una categoría de productos o negocios
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos
    participant Correo

    Cliente->>Sistema: Se suscribe a una categoría de productos o negocios
    Sistema->>BaseDatos: Registra suscripción del cliente
    BaseDatos-->>Sistema: Confirmación de suscripción
    Sistema->>Correo: Envía notificación por correo electrónico sobre nuevos productos en la categoría
    Correo-->>Cliente: Recibe notificación con nuevos productos
```

### Diagrama de secuencia: No recibir notificaciones si el vendedor desactiva las notificaciones de un producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Vendedor
    participant BaseDatos

    Cliente->>Sistema: Se suscribe a un producto
    Sistema->>BaseDatos: Registra la suscripción del cliente
    BaseDatos-->>Sistema: Confirmación de suscripción
    Vendedor->>Sistema: Desactiva notificaciones del producto
    Sistema->>BaseDatos: Desactiva notificaciones para el cliente sobre ese producto
    BaseDatos-->>Sistema: Confirmación de desactivación
    Cliente->>Sistema: No recibe notificación sobre el producto desactivado
```

### Diagrama de secuencia: Recibir notificaciones con detalles del producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Recibe notificación de un nuevo producto
    Sistema->>Correo: Genera correo con nombre, precio y fecha de vencimiento del producto
    Correo-->>Cliente: Recibe correo con detalles del producto (nombre, precio, fecha de vencimiento)
```

### Diagrama de secuencia: Elegir cómo recibir las notificaciones (correo electrónico, SMS, o ambas)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Se suscribe a notificaciones
    Sistema->>Cliente: Solicita elección de canal de notificación (correo, SMS o ambos)
    Cliente->>Sistema: Elige recibir notificaciones por correo y SMS
    Sistema->>BaseDatos: Registra la preferencia de notificación
    BaseDatos-->>Sistema: Confirmación de preferencia registrada
    Sistema->>Cliente: Envia notificaciones a través de los canales seleccionados
```

### Diagrama de secuencia: Recibir notificaciones fáciles de leer con enlace directo al producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Recibe notificación
    Sistema->>Correo: Genera notificación fácil de leer con enlace directo al producto
    Correo-->>Cliente: Recibe correo con enlace directo al producto en la web
```

### Diagrama de secuencia: Enviar notificaciones en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Correo

    Cliente->>Sistema: Se suscribe a notificaciones
    Sistema->>Correo: Procesa envío de notificación
    alt Si la notificación se envía en menos de 1 minuto
        Correo-->>Cliente: Recibe notificación
    else Si la notificación supera 1 minuto
        Sistema->>Cliente: Muestra mensaje de error ""Notificación retrasada""
    end
```

### Diagrama de secuencia: Manejar hasta 100 notificaciones por minuto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant Correo

    Admin->>Sistema: Activa el sistema de notificaciones
    Sistema->>Correo: Envía notificaciones a los clientes
    alt Si se envían menos de 100 notificaciones por minuto
        Correo-->>Cliente: Reciben las notificaciones correctamente
    else Si se envían más de 100 notificaciones por minuto
        Sistema->>Correo: Mantiene el rendimiento y procesa todas las notificaciones
        Correo-->>Cliente: Reciben todas las notificaciones sin demora
    end
```



### Diagramas secuencia - SAD 

Diagrama de Secuencia: Acceso al Formulario de Registro
```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Solicita acceso al formulario de registro
    Sistema-->>Visitante: Muestra formulario de registro
    Visitante->>Sistema: Completa los campos (nombre, correo, contraseña)
    Sistema-->>Sistema: Valida campos obligatorios
    Sistema-->>Visitante: Permite continuar si los campos son válidos
```

Diagrama de Secuencia: Asignación de Rol de Cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Completa el registro
    Sistema-->>Cliente: Asigna rol de cliente automáticamente
    Sistema-->>Cliente: Confirma registro exitoso
```

Diagrama de Secuencia: Creación de Cuenta por Administrador
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant Administrador

    Vendedor->>Sistema: Completa registro
    Sistema-->>Administrador: Notifica creación de cuenta pendiente
    Administrador->>Sistema: Aprueba o rechaza la cuenta
    Sistema-->>Vendedor: Notifica estado de la cuenta
```

Diagrama de Secuencia: Validación de Correo Único
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completa registro con correo
    Sistema-->>Sistema: Verifica si el correo ya está registrado
    alt Correo no único
        Sistema-->>Usuario: Muestra mensaje de error
    else Correo único
        Sistema-->>Usuario: Continúa con el registro
    end
```

Diagrama de Secuencia: Mensaje de Confirmación de Registro
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completa registro exitosamente
    Sistema-->>Usuario: Muestra mensaje de confirmación
```

Diagrama de Secuencia: Tiempo de Carga del Formulario
```mermaid
sequenceDiagram
    participant Visitante
    participant Sistema

    Visitante->>Sistema: Accede al formulario de registro
    Sistema-->>Visitante: Muestra formulario en menos de 2 segundos
```

Diagrama de Secuencia: Cifrado de Contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Completa registro con contraseña
    Sistema-->>Sistema: Cifra la contraseña
    Sistema-->>Usuario: Confirma registro exitoso
```

Diagrama de Secuencia: Campos de Inicio de Sesión
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Accede al formulario de inicio de sesión
    Sistema-->>Usuario: Muestra campos para correo y contraseña
```

Diagrama de Secuencia: Mensaje de Error por Credenciales Incorrectas
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intenta iniciar sesión con credenciales incorrectas
    Sistema-->>Sistema: Valida credenciales
    Sistema-->>Usuario: Muestra mensaje de error claro
```

Diagrama de Secuencia: Redirección según Rol
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con credenciales correctas
    Sistema-->>Sistema: Verifica rol del usuario
    Sistema-->>Usuario: Redirige según rol (ej. cliente, vendedor, administrador)
```

Diagrama de Secuencia: Redirección para Administrador
```mermaid
sequenceDiagram
    participant Administrador
    participant Sistema

    Administrador->>Sistema: Inicia sesión
    Sistema-->>Sistema: Verifica rol de administrador
    Sistema-->>Administrador: Redirige a la vista de gestión de vendedores y negocios
```

Diagrama de Secuencia: Recuperación de Contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema-->>Usuario: Envía correo con enlace para restablecer contraseña
```

Diagrama de Secuencia: Inicio de Sesión en Menos de 3 Segundos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Intenta iniciar sesión
    Sistema-->>Sistema: Valida credenciales
    Sistema-->>Usuario: Completa el inicio de sesión en menos de 3 segundos
```


Diagrama de Secuencia: Expiración de Sesión por Inactividad
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Está inactivo durante 30 minutos
    Sistema-->>Sistema: Detecta inactividad
    Sistema-->>Usuario: Expira sesión automáticamente
```


Diagrama de Secuencia: Opciones para Editar y Eliminar Vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores
    Sistema->>Usuario: Muestra lista con opciones de editar y eliminar
```

Diagrama de Secuencia: Eliminar un Vendedor y sus Negocios y Productos
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Selecciona eliminar vendedor
    Sistema->>Usuario: Confirma eliminación
    Usuario->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Eliminar vendedor, negocios y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Usuario: Muestra mensaje de éxito
```

Diagrama de Secuencia: Asignar un Negocio al Vendedor al Crear uno Nuevo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Crea nuevo vendedor
    Sistema->>Usuario: Solicita información del vendedor
    Usuario->>Sistema: Completa información
    Sistema->>Usuario: Solicita asignar un negocio
    Usuario->>Sistema: Asigna negocio
    Sistema->>BaseDatos: Guardar nuevo vendedor con negocio asignado
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
```

Diagrama de Secuencia: Validación de Datos al Registrar o Actualizar Vendedor
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Intenta guardar vendedor
    Sistema->>Sistema: Valida datos (nombre, correo, teléfono)
    Sistema-->>Usuario: Datos válidos
    Sistema->>BaseDatos: Guardar datos del vendedor
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Usuario: Muestra mensaje de éxito
    Sistema-->>Usuario: Muestra mensaje de error si los datos no son válidos
```

Diagrama de Secuencia: Vendedor Eliminado no Aparece en la Lista
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Visualiza lista de vendedores
    Sistema->>BaseDatos: Obtener lista de vendedores
    BaseDatos-->>Sistema: Lista de vendedores (sin el eliminado)
    Sistema->>Usuario: Muestra lista actualizada
```

Diagrama de Secuencia: Buscar Vendedor Específico por Nombre o Correo
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Inicia búsqueda por nombre o correo
    Sistema->>BaseDatos: Buscar vendedor por nombre o correo
    BaseDatos-->>Sistema: Resultados de búsqueda
    Sistema->>Usuario: Muestra resultados de búsqueda
```

Diagrama de Secuencia: Reflejo en Tiempo Real de Cambios en la Lista de Vendedores
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Realiza cambio (crear, editar o eliminar vendedor)
    Sistema->>BaseDatos: Confirma cambio en la base de datos
    BaseDatos-->>Sistema: Confirmación de cambio
    Sistema->>Usuario: Muestra lista de vendedores actualizada en menos de 5 segundos
```

Registrar o editar un negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario para registrar/editar negocio
    Sistema->>Vendedor: Muestra campos para ingresar nombre, descripción y logo
    Vendedor->>Sistema: Ingresa la información del negocio
    Sistema->>BaseDatos: Guarda la información del negocio
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

Guardar cambios en la información del negocio
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Realiza cambios en la información del negocio
    Sistema->>BaseDatos: Guarda los cambios realizados
    BaseDatos-->>Sistema: Confirmación de actualización
    Sistema->>Vendedor: Muestra mensaje de éxito
    Sistema->>Vendedor: Actualiza la vista con la nueva información
```

Eliminar un negocio y sus productos asociados
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Selecciona eliminar un negocio
    Sistema->>Vendedor: Pide confirmación de eliminación
    Vendedor->>Sistema: Confirma eliminación
    Sistema->>BaseDatos: Elimina el negocio y productos asociados
    BaseDatos-->>Sistema: Confirmación de eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

Acceder y editar/eliminar solo negocios propios
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios del vendedor
    BaseDatos-->>Sistema: Negocios del vendedor
    Vendedor->>Sistema: Selecciona un negocio que le pertenece
    Sistema->>Vendedor: Muestra opciones de editar y eliminar
    Vendedor->>Sistema: Edita o elimina su negocio
    Sistema->>BaseDatos: Guarda los cambios o elimina el negocio
    BaseDatos-->>Sistema: Confirmación de cambio/eliminación
    Sistema->>Vendedor: Muestra mensaje de éxito
```

Ver solo negocios activos como cliente
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta todos los negocios activos
    BaseDatos-->>Sistema: Lista de negocios activos
    Sistema->>Cliente: Muestra los negocios activos
```

Carga de imagen de logo en menos de 3 segundos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Subir logo del negocio
    Sistema->>Sistema: Procesar la carga de la imagen
    Sistema-->>Vendedor: Confirmación de carga completada en menos de 3 segundos
```

Subir logo de hasta 5 MB
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Selecciona imagen de logo
    Sistema->>Sistema: Verifica tamaño de la imagen
    alt Si la imagen es válida (menos de 5 MB)
        Sistema->>Vendedor: Procesar carga de logo
        Sistema-->>Vendedor: Confirma carga completada
    else Si la imagen es mayor de 5 MB
        Sistema->>Vendedor: Muestra error ""Tamaño de imagen demasiado grande""
    end
```


Publicar un nuevo producto
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Accede al formulario de publicación
    Sistema->>Vendedor: Muestra campos para nombre, descripción, precio, descuento y fecha de vencimiento
    Vendedor->>Sistema: Completa la información del producto
    Sistema->>BaseDatos: Guarda la información del producto
    BaseDatos-->>Sistema: Confirmación de guardado
    Sistema->>Vendedor: Muestra mensaje de éxito
```

No permitir guardar producto sin negocio asociado
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema
    participant BaseDatos

    Vendedor->>Sistema: Intenta guardar un nuevo producto
    Sistema->>BaseDatos: Verifica si el producto tiene un negocio asociado
    alt Si no hay negocio asociado
        Sistema->>Vendedor: Muestra mensaje de error ""No hay negocio asociado""
    else Si hay negocio asociado
        Sistema->>BaseDatos: Guarda el producto
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

Descuento mayor al 90%
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Ingresa un valor de descuento para el producto
    Sistema->>Sistema: Verifica si el descuento supera el 90%
    alt Si el descuento es mayor al 90%
        Sistema->>Vendedor: Muestra mensaje de error ""Descuento no puede superar el 90%""
    else Si el descuento es válido
        Sistema->>BaseDatos: Guarda el producto con el descuento
        BaseDatos-->>Sistema: Confirmación de guardado
        Sistema->>Vendedor: Muestra mensaje de éxito
    end
```

Ordenar productos por proximidad de vencimiento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de productos
    Sistema->>BaseDatos: Obtiene productos con fecha de vencimiento
    BaseDatos-->>Sistema: Lista de productos con fecha de vencimiento
    Sistema->>Sistema: Ordena productos por proximidad de vencimiento
    Sistema->>Cliente: Muestra lista ordenada con productos más cercanos a vencer primero
```


Ver precio original y con descuento
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Visualiza producto con descuento
    Sistema->>Cliente: Muestra precio original y precio con descuento aplicado
    Sistema-->>Cliente: Muestra los dos precios (original y con descuento)
```

Tiempo de carga del formulario de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Accede al formulario de productos
    Sistema->>Sistema: Carga formulario de publicación
    alt Si el tiempo de carga es menor o igual a 2 segundos
        Sistema->>Vendedor: Muestra el formulario correctamente
    else Si el tiempo de carga supera los 2 segundos
        Sistema->>Vendedor: Muestra mensaje de error de carga lenta
    end
```

Procesamiento de imágenes de productos
```mermaid
sequenceDiagram
    participant Vendedor
    participant Sistema

    Vendedor->>Sistema: Sube imagen del producto
    Sistema->>Sistema: Procesa la imagen
    Sistema->>Sistema: Comprime la imagen sin pérdida de calidad
    Sistema-->>Vendedor: Confirma carga y compresión de la imagen
```

Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```

Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```

Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```

Solicitar recuperación de contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant BaseDatos

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Usuario: Solicita ingreso de correo electrónico
    Usuario->>Sistema: Ingresa correo electrónico
    Sistema->>BaseDatos: Verifica si el correo existe
    alt Si el correo existe
        Sistema->>Usuario: Envia enlace para restablecer la contraseña
    else Si el correo no existe
        Sistema->>Usuario: Muestra mensaje de error ""Correo no registrado""
    end
```

Enviar enlace para restablecer contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita enlace de restablecimiento
    Sistema->>Correo: Envía correo con enlace para restablecer contraseña
    Correo-->>Usuario: Recibe enlace para restablecer la contraseña
```

Restablecer contraseña con enlace
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Hace clic en el enlace de restablecimiento
    Sistema->>Usuario: Solicita nueva contraseña
    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Valida si la nueva contraseña cumple con las políticas de seguridad
    alt Si la contraseña es válida
        Sistema->>Usuario: Restablece la contraseña y muestra mensaje de éxito
    else Si la contraseña no cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de error de política de seguridad
    end
```

Validación de nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud y complejidad de la contraseña
    alt Si la contraseña cumple con las políticas
        Sistema->>Usuario: Muestra mensaje de éxito, la contraseña ha sido actualizada
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña no segura""
    end
```

Iniciar sesión con la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Inicia sesión con nueva contraseña
    Sistema->>Sistema: Verifica las credenciales
    alt Si la contraseña es correcta
        Sistema->>Usuario: Muestra mensaje de éxito ""Inicio de sesión exitoso""
    else Si la contraseña es incorrecta
        Sistema->>Usuario: Muestra mensaje de error ""Contraseña incorrecta""
    end
```

Enviar correo en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema
    participant Correo

    Usuario->>Sistema: Solicita recuperación de contraseña
    Sistema->>Correo: Procesa solicitud de correo
    Correo-->>Sistema: Enlace enviado
    Sistema->>Usuario: Notifica que el correo fue enviado en menos de 1 minuto
```


Cumplir con las políticas de seguridad de la nueva contraseña
```mermaid
sequenceDiagram
    participant Usuario
    participant Sistema

    Usuario->>Sistema: Ingresa nueva contraseña
    Sistema->>Sistema: Verifica longitud mínima y complejidad (mayúsculas, números, etc.)
    alt Si la contraseña cumple
        Sistema->>Usuario: Confirma que la contraseña cumple con las políticas de seguridad
    else Si la contraseña no cumple
        Sistema->>Usuario: Muestra mensaje de error ""La contraseña no cumple con los requisitos de seguridad""
    end
```


Ver nombre, descripción y logo de cada negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    Sistema->>Cliente: Muestra lista con nombre, descripción y logo de cada negocio
```

Ver productos asociados a un negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Hace clic en un negocio
    Sistema->>BaseDatos: Consulta los productos asociados al negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra los productos disponibles con nombre, descripción y precio
```

Ver lista de productos en la vista del negocio
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la vista de un negocio
    Sistema->>BaseDatos: Consulta los productos disponibles de ese negocio
    BaseDatos-->>Sistema: Devuelve lista de productos
    Sistema->>Cliente: Muestra lista de productos con nombre, descripción y precio
```

Mensaje cuando no hay negocios registrados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    alt Si no hay negocios registrados
        Sistema->>Cliente: Muestra mensaje ""No hay negocios registrados actualmente""
    else Si hay negocios registrados
        BaseDatos-->>Sistema: Devuelve lista de negocios
        Sistema->>Cliente: Muestra la lista de negocios
    end
```

Ordenar negocios por nombre, ubicación o tipo de producto
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>Cliente: Muestra opciones de ordenación (nombre, ubicación, tipo de producto)
    Cliente->>Sistema: Selecciona opción de ordenación
    Sistema->>BaseDatos: Consulta negocios ordenados por la preferencia
    BaseDatos-->>Sistema: Devuelve lista ordenada
    Sistema->>Cliente: Muestra lista de negocios ordenada según la preferencia
```

Tiempo de carga de la lista de negocios (menos de 3 segundos)
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant BaseDatos

    Cliente->>Sistema: Accede a la lista de negocios
    Sistema->>BaseDatos: Consulta los negocios registrados
    BaseDatos-->>Sistema: Devuelve lista de negocios
    alt Si el tiempo de carga es menor a 3 segundos
        Sistema->>Cliente: Muestra la lista de negocios rápidamente
    else Si el tiempo de carga supera los 3 segundos
        Sistema->>Cliente: Muestra mensaje de error de carga lenta
    end
```

Diagrama de secuencia SAD: Accesibilidad en dispositivos móviles
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema

    Cliente->>Sistema: Accede al sitio desde un dispositivo móvil
    Sistema->>Sistema: Verifica compatibilidad con dispositivos móviles
    alt Si el sistema es accesible
        Sistema->>Cliente: Muestra la plataforma optimizada para pantallas pequeñas
    else Si el sistema no es accesible
        Sistema->>Cliente: Muestra mensaje de error de incompatibilidad
    end
```

Ver y agregar un producto al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve un producto disponible
    Sistema->>Cliente: Muestra información del producto
    Cliente->>Sistema: Hace clic en ""Agregar al carrito""
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido al carrito
    Sistema->>Cliente: Muestra notificación visual de éxito
```


Calcular el total con descuentos aplicados
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Ve los productos en el carrito
    Sistema->>Carrito: Calcula el total con descuentos aplicados
    Carrito-->>Sistema: Total calculado
    Sistema->>Cliente: Muestra el total actualizado con descuento
```


Eliminar un producto del carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Elimina un producto del carrito
    Sistema->>Carrito: Elimina el producto seleccionado
    Carrito-->>Sistema: Producto eliminado correctamente
    Sistema->>Cliente: Muestra el carrito actualizado con el nuevo total
```

Ver el número total de productos y el subtotal
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Accede al carrito
    Sistema->>Carrito: Consulta el número total de productos y el subtotal
    Carrito-->>Sistema: Devuelve número total de productos y subtotal
    Sistema->>Cliente: Muestra número total de productos y subtotal
```

Notificación visual al añadir productos al carrito
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Añade un producto al carrito
    Sistema->>Carrito: Añadir el producto al carrito
    Carrito-->>Sistema: Producto añadido
    Sistema->>Cliente: Muestra notificación visual de éxito
```

Actualización en tiempo real del carrito sin recargar la página
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant Carrito

    Cliente->>Sistema: Realiza un cambio en el carrito (añadir, eliminar productos)
    Sistema->>Carrito: Actualiza el carrito en tiempo real
    Carrito-->>Sistema: Carrito actualizado
    Sistema->>Cliente: Muestra el carrito actualizado sin recargar la página
```

Proceso de pago seguro con cifrado
```mermaid
sequenceDiagram
    participant Cliente
    participant Sistema
    participant ProcesadorDePago

    Cliente->>Sistema: Procede con el pago
    Sistema->>ProcesadorDePago: Solicita procesamiento seguro de pago
    ProcesadorDePago->>Sistema: Procesa pago cumpliendo con los estándares de cifrado
    Sistema->>Cliente: Muestra confirmación de pago exitoso
```

Generar reporte con ventas totales, productos vendidos y clientes atendidos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta ventas totales, productos vendidos y clientes atendidos
    BaseDatos-->>Sistema: Devuelve los datos
    Sistema->>Admin: Muestra ventas totales, productos vendidos y clientes atendidos
```

Generar reporte con un rango de fechas filtrado
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte con rango de fechas
    Sistema->>BaseDatos: Filtra datos según el rango de fechas seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados por fecha
```

Generar reporte con formato gráfico
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte gráfico
    Sistema->>BaseDatos: Consulta datos de ventas, productos y clientes
    BaseDatos-->>Sistema: Devuelve los datos requeridos
    Sistema->>Admin: Muestra los datos en formato gráfico
```

Filtrar datos por vendedor, negocio o producto
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte filtrado por vendedor, negocio o producto
    Sistema->>BaseDatos: Filtra datos por vendedor, negocio o producto seleccionado
    BaseDatos-->>Sistema: Devuelve datos filtrados
    Sistema->>Admin: Muestra reporte con los datos filtrados
```

Acceso restringido a reportes solo para administradores autenticados
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita acceder a los reportes
    Sistema->>BaseDatos: Verifica si el usuario es un administrador autenticado
    alt Si es administrador autenticado
        BaseDatos-->>Sistema: Permite acceso a los reportes
        Sistema->>Admin: Muestra los reportes
    else Si no es administrador autenticado
        BaseDatos-->>Sistema: Niega el acceso
        Sistema->>Admin: Muestra mensaje de error ""Acceso denegado""
    end
```

Generar reporte en menos de 5 segundos
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema
    participant BaseDatos

    Admin->>Sistema: Solicita generar reporte
    Sistema->>BaseDatos: Consulta los datos necesarios
    BaseDatos-->>Sistema: Devuelve los datos
    alt Si el tiempo de generación es menor a 5 segundos
        Sistema->>Admin: Muestra el reporte generado
    else Si el tiempo de generación supera los 5 segundos
        Sistema->>Admin: Muestra mensaje de error ""Tiempo de generación excedido""
    end
```

Exportar reporte a PDF
```mermaid
sequenceDiagram
    participant Admin
    participant Sistema

    Admin->>Sistema: Solicita exportar reporte
    Sistema->>Sistema: Genera el reporte en formato PDF
    Sistema-->>Admin: Entrega el archivo PDF
```


Diagrama de secuencia: Flujo de suscripción y notificación por correo electrónico
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant BaseDatos
    participant Servicio_Correo

    Cliente->>API_Notificaciones: Solicita suscripción a una categoría de productos
    API_Notificaciones->>BaseDatos: Almacena suscripción del cliente
    BaseDatos-->>API_Notificaciones: Confirmación de suscripción
    API_Notificaciones->>Servicio_Correo: Envía solicitud de notificación
    Servicio_Correo-->>Cliente: Recibe correo con nuevos productos
```

Control de notificaciones cuando el vendedor desactiva un producto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Vendedor
    participant BaseDatos

    Cliente->>API_Notificaciones: Se suscribe a un producto
    API_Notificaciones->>BaseDatos: Registra suscripción del cliente
    BaseDatos-->>API_Notificaciones: Confirmación de suscripción
    Vendedor->>API_Notificaciones: Desactiva notificaciones del producto
    API_Notificaciones->>BaseDatos: Marca notificaciones como deshabilitadas
    BaseDatos-->>API_Notificaciones: Confirmación de desactivación
    Cliente->>API_Notificaciones: No recibe notificación del producto desactivado
```

Envío de notificación con detalles del producto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Servicio_Correo

    API_Notificaciones->>Servicio_Correo: Genera email con detalles (nombre, precio, fecha)
    Servicio_Correo-->>Cliente: Recibe email con información estructurada
```

Cliente elige cómo recibir notificaciones
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant BaseDatos

    Cliente->>API_Notificaciones: Selecciona tipo de notificación (correo, SMS o ambos)
    API_Notificaciones->>BaseDatos: Guarda preferencias del usuario
    BaseDatos-->>API_Notificaciones: Confirmación de preferencias
    API_Notificaciones->>Cliente: Confirma configuración de notificación
```

Notificaciones con enlaces directos al producto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Servicio_Correo

    API_Notificaciones->>Servicio_Correo: Genera mensaje con enlace al producto
    Servicio_Correo-->>Cliente: Recibe notificación con acceso directo al producto
```

Enviar notificaciones en menos de 1 minuto
```mermaid
sequenceDiagram
    participant Cliente
    participant API_Notificaciones
    participant Servicio_Correo

    Cliente->>API_Notificaciones: Se suscribe a notificaciones
    API_Notificaciones->>Servicio_Correo: Procesa envío de notificación
    alt Si la notificación se envía en menos de 1 minuto
        Servicio_Correo-->>Cliente: Recibe notificación correctamente
    else Si hay retraso
        API_Notificaciones->>Cliente: Muestra error ""Notificación retrasada""
    end
```

Manejar hasta 100 notificaciones por minuto
```mermaid
sequenceDiagram
    participant Admin
    participant API_Notificaciones
    participant Servicio_Correo

    Admin->>API_Notificaciones: Activa el sistema de notificaciones
    API_Notificaciones->>Servicio_Correo: Procesa y envía notificaciones
    alt Si hay menos de 100 notificaciones por minuto
        Servicio_Correo-->>Cliente: Notificaciones entregadas sin retraso
    else Si hay más de 100 notificaciones por minuto
        API_Notificaciones->>Servicio_Correo: Distribuye carga y gestiona la cola de envío
        Servicio_Correo-->>Cliente: Todas las notificaciones entregadas correctamente
    end
```

### DIAGRAMA DE CLASES

```mermaid
classDiagram
    class Usuario {
        +int Id
        +string Nombre
        +string Correo
        +string Password
        +string Rol
    }

    class Negocio {
        +int Id
        +string Nombre
        +string Descripcion
        +string Direccion
        +string Ubicacion
        +string Logo
        +string Banner
        +int UsuarioId
        +int CategoriaId
        +int? Subcategoria1Id
        +int? Subcategoria2Id
    }

    class Producto {
        +int Id
        +string Nombre
        +double PrecioOriginal
        +double PrecioDescuento
        +bool PorExpirar
        +DateTime? FechaExpiracion
        +string Imagen
        +int NegocioId
        +string Descripcion
    }

    class Pedido {
        +int Id
        +DateTime Fecha
        +int UsuarioId
    }

    class DetallePedido {
        +int Id
        +int PedidoId
        +int ProductoId
        +int Cantidad
        +double Precio
    }

    class Categoria {
        +int Id
        +string Nombre
    }

    class Subcategoria {
        +int Id
        +string Nombre
    }

    %% Relaciones entre clases
    Usuario ""1"" --> ""0..*"" Negocio : Posee
    Negocio ""1"" --> ""0..*"" Producto : Ofrece
    Negocio ""1"" --> ""1"" Categoria : Pertenece
    Negocio ""1"" --> ""0..1"" Subcategoria : Tiene (Opcional)
    Producto ""1"" --> ""0..*"" DetallePedido : Contiene
    Pedido ""1"" --> ""0..*"" DetallePedido : Tiene
    Pedido ""1"" --> ""1"" Usuario : Realizado por
    DetallePedido ""1"" --> ""1"" Producto : Incluye
```

### DIAGRAMA DE PAQUETES: 

```mermaid
graph TD;
    subgraph LoopifyFinal
        subgraph App_Start
            BundleConfig[BundleConfig.cs]
            FilterConfig[FilterConfig.cs]
            RouteConfig[RouteConfig.cs]
        end
        
        subgraph Assets
            CSS[css]
            JS[js]
            Images[banner.jpg, lecheentera.jpg, LoppifyLogo.png, etc.]
        end
        
        subgraph Content
        end
        
        subgraph Controllers
            AdministradorController[AdministradorController.cs]
            ClienteController[ClienteController.cs]
            CuentaController[CuentaController.cs]
            VendedorController[VendedorController.cs]
        end
        
        subgraph Migrations
        end
        
        subgraph Models
            Categoria[Categoria.cs]
            DbContext[DbContext.cs]
            DetallePedido[DetallePedido.cs]
            Negocio[Negocio.cs]
            Pedido[Pedido.cs]
            Producto[Producto.cs]
            Subcategoria[Subcategoria.cs]
            Usuario[Usuario.cs]
        end
        
        subgraph Scripts
        end
        
        subgraph Views
            Administrador[Administrador]
            Cliente[Cliente]
            Cuenta[Cuenta]
            Shared[Shared]
            Vendedor[Vendedor]
        end
    end
```


### DIAGRAMA DE DESPLIEGUE

```mermaid
graph TD;
    subgraph Azure
        A[App Service - Aplicación ASP.NET Core]
        B[SQL Server - Base de Datos]
    end

    U[Usuario] -->|HTTPS| A
    A -->|Conexión SQL| B
```

### DIAGRAMA RELACIONAL BASE DE DATOS

```mermaid
erDiagram
    Usuarios {
        int UsuarioID PK
        string Nombre
        string Apellido
        string Email
        string PasswordHash
        string Rol
        datetime FechaRegistro
    }
    
    Negocios {
        int NegocioID PK
        string Nombre
        string Direccion
        string Telefono
        string Email
        int UsuarioID FK
    }
    
    Categorias {
        int CategoriaID PK
        string Nombre
    }
    
    Subcategorias {
        int SubcategoriaID PK
        string Nombre
        int CategoriaID FK
    }
    
    Productos {
        int ProductoID PK
        string Nombre
        string Descripcion
        decimal Precio
        int Stock
        int NegocioID FK
        int SubcategoriaID FK
    }
    
    Pedidos {
        int PedidoID PK
        datetime FechaPedido
        decimal Total
        string Estado
        int UsuarioID FK
    }
    
    DetallesPedidos {
        int DetalleID PK
        int PedidoID FK
        int ProductoID FK
        int Cantidad
        decimal PrecioUnitario
    }
    
    Usuarios ||--o{ Negocios : ""posee""
    Categorias ||--o{ Subcategorias : ""tiene""
    Subcategorias ||--o{ Productos : ""contiene""
    Negocios ||--o{ Productos : ""vende""
    Usuarios ||--o{ Pedidos : ""realiza""
    Pedidos ||--o{ DetallesPedidos : ""incluye""
    Productos ||--o{ DetallesPedidos : ""contiene""
```

### DIAGRAMA DE OBJETOS 

```mermaid
classDiagram
    class Usuario {
        +int Id
        +string Nombre
        +string Correo
        +string Password
        +string Rol
    }
    
    class Pedido {
        +int Id
        +DateTime Fecha
        +int UsuarioId
        +Usuario Usuario
        +ICollection~DetallePedido~ Detalles
    }
    
    class DetallePedido {
        +int Id
        +int PedidoId
        +Pedido Pedido
        +int ProductoId
        +Producto Producto
        +int Cantidad
        +double Precio
    }
    
    class Producto {
        +int Id
        +string Nombre
        +double PrecioOriginal
        +double PrecioDescuento
        +bool PorExpirar
        +DateTime? FechaExpiracion
        +string Imagen
        +int NegocioId
        +Negocio Negocio
        +string Descripcion
    }
    
    class Negocio {
        +int Id
        +string Nombre
        +string Descripcion
        +string Direccion
        +string Ubicacion
        +string Logo
        +string Banner
        +int UsuarioId
        +Usuario Usuario
        +int CategoriaId
        +Categoria Categoria
        +int? Subcategoria1Id
        +Subcategoria Subcategoria1
        +int? Subcategoria2Id
        +Subcategoria Subcategoria2
        +ICollection~Producto~ Productos
    }
    
    class Categoria {
        +int Id
        +string Nombre
    }
    
    class Subcategoria {
        +int Id
        +string Nombre
    }
    
    Usuario ""1"" --> ""*"" Pedido
    Pedido ""1"" --> ""*"" DetallePedido
    DetallePedido ""*"" --> ""1"" Producto
    Usuario ""1"" --> ""*"" Negocio
    Negocio ""1"" --> ""*"" Producto
    Negocio ""1"" --> ""1"" Categoria
    Negocio ""1"" --> ""0..1"" Subcategoria : Subcategoria1
    Negocio ""1"" --> ""0..1"" Subcategoria : Subcategoria2
```

### DIAGRAMA DE ACTIVIDADES 

![image](https://github.com/user-attachments/assets/2b710544-d1f8-4771-8ff1-f6311ce74d9c)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-reservas-aula-labs-valverde-lizarraga,proyecto,si982-2024-rec-u3-reservas-aula-labs-valverde-lizarraga,True,1109,False,6,True,False,True,"](https://classroom.github.com/a/AVemCTix)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18270819)
# Sistema de Gestión de Reservas de Aulas y Laboratorios Universitarios

## Estudiantes:

| Apellido y Nombre                  |
|-------------------------------------|
| Valverde Zamora, Jean Pier Elias   |
| Lizarraga Pomareda, Sergio Pedro   |

## Diagrama de Clases

![image](https://github.com/user-attachments/assets/1171e796-bff3-44a0-ae29-b5783202b679)

## Diagrama de Arquitectura

![image](https://github.com/user-attachments/assets/55222084-e04b-4623-bf2b-1cee67535d7d)

## Diagrama de Base de datos

![image](https://github.com/user-attachments/assets/d1fbb6a5-5c71-4b35-be8d-44f29058cf72)

## Diagrama de Despliegue

![image](https://github.com/user-attachments/assets/3ad874ea-8d94-40a4-a423-ff3b2e96ba51)

## Diagrama de Infraestructura

![image](https://github.com/user-attachments/assets/1b22aee7-20a3-4a49-866b-a9abed8b0e05)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-concha-ticahuancau3,proyecto,si982-2024-rec-u3-concha-ticahuancau3,True,2319,False,8,True,False,True,"](https://classroom.github.com/a/AVemCTix)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18274942)
# Sistema Web para mejorar el aprendizaje de los estudiantes del VI ciclo de educación secundaria en el curso de Educación para el Trabajo

## Estudiantes:

| Apellido y Nombre                  |
|-------------------------------------|
| Concha Llaca, Gerardo Alejandro   |
| Ticahuanca Cutipa, Fiorela Milady   |
| Cuadros Napa, Raúl Marcelo   |

## Diagrama de Clases

![image](https://github.com/user-attachments/assets/a82c175b-2fe6-4b9d-b6c6-9d90fe8bb155)

## Diagrama de Arquitectura

![Sin título-1 copia](https://github.com/user-attachments/assets/18f7fe26-fc57-4357-a329-b1de54d44c47)

## Diagrama de Base de datos

![image](https://github.com/user-attachments/assets/a156ed04-0637-4395-8502-d1b55e637f3b)

## Diagrama de Despliegue

![image](https://github.com/user-attachments/assets/3ad874ea-8d94-40a4-a423-ff3b2e96ba51)

## Diagrama de Infraestructura

![image](https://github.com/user-attachments/assets/1e1d03b7-2eaf-45b9-92d8-51a6b6a1c091)

## estimacion de costos

| Name                             | Monthly Qty | Unit     | Monthly Cost |
|----------------------------------|------------|---------|--------------|
| **azurerm_mysql_flexible_server** | 750        | hours   | **$0.00** |
| **azurerm_service_plan**         | 730        | hours   | **$0.00** |
| **azurerm_windows_web_app**      | 730        | hours   | **$0.00** |
| **azurerm_resource_group**       | -          | -       | **$0.00** |
| **Project total**                |            |         | **$0.00** |

## Capturas
![image](https://github.com/user-attachments/assets/7c87636b-3eb8-453c-a623-3560b6553c6d)

![image](https://github.com/user-attachments/assets/8584593b-6daa-4c2f-9748-54e8da806461)

![image](https://github.com/user-attachments/assets/1e34c9a6-24f6-4e7b-a86f-5ee588fd4f60)

![image](https://github.com/user-attachments/assets/7e2d4f09-f40b-44b5-83d9-3444bd0d3032)

![image](https://github.com/user-attachments/assets/72aae7a8-2228-4d35-ae08-d3f4ceaa9188)

![image](https://github.com/user-attachments/assets/bce1b2a9-9f7d-44a8-9e3d-bb2e5b023203)"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-gonzalez-u3,proyecto,si982-2024-rec-u3-gonzalez-u3,True,2450,True,3,False,False,True,"# Proyecto de Gestión Médica

Este proyecto tiene como objetivo gestionar los datos de pacientes y usuarios en un entorno clínico. El sistema proporciona funcionalidades para la autenticación, gestión de perfiles, y administración de historias clínicas y procedimientos médicos.

## Requerimientos Funcionales

| Código | Nombre                | Categoría             | Descripción                                                                                              | Prioridad |
|--------|-----------------------|-----------------------|----------------------------------------------------------------------------------------------------------|-----------|
| RF-01  | Iniciar sesión        | Autenticar Usuario    | El sistema debe permitir que los administradores y trabajadores inicien sesión con sus credenciales correspondientes. | Alta      |
| RF-02  | Ver perfil            | Gestionar Perfil      | El sistema debe permitir a los usuarios ver y actualizar su perfil personal.                              | Baja      |
| RF-03  | Gestionar usuarios    | Gestionar Usuarios    | El sistema debe permitir a los administradores gestionar los datos y roles de los usuarios pertenecientes a la empresa. | Alta      |
| RF-04  | Gestionar Historia Clínica | Gestionar Historia Clínica | El sistema debe permitir a los usuarios gestionar los datos de los pacientes, así como sus antecedentes y referencias familiares. | Alta      |
| RF-05  | Gestionar Pacientes   | Gestionar Pacientes   | El sistema debe permitir a los usuarios (doctores, auxiliar, asistente) gestionar (crear, editar y ver) los datos de los pacientes en el sistema. | Alta      |
| RF-06  | Gestionar Procedimientos | Gestionar Procedimientos | El sistema debe permitir a los usuarios (doctores, auxiliar, asistente) registrar procedimientos que el personal le realizó al paciente. | Alta      |
| RF-07  | Visualizar Historial  | Consultar Historial   | El sistema debe permitir a los trabajadores consultar el historial médico de los pacientes, así como los procedimientos generados. | Media     |

## Instalación

Para instalar y configurar el proyecto, sigue estos pasos:

1. Clona el repositorio: `[git clone https://github.com/UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-gonzalez-u3.git`
2. Abrir el proyecto con Visual Studio
3. Hacerle click en ejecutar


## Uso
Ingresar al siguiente link
https://laluzodontologia.azurewebsites.net/

e ingresar con credenciales"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-proyectou3_web2_medina_zevallos,proyecto,si982-2024-rec-u3-proyectou3_web2_medina_zevallos,True,3705,False,17,True,False,False,"](https://classroom.github.com/a/LkahOtWs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=17616412)
# PROYECTO U3: Sistema Web ""EventifyMe"" para la gestión y reserva de eventos

## Introducción

El proyecto **EventifyMe** está diseñado para resolver los problemas relacionados con la gestión y reserva de eventos. Muchas empresas y particulares enfrentan limitaciones significativas al depender exclusivamente de redes sociales o métodos no especializados para estas tareas. Este sistema busca ofrecer una solución integral, moderna y eficiente.

### Definición del Problema

Las empresas y usuarios enfrentan desafíos importantes como:
- Dependencia de redes sociales que limitan el alcance y personalización.
- Procesos administrativos manuales que reducen la eficiencia.
- Ausencia de automatización para análisis de datos y recomendaciones personalizadas.
- Dificultad para expandir el mercado y retener clientes.

### Objetivo General y Objetivos Específicos

#### Objetivo General
Desarrollar un sistema web que optimice la gestión y reserva de eventos, mejorando la experiencia del usuario y aumentando la eficiencia operativa.

#### Objetivos Específicos
- Diseñar una plataforma intuitiva y accesible.
- Incorporar funcionalidades de inteligencia artificial para ofrecer recomendaciones personalizadas.
- Automatizar procesos administrativos y de gestión de eventos.
- Garantizar la seguridad de los datos y la privacidad de los usuarios.

### Diagrama de Casos de Uso
<img src=""https://github.com/user-attachments/assets/bdb8a116-e15b-43f5-a4c1-4f4a70d3414e"" alt=""Diagrama de Casos de Uso"" width=""600""/>

### Diagrama de Secuencia

#### Inicio de Sesión
<img src=""https://github.com/user-attachments/assets/46fc7d1e-ac2b-4552-8495-73a63b37098e"" alt=""Diagrama de Secuencia - Inicio de Sesión"" width=""600""/>

#### Registro de Usuarios
<img src=""https://github.com/user-attachments/assets/6206e5ea-2c79-4de9-8657-e0c487678708"" alt=""Diagrama de Secuencia - Registro de Usuarios"" width=""600""/>

#### Gestión de Reservas
<img src=""https://github.com/user-attachments/assets/6287b7f7-5479-425a-a3f6-56c5f6aa3645"" alt=""Diagrama de Secuencia - Gestión de Reservas"" width=""600""/>

#### Pagos Seguros
<img src=""https://github.com/user-attachments/assets/42c5128f-75cc-4b42-a450-456c045f8222"" alt=""Diagrama de Secuencia - Pagos Seguros"" width=""600""/>

#### Publicación de Comentarios
<img src=""https://github.com/user-attachments/assets/d98e1158-6936-4b2d-8959-0d9f3ba3afbb"" alt=""Diagrama de Secuencia - Publicación de Comentarios"" width=""600""/>

#### Visualización del Catálogo de Eventos
<img src=""https://github.com/user-attachments/assets/1a758897-6a1e-4f1a-91d6-53e0b5027af5"" alt=""Diagrama de Secuencia - Visualización del Catálogo de Eventos"" width=""600""/>

#### Interacción con Chatbot
<img src=""https://github.com/user-attachments/assets/29f5d48f-d349-4148-aaa5-cfa6dab214d9"" alt=""Diagrama de Secuencia - Interacción con Chatbot"" width=""600""/>

#### Consulta de Reservas
<img src=""https://github.com/user-attachments/assets/24fb5581-1c62-44c2-b921-06a29d174829"" alt=""Diagrama de Secuencia - Consulta de Reservas"" width=""600""/>

#### Notificaciones Automáticas
<img src=""https://github.com/user-attachments/assets/3cc12065-376b-41ef-be62-f967ab2196b6"" alt=""Diagrama de Secuencia - Notificaciones Automáticas"" width=""600""/>

#### Filtrado de Eventos por Categorías
<img src=""https://github.com/user-attachments/assets/a57d1dc5-7324-4857-8c33-7fb66942ab89"" alt=""Diagrama de Secuencia - Filtrado de Eventos por Categorías"" width=""600""/>"
UPT-FAING-EPIS/proyecto-si982-2024-rec-u3-bolsa_trabajo_soto_llantay,proyecto,si982-2024-rec-u3-bolsa_trabajo_soto_llantay,True,2782,False,6,True,False,True,"](https://classroom.github.com/a/AVemCTix)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18321044)
# PROYECTO BOLSA DE TRABAJO

## INTEGRANTES :

| Nombre | Código |
|--------|--------|
| SOTO RODRIGUES Duanet | 2015051384 |
| LLLANTAY MACHACA Marjiory Grace   | 2020068951 |

Sistema Web Bolsa de Trabajo 
El Sistema de Bolsa de Trabajo es una plataforma web diseñada para conectar de manera eficiente a usuarios que buscan empleo con empresas que ofertan oportunidades laborales. Este sistema permitirá a los candidatos crear perfiles profesionales, buscar empleos por criterios como ubicación, palabras clave o tipo de puesto, y postularse directamente en la plataforma. Asimismo, ofrecerá a las empresas la capacidad de publicar, gestionar y actualizar sus ofertas de empleo de manera sencilla y rápida.

La plataforma contará con un panel administrativo para gestionar usuarios, ofertas y generar reportes de actividad. Incorporará funcionalidades avanzadas como filtros de búsqueda, subida de archivos (currículums y cartas de presentación), y un diseño responsivo que garantizará una experiencia de usuario óptima en dispositivos móviles, tabletas y computadoras. Además, priorizará la seguridad de los datos y la rapidez en la interacción, asegurando el cumplimiento de normativas de protección como el GDPR y ofreciendo un entorno intuitivo y accesible para todas las partes involucradas.


## DIAGRAMA BASE DE DATOS 

![image](https://github.com/user-attachments/assets/961d9e97-945e-4d09-ac59-6eac51201d54)


## DIAGRAMA DE PROCESO PROPUESTO

![image](https://github.com/user-attachments/assets/7548ae46-d8ea-457a-86b1-ad210ef6a0e8)


## DIAGRAMA DE CLASES

![image](https://github.com/user-attachments/assets/fc4f5900-b2f5-496c-a6eb-dee6998e909d)

## DIAGRAMA DE ARQUITECTURA 

![image](https://github.com/user-attachments/assets/d0125abc-f83d-419a-910e-15f20d348df4)

## DIAGRAMA DE INFRAESTRUCTURA

![image](https://github.com/user-attachments/assets/cdac48ff-0daa-486b-ae55-94312f0dd097)

SISTEMA DESPLEGADO

 ![image](https://github.com/user-attachments/assets/c6806308-8ef7-4ad7-a41d-ab8426a61c76)

![image](https://github.com/user-attachments/assets/f54674d9-ceac-4d88-9c22-bba01e03939a)

PARTE DE ADMINISTRADOR

 ![image](https://github.com/user-attachments/assets/457f8e27-e6dc-4a39-a06a-64875c7783af)

![image](https://github.com/user-attachments/assets/2fec6dec-97b8-4531-9960-164d77552b81)


VISUAL ASP.NET
 
 ![image](https://github.com/user-attachments/assets/1bcf9894-db61-4a8b-9ef9-6640e9023736)

 ![image](https://github.com/user-attachments/assets/3d738a8e-f5e4-48a1-aebd-398155349cba)"
UPT-FAING-EPIS/si885_2025-i-proyecto_si885_2025-i-u1-proyecto-formatos-01,si885_2025,i-proyecto_si885_2025-i-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/si889_2025-i-proyecto_si889_2025-i-u1-proyecto-formatos-01,si889_2025,i-proyecto_si889_2025-i-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-floresq_chambi_leyva,proyecto,si889-2025-i-u1-floresq_chambi_leyva,True,2181,False,3,True,True,False,"](https://classroom.github.com/a/IlvMPK2Y)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18682905)
# proyecto-formatos-01

CURSO: PATRONES DE SOFTWARE

Integrantes:

Chambi Cori Jerson Roni (2021072619)

Flores Quispe Jaime Elias (2021070309)

Leyva Sardón Elvis Ronald (2021072614)


# 🚀 Proyecto: Desarrollo de un Sistema de Conversión y Organización de Documentos Técnicos en Markdown con Estructuración Automática y Control de Versiones para los estudiantes en la facultad de Ingeniería de Sistemas

Este proyecto permite la conversión automática de documentos en diversos formatos (Word, PDF, HTML, TXT) al formato **Markdown** y la organización de estos documentos en un sistema estructurado con control de versiones. El proyecto está diseñado para estudiantes y docentes de la Facultad de Ingeniería de Sistemas de la Universidad Privada de Tacna.

## Requisitos del Sistema

Antes de instalar y ejecutar el proyecto, asegúrate de tener los siguientes requisitos:

- **Sistema Operativo**: Compatible con Linux, macOS y Windows
- **Python**: Versión 3.8 o superior
- **Dependencias**: Todas las dependencias necesarias se encuentran en el archivo `requirements.txt`
- **Base de Datos**: **SQL Server** (Azure SQL para bases de datos en la nube)
- **Terraform**: Para la gestión de infraestructura (si es necesario)

## Instalación

### 1. Clona el repositorio
```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u1-floresq_chambi_leyva.git
```
2️⃣ Configura el entorno virtual
Para evitar conflictos con otras bibliotecas, es recomendable crear un entorno virtual.
     
```bash
python -m venv venv
```
En Windows:

```bash
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
.\venv\Scripts\Activate.ps1
```

3️⃣ Instala las dependencias
Con el entorno virtual activado, instala las dependencias necesarias:

```bash
pip install -r requirements.txt
```

4️⃣ Inicia la aplicación
Una vez todo esté configurado, ejecuta el servidor de desarrollo:

```bash
python run.py
```"
UPT-FAING-EPIS/si784_2025-i-proyecto_si784_2025-i-u1-proyecto-formatos-01,si784_2025,i-proyecto_si784_2025-i-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-scae-upt,proyecto,si784-2025-i-u1-scae-upt,True,2857,False,10,True,False,False,"---
marp: true
theme: gaia 
paginate: true
---

# Sistema de gestión de requerimientos y documentación UML
## Universidad Privada de Tacna
### Curso: Calidad y Pruebas de Software
![width:600px height:auto](media/uml-logo.png)

---

### 🎓  **Integrantes**  🎓

- **Ancco Suaña, Bruno Enrique**

- **Antayhua Mamani, Renzo Antonio** 

- **Colque Ponce, Sergio Alberto**

---

## 1. ¿Cuál es el problema? 📌

En el desarrollo de software, uno de los principales factores de fracaso en los proyectos es la definición inadecuada de requerimientos. Debido a que en la actualidad:

- Muchos equipos documentan requerimientos de forma manual, poco estructurada o sin seguir estándares.
- No se utilizan herramientas para asegurar la coherencia, claridad o completitud de los requerimientos.
- La generación de diagramas UML suele ser un proceso separado y manual, lo cual dificulta la trazabilidad.
- Las empresas carecen de mecanismos que aseguren la calidad y mantenimiento actualizado de la documentación técnica.

Esto genera ambigüedades, retrabajo, mala comunicación entre áreas y productos finales que no cumplen con lo requerido.  

---

## 2. ¿A quiénes afecta? ¿A cuántos? 👨‍💻

- **Analistas de sistemas:** Encargados de definir los requerimientos de manera precisa.
- **Desarrolladores:** Requieren documentación clara para codificar adecuadamente.
- **Gerentes de proyecto:** Necesitan supervisar y validar el cumplimiento de los requisitos.
- **Usuarios finales:** Se ven afectados por la mala interpretación o implementación de sus necesidades.

Este problema impacta a equipos completos de desarrollo de software tanto en empresas privadas como en instituciones educativas.

---

## 3. ¿Se puede resolver completamente con tecnología? 💻 

### **Soluciones tecnológicas propuestas:**

- Plataforma centralizada para captura, análisis y documentación de requerimientos.
- Sugerencias automáticas para mejorar redacción y claridad de los requerimientos.
- Generación automática de diagramas UML (casos de uso, clases, secuencia, etc.).
- Exportación a múltiples formatos como PDF, Word, JSON y Markdown.
- Cumplimiento de estándares internacionales como IEEE 830 y UML 2.5.

---

### **Limitaciones:**
- Es necesario **capacitar al personal** para el uso del sistema.
- Depende de la **infraestructura tecnológica** disponible.
- **Factores humanos** como el uso incorrecto o fallas en el sistema pueden afectar su eficiencia.

---
## 4. Conclusión 📌
El Sistema de Gestión de Requerimientos y Documentación UML representa una solución tecnológica eficaz que mejora significativamente la calidad de los requerimientos, fomenta la colaboración entre roles del equipo y agiliza la generación de documentación técnica estandarizada. Su implementación contribuye directamente a proyectos de software más eficientes, claros y exitosos.

---

## **¡Gracias!** 🎓"
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-aas,proyecto,si784-2025-i-u1-aas,True,5815,True,13,False,True,False,"# 📄✨ Proyecto Generador de Documentación Impulsado por IA (GDI-IA)

## 🔹 1. Descripción del Proyecto

Este proyecto tiene como objetivo diseñar e implementar una 🌐 plataforma web capaz de ayudar a completar documentos estructurados de manera automática, utilizando diversas 🤖 IAs especializadas en redacción, análisis de contenido y generación de referencias. La solución permitirá a los usuarios completar los documentos en poco tiempo siguiendo formatos predefinidos, reduciendo el esfuerzo manual ✍️ y asegurando la coherencia y calidad del contenido.

## ❓ Preguntas Claves

### 1. Problemática

Actualmente, la elaboración de documentos técnicos y académicos implica un proceso manual que consume tiempo ⏳, requiere conocimientos específicos 📚 y suele estar sujeto a errores de formato y redacción. Esta situación genera inconsistencias en el contenido 📄❌, dificulta el cumplimiento de estructuras predefinidas y limita la productividad de estudiantes, desarrolladores y profesionales que necesitan generar documentación clara, coherente y reutilizable en plazos cortos 🚀.

### 2. Alcance

El sistema abarca:

- ✏️ Ayuda automatizada para completar documentos en formatos estandarizados (FD01-FD06).
- 📝 Un módulo de captura de datos donde el usuario ingresará información clave.
- 🧠 Integración de IAs para procesar y generar contenido por secciones.
- 📄 Generación de documentos en formatos PDF.
- 📂 Almacenamiento y gestión de documentos generados.

**⚠️ El sistema no incluye la edición manual posterior al documento generado dentro de la plataforma.**

### 3. Limitaciones y posibles implementaciones

- 🔗 El sistema dependerá de la disponibilidad de servicios de IA externos, como OpenAI y otros proveedores de APIs.
- 🚫 La plataforma no ofrecerá edición manual posterior a los documentos generados.
- 🌟 Como posible mejora futura, se podría incluir un editor visual para realizar cambios antes de exportar el documento.

## 🎯 Objetivo del Proyecto

Automatizar la creación de documentos formales siguiendo formatos estandarizados, reduciendo el esfuerzo manual y asegurando la calidad del contenido ✅. La solución debe ser confiable y fácil de usar,  para estudiantes, desarrolladores y profesionales que necesiten generar documentación técnica o académica 📚🖥️.

## 🔹 2. Tecnologías y herramientas usadas

- **🛠️ Lenguajes principales:** PHP, MySQL
- **🎨 Frontend:** HTML5, CSS3, JavaScript
- **🧩 Librerías adicionales:** (pendiente a integrar en fases futuras)
- **📡 APIs externas:** OpenAI (GPT), Hugging Face
- **🌐 Servidor Web:** Apache
- **🔄 Control de versiones:** Git / GitHub
- **🛠️ Otras herramientas:**
  - PhpMyAdmin para la administración de base de datos o MySQL
  - Composer (opcional para manejo de dependencias futuras)

## 🔹 3. Requisitos del sistema

- **🖥️ Servidor Web:** Apache 2.4
- **⚙️ PHP:** Versión 8.1 o superior
  - Extensiones requeridas:
    - `pdo_mysql`
    - `mbstring`
    - `curl`
    - `openssl`
    - `json`
- **🗃️ MySQL:** 5.7 o superior
- **🖥️ Sistema operativo del servidor:** Windows / Linux / macOS
- **🌐 Acceso a Internet:** Para consumir APIs de IA
- **🛠️ Editor sugerido:** Visual Studio Code

## 🔹 4. Procedimiento de instalación

1. **📥 Clonar el repositorio:**

Utilizar Git Bash o CMD:

```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u1-aas.git
```

2. **🔧 Instalar Apache, PHP y MySQL:**

Se recomienda instalar [XAMPP](https://www.apachefriends.org/es/index.html).

3. **📁 Mover el proyecto:**

Copiar la carpeta `proyecto-si784-2025-i-u1-aas` dentro de `C:\xampp\htdocs\gdi-ia`

4. **🛡️ Configurar permisos:**

No es necesario configurar permisos especiales en Windows.

5. **🗄️ Crear la base de datos:**

Abrir `PhpMyAdmin` desde `http://localhost/phpmyadmin/` y ejecutar:

```sql
CREATE DATABASE db_gdiia;
CREATE USER 'gdiia_user'@'localhost' IDENTIFIED BY 'tu_password_segura';
GRANT ALL PRIVILEGES ON db_gdiia.* TO 'gdiia_user'@'localhost';
FLUSH PRIVILEGES;
```

6. **📤 Importar el esquema de la base de datos:**

En `PhpMyAdmin`, seleccionar `db_gdiia`, ir a Importar y cargar el archivo `bd/db_gdiia.sql`.

7. **🛠️ Configurar la conexión a base de datos en el proyecto:**

Editar `config/conexion.php`:

```php
<?php
$host = ""localhost"";
$user = ""gdiia_user"";
$pass = ""tu_password_segura"";
$dbname = ""db_gdiia"";
?>
```

8. **🔐 Configurar API keys de servicios de IA** donde corresponda.

9. **🌐 Acceder a la aplicación:**

Desde el navegador: `http://localhost/gdi-ia/`

## 🔹 5. Configuración del proyecto

- **🔑 Variables de entorno necesarias:**
  - API Key de OpenAI.
  - Configuración de acceso a la base de datos.

- **🔒 Sugerencia:** Para mayor seguridad, almacenar claves en variables de entorno o en un archivo `.env` protegido.

## 🔹 6. Comandos principales

- **🚀 Iniciar Apache y MySQL en Windows (XAMPP):**

Abrir el panel de control de XAMPP y dar clic en `Start` en Apache y MySQL.

- **🔍 Ver estado de Apache y MySQL:**

Desde el panel de XAMPP puedes ver si están en verde (activos).

## 🔹 7. Parámetros o configuraciones especiales

- **🤖 Consumo de APIs de IA:**
  - Se requiere una API Key activa de OpenAI para las funcionalidades de generación automática.

- **📈 Límites configurables:**
  - Se puede establecer un número máximo de documentos generados por usuario en la versión gratuita.

## 🔹 8. Notas adicionales

- ⚠️ Verificar siempre las cuotas de uso de OpenAI para evitar costos inesperados.
- 🔄 Mantener actualizado XAMPP en tu sistema.
- 💾 Se recomienda implementar backups regulares de la base de datos.

# 📚 Créditos

Proyecto desarrollado por 👥:

- **Akhtar Oviedo, Ahmed Hasan** (2022074261)
- **Ayala Ramos, Carlos Daniel** (2022074266)
- **Salas Jiménez, Walter Emmanuel** (2022073896)

Repositorio oficial: [GDI-IA](https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u1-aas)"
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-fitmatch,proyecto,si784-2025-i-u1-fitmatch,True,2234,True,7,False,True,False,"# Fit Match - Documentación de Despliegue

## Descripción
Fit Match es una plataforma digital diseñada para conectar personas con intereses fitness similares, facilitando la coordinación de sesiones de entrenamiento conjuntas. El proyecto, desarrollado como una aplicación web en Java, busca expandirse a plataformas móviles (Android e iOS).

## Requisitos

### Hardware
*   **Servidor web (dedicado o en la nube):**
    *   Procesador: Intel Xeon o AMD Ryzen (mínimo 4 núcleos)
    *   Memoria RAM: 8 GB mínimo
    *   Almacenamiento: 100 GB SSD
*   **Equipo de desarrollo:**
    *   Laptops o PCs con procesador i5 o superior
    *   8 GB de RAM o más
    *   Disco SSD de al menos 256 GB

### Software
*   Lenguaje de programación: Java 11 o superior
*   Frontend: HTML, CSS, JavaScript
*   Base de datos: MySQL / PostgreSQL
*   Servidor de aplicaciones: Apache Tomcat
*   Control de versiones: Git

### Requisitos de Seguridad
*   Certificado SSL para cifrado HTTPS
*   Autenticación segura (OAuth 2.0, tokens JWT)
*   Políticas de privacidad conforme a la normativa local
*   Backups automáticos y cifrado de base de datos
*   Protección contra ataques comunes (XSS, SQL Injection)

## Procedimientos

### Pasos para el Despliegue

1.  **Configuración del Entorno:**
    *   Instalar Java 11 o superior.
    *   Instalar Apache Tomcat.
    *   Configurar la base de datos (MySQL o PostgreSQL).
2.  **Obtención del Código Fuente:**
    *   Clonar el repositorio de Git:
        ```
        git clone https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u1-fitmatch.git
        ```
3.  **Configuración de la Aplicación:**
    *   Configurar la conexión a la base de datos en el archivo de propiedades.
    *   Ajustar la configuración del servidor (puerto, etc.) en el archivo `server.xml` de Tomcat.
4.  **Compilación y Empaquetado:**
    *   Generar el archivo WAR para desplegar en Tomcat.
5.  **Despliegue en Tomcat:**
    *   Copiar el archivo WAR a la carpeta `webapps` de Tomcat.
    *   Iniciar o reiniciar el servidor Tomcat.
6.  **Verificación:**
    *   Acceder a la aplicación a través del navegador (`http://localhost:8080/FitMatch`).
    *   Verificar el correcto funcionamiento de las funcionalidades principales."
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-sipre,proyecto,si784-2025-i-u1-sipre,True,4309,False,5,True,False,False,"](https://classroom.github.com/a/Ql3zNhp1)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18683862)

# Convertidor Automático de Markdown a Video Interactivo - Markdown2Video

## 1. Problemática  
En la actualidad, la creación de contenido audiovisual, especialmente en forma de videos educativos, promocionales o de divulgación, representa un desafío significativo para muchas personas y organizaciones. La producción de videos de calidad requiere conocimientos en edición, herramientas especializadas y tiempo considerable para desarrollar contenido atractivo.  

Las herramientas tradicionales de edición de video, como **Adobe Premiere, Final Cut Pro o DaVinci Resolve**, ofrecen un alto grado de personalización, pero requieren una curva de aprendizaje elevada y demanda de recursos computacionales considerables. Esto limita su accesibilidad a personas que no tienen experiencia en edición de video o que necesitan generar contenido de forma rápida y eficiente sin dedicar largas horas a la edición manual.  

Por otro lado, **Markdown** se ha convertido en un estándar ampliamente utilizado para la escritura estructurada de contenido en múltiples ámbitos, como documentación técnica, blogs y presentaciones. Sin embargo, actualmente no existe una solución accesible y automatizada que permita convertir estos documentos en videos interactivos sin necesidad de intervención manual.  

Este vacío en el mercado crea una barrera para creadores de contenido, docentes, empresas y profesionales que buscan transformar documentos en videos sin enfrentarse a procesos complicados de edición. En muchos casos, estas personas terminan utilizando herramientas de presentación como **PowerPoint o Google Slides con grabaciones de pantalla**, lo que puede ser un proceso tedioso y con limitaciones en cuanto a personalización y calidad.  

---

## 2. Objetivo General  
Desarrollar un sistema automatizado denominado **Markdown2Video**, capaz de convertir presentaciones escritas en formato **Markdown con Marp** en videos interactivos de manera eficiente y sin intervención manual, optimizando la generación de contenido audiovisual para diversas aplicaciones, como educación, divulgación, marketing y documentación técnica.  

---

## 3. Objetivos Específicos  
1. **Implementar un editor con soporte para Marp** que permita a los usuarios escribir sus presentaciones en Markdown con previsualización en tiempo real.  
2. **Desarrollar un módulo de conversión automática** que transforme las presentaciones en videos con transiciones predefinidas.  
3. **Optimizar el rendimiento del sistema** mediante el uso de herramientas como **FFmpeg** para la renderización eficiente de videos en formatos compatibles (MP4, WebM, AVI).  
4. **Permitir la personalización de estilos y duración de diapositivas**, ofreciendo opciones para cambiar, velocidad de presentación y efectos visuales.  
5. **Evaluar la usabilidad y accesibilidad del sistema** a través de pruebas con usuarios finales, validando su facilidad de uso y efectividad en la generación de contenido audiovisual.  

---

## 4. Justificación  
La transformación digital ha incrementado la demanda de contenido audiovisual accesible y de rápida producción. En este contexto, el desarrollo de **Markdown2Video** responde a la necesidad de **automatizar la generación de videos a partir de presentaciones Markdown**, permitiendo a usuarios sin conocimientos en edición de video convertir su contenido en material visual interactivo sin esfuerzo adicional.
### Beneficios clave:  
✅ **Automatización del proceso**: Reduce el tiempo y esfuerzo necesario para convertir presentaciones en videos.  
✅ **Accesibilidad**: Permite a cualquier usuario, sin conocimientos de edición, generar contenido visual.  
✅ **Eficiencia y optimización**: Usa tecnologías como **FFmpeg** para una conversión rápida y eficiente.  
✅ **Aplicación en múltiples sectores**: Educación, marketing digital, documentación técnica y divulgación de información.  
✅ **Innovación**: No existe actualmente una herramienta que realice esta conversión de forma completamente automatizada."
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-va1-upt,proyecto,si784-2025-i-u1-va1-upt,True,289,False,0,True,False,False,"](https://classroom.github.com/a/Ql3zNhp1)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18683897)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-uni-adviser,proyecto,si784-2025-i-u1-uni-adviser,True,3158,False,2,True,False,False,"](https://classroom.github.com/a/Ql3zNhp1)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18683975)
# DataFiller
**DataFiller** es una herramienta innovadora que facilita la generación de datos sintéticos realistas para pruebas y simulaciones. Su principal objetivo es ayudar a desarrolladores, testers y profesionales de bases de datos a obtener registros automáticos de alta calidad, ahorrando tiempo y garantizando la efectividad en las pruebas. Compatible con bases de datos SQL y NoSQL, DataFiller se adapta a diversas necesidades de generación de datos, ofreciendo análisis inteligente y múltiples formatos de exportación.

## Funcionalidades Principales
- **Generación Rápida de Registros:** Permite generar registros de manera instantánea, optimizando el tiempo de prueba y desarrollo al automatizar la creación de datos.
- **Datos Realistas:** Los datos generados simulan información real, lo que permite obtener resultados más precisos y representativos durante las pruebas.
- **Compatibilidad Universal:** Funciona perfectamente con bases de datos SQL y NoSQL, lo que garantiza su uso en una amplia variedad de proyectos y arquitecturas.
- **Análisis Inteligente de Estructuras:** DataFiller detecta automáticamente la estructura de las tablas, facilitando la generación de registros adaptados a las necesidades específicas de cada base de datos.
- **Exportación en Múltiples Formatos:** Ofrece diversas opciones para exportar los datos generados, incluyendo SQL y JSON, según las necesidades del proyecto.
  
- **Consultas Ilimitadas (Plan Premium):** Con el Plan Premium, se eliminan las restricciones en las consultas diarias, brindando mayor flexibilidad y rendimiento.
  
- **Datos Personalizados por Industria (Plan Premium):** DataFiller ofrece la opción de generar datos adaptados a diferentes sectores, como salud, finanzas, y comercio electrónico, garantizando la relevancia de los registros generados.
  
- **Soporte Prioritario (Plan Premium):** Los usuarios Premium tienen acceso a soporte prioritario, asegurando respuestas rápidas y soluciones efectivas para cualquier duda o inconveniente.

- **Generación de Registros Ampliada (Plan Premium):** El Plan Premium permite generar un número considerablemente mayor de registros por tabla, ideal para proyectos más grandes y complejos.

## Objetivo
El **objetivo principal de DataFiller** es simplificar el proceso de generación de datos de prueba mediante una plataforma rápida, flexible y precisa. Facilitará el trabajo de desarrolladores y testers al proporcionar datos sintéticos realistas, lo que optimiza las pruebas y mejora la calidad de los proyectos. Además, la herramienta promueve la eficiencia, permitiendo ahorrar tiempo y reducir errores en las fases de desarrollo y pruebas de software. El enfoque integral de DataFiller, con análisis automático de estructuras y la opción de personalización según industria, lo convierte en una solución clave para proyectos que requieren datos realistas y confiables."
UPT-FAING-EPIS/proyecto-si885-2025-i-u1-chv_team,proyecto,si885-2025-i-u1-chv_team,True,1684,False,8,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703117)

<center>

[comment]: <img src=""./media/media/image1.png"" style=""width:1.088in;height:1.46256in"" alt=""escudo.png"" />

![./media/media/image1.png](./media/logo-upt.png)

# **UNIVERSIDAD PRIVADA DE TACNA**  
## **FACULTAD DE INGENIERÍA**  
### **ESCUELA PROFESIONAL DE INGENIERÍA DE SISTEMAS**  

---

# **ANÁLISIS DEL PERFIL PROFESIONAL DE LOS EGRESADOS DE LA EPIS DE LA UPT EN LINKEDIN**

## **Curso:** Inteligencia de Negocios  
## **Docente:** Mag. Patrick Cuadros Quiroga  

---

### **Integrantes:**  
- **Villanueva Mamani, Royser Alonsso**  
- **Hinojosa Mucho, Christian Dennis**  
- **Chite Quispe, Brian Danilo** 
 
  
## Objetivo Principal:
Evaluar el perfil profesional de los egresados de la EPIS de la UPT en LinkedIn para identificar sus habilidades, competencias, sectores laborales y trayectorias profesionales, y proponer estrategias para mejorar su posicionamiento en el mercado laboral.

## Objetivos Secundarios:
1. Identificar las habilidades y competencias más destacadas en los perfiles de los egresados.
2. Analizar los sectores laborales y roles profesionales predominantes en los que trabajan.
3. Examinar las trayectorias profesionales y el crecimiento de los egresados.
4. Evaluar la visibilidad y calidad de los perfiles de LinkedIn.
5. Comparar los perfiles con las demandas del mercado laboral actual.
6. Proponer recomendaciones para mejorar la presencia de los egresados en LinkedIn.
   
## RoadMap:

![Roadmap](./descarga.png)"
UPT-FAING-EPIS/proyecto-si885-2025-i-u1-tapia_ayma_poma_u1,proyecto,si885-2025-i-u1-tapia_ayma_poma_u1,True,2724,False,6,True,False,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703140)


# 📚 Análisis de Herramientas y Tecnologías en Tesis de Ingeniería de Sistemas - Perú 🇵🇪

> Proyecto para el curso de **Inteligencia de Negocios** - Universidad Privada de Tacna

---

# 🎓 Título del Proyecto  
**Análisis de las herramientas y tecnologías utilizadas en las tesis de grado de Ingeniería de Sistemas en universidades del Perú**

---

## ❗ Problemática

El avance tecnológico en Ingeniería de Sistemas exige que los estudiantes y profesionales se mantengan actualizados con las herramientas y tecnologías más relevantes en el mercado laboral.  
Sin embargo, no existe un análisis sistemático que permita identificar las herramientas y tecnologías más utilizadas en las tesis de grado de las universidades del país.

> 📌 **Consecuencias:**
> - Dificultad para identificar tendencias tecnológicas.  
> - Falta de claridad en los estudiantes sobre qué herramientas aprender.  
> - Limitaciones en la actualización curricular de las instituciones académicas.  

---

## 🎯 Objetivo Principal

**Analizar las herramientas y tecnologías utilizadas en las tesis de grado de las principales universidades de Ingeniería de Sistemas del Perú, con el propósito de proporcionar información útil para actualizar los programas académicos y alinearlos con las tendencias actuales del mercado laboral.**

---

## ✅ Objetivos Secundarios

- **Identificar** las herramientas y tecnologías más frecuentes en las tesis de las universidades más representativas del país.  
- **Clasificar** dichas herramientas por categoría:
  - Lenguajes de programación  
  - Bases de datos  
  - Frameworks  
  - Otras tecnologías relevantes  
- **Examinar** la evolución del uso de tecnologías a lo largo del tiempo.
- **Comparar** el uso de tecnologías en las tesis de universidades públicas y privadas del Perú para identificar diferencias y posibles brechas en la adopción tecnológica.
- **Presentar** los resultados mediante análisis visuales e interactivos para apoyar la toma de decisiones académicas fundamentadas.

---

## 👥 Integrantes

| Nombre | Código |
| :--- | :--- |
| Erick Yoel Ayma Choque | 2021072616 |
| Fabiola Estefani Poma Machicado | 2021070030 |
| Dylan Yariet Tapia Vargas | 2021072630 |

---

## 📋 Control de Versiones

| Versión | Hecha por | Revisada por | Aprobada por | Fecha | Motivo |
| :---: | :---: | :---: | :---: | :---: | :--- |
| 1.0 | MPV | PC | PC | 17/03/2025 | Versión Original |

---

## 🛠️ Tecnologías Utilizadas

- SQL Server 🗄️
- Power BI 📊

---


> **Tacna - Perú, 2025** 🌎"
UPT-FAING-EPIS/proyecto-si885-2025-i-u1-fm_fr_fv,proyecto,si885-2025-i-u1-fm_fr_fv,True,1532,False,3,True,False,False,"---
marp: true
theme: default
paginate: true
---

[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703202)

---

# 📈 Plataforma de Análisis del Mercado Laboral en Ingeniería de Sistemas

![w:200 h:250 bg right](media/logo-upt.png)

---

## 👥 Integrantes

- Mario Antonio Flores Ramos
- Andre Sebastian Flores Melendez
- Daleska Nicolle Fernandez Villanueva

---

## 🎯 Objetivo Principal

Desarrollar un dashboard interactivo, moderno e intuitivo que permita a los usuarios visualizar y analizar de forma clara la distribución geográfica y sectorial de las ofertas de empleo en Perú, con el objetivo de facilitar la identificación de oportunidades laborales y apoyar la toma de decisiones informadas en el contexto del mercado laboral actual.

---

## ✅ Objetivos Secundarios

- Mostrar cuántas ofertas de empleo hay según la categoría y la ubicación, para saber en qué regiones y sectores hay más oportunidades laborales.
- Visualizar los sueldos ofrecidos y el tipo de pago, para comparar mejor las condiciones económicas entre diferentes empleos.
- Permitir que el usuario filtre la información por categoría, empresa, tipo de contrato, ubicación y fecha, para encontrar trabajos que se ajusten a lo que busca.
- Presentar los detalles y requisitos de cada oferta de forma clara, incluyendo descripciones, tipo de contrato y enlaces para postular fácilmente.

---"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-ticona_martinez_perez,proyecto,si889-2025-i-u1-ticona_martinez_perez,True,3088,True,15,False,True,False,"# Plataforma Avanzada para la Generación Automática de Diagramas UML

**Empresa:** Tech Solutions
**Curso:** Patrones de Software
**Docente:** Mag. Patrick Cuadros

## 📌 Integrantes:

* **Alexis Jeanpierre Martínez Vargas** (2019063638)
* **Juan José David Pérez Vizcarra** (2019063636)
* **Jhon Thomas Ticona Chambi** (2018062232)

---

## 📖 Descripción del Proyecto

La **Plataforma Avanzada para la Generación Automática de Diagramas UML** es una herramienta web creada para facilitar la creación y edición de diagramas UML mediante automatización, validación en tiempo real y colaboración multiusuario.

Permite generar diagramas UML (clases, casos de uso, secuencia, componentes) desde código fuente y modelos JSON/YAML, asegurando precisión y eficiencia en la documentación.

## 🎯 Objetivo

Ofrecer una solución eficiente para la generación y edición colaborativa de diagramas UML, reduciendo la carga manual y mejorando la coherencia de los modelos.

## 📌 Alcance del Proyecto

Sistema web construido con **FastAPI** (backend) y **React** (frontend), incluyendo:

* 🚀 **Generación automática de diagramas UML** desde código fuente y modelos JSON/YAML.
* ✅ **Validación en tiempo real** de la consistencia de los diagramas.
* 🎨 **Edición manual asistida** con herramientas visuales.
* 🔄 **Colaboración multiusuario en tiempo real.**

## 🛠️ Tecnologías Utilizadas

* **FastAPI** (Backend)
* **React** (Frontend)

## 🚀 Instalación y Configuración

### 🔹 Requisitos Previos

* Python 3.9+
* Node.js 16+

### 🔹 Instalación del Backend (FastAPI)

```bash
# Clonar el repositorio
git clone https://github.com/usuario/repositorio.git
cd repositorio/Backend

# Crear entorno virtual e instalar dependencias
python -m venv venv
source venv/bin/activate  # En Windows: venv\Scripts\activate
pip install -r requirements.txt

# Ejecutar servidor de desarrollo
uvicorn app.main:app --reload
```

### 🔹 Instalación del Frontend (React)

```bash
cd ../Frontend
npm install
npm start
```

## 👥 Estructura del Proyecto

```
C:.
├───Backend
│   └───app
│       ├───api
│       ├───core
│       ├───db
│       ├───models
│       ├───schemas
│       ├───services
│       └───utils
└───Frontend
    └───src
        ├───components
        │   ├───Auth
        │   ├───Dashboard
        │   ├───Layout
        │   └───ui
        ├───context
        └───views
```

## 📈 Resultados de Pruebas de Seguridad y Calidad

### ✅ SonarQube

* Análisis estático completo sobre el backend con reporte de vulnerabilidades y code smells.
* 0 errores críticos detectados.

### 🚀 Snyk

* Evaluación de dependencias en tiempo real para detectar paquetes vulnerables.
* Todas las dependencias del backend y frontend sin vulnerabilidades conocidas.

### 📄 Semgrep

* Reglas aplicadas para identificar patrones de código inseguros.
* Se corrigieron issues menores en servicios del backend.

## 👤 Contribución

Para contribuir:

1. Haz un fork del repositorio.
2. Crea una rama: `git checkout -b feature-nueva`.
3. Sube tus cambios: `git commit -m 'Agregado X'` y `git push origin feature-nueva`.
4. Abre un **pull request**."
UPT-FAING-EPIS/proyecto-si885-2025-i-u1-hernandez_paja,proyecto,si885-2025-i-u1-hernandez_paja,True,708,False,4,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703737)
# Proyecto: Análisis del Uso de Herramientas Tecnológicas en los Proyectos de Estudiantes de Sistemas UPT

## Universidad Privada de Tacna
**Facultad de Ingeniería**  
**Escuela Profesional de Ingeniería de Sistemas**  

### Curso: Inteligencia de Negocios

**Docente:** Mag. Patrick Cuadros Quiroga

### Integrantes:
- **Hernandez Cruz, Angel Gadiel** (2021070017)  
- **Paja de la Cruz, Piero Alexander** (2020067576)  
### RoadMap:
![./media/media/Roadmap.png](./media/Roadmap.png)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-agreda_contreras_ortiz,proyecto,si889-2025-i-u1-agreda_contreras_ortiz,True,3597,False,8,True,True,True,"](https://classroom.github.com/a/IlvMPK2Y)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703740)
# proyecto-formatos-01
# 🚀 Infraestructura de Azure para WebApps - Proyecto Patrones

Este módulo de infraestructura contiene la configuración de Terraform para desplegar dos aplicaciones web en Azure, utilizando App Service Plan y Web Apps Linux, totalmente preparado para automatizar despliegues con GitHub Actions.

---

## ✅ Requisitos

- 🧑‍💻 Cuenta de Azure activa.
- 🔐 Haber creado un **Service Principal** y configurado el secreto `AZURE_CREDENTIALS` en GitHub.
- 📁 Tener configurado un archivo de variables (`terraform.tfvars`) en la carpeta `infra/`.
- ⚙️ Haber configurado GitHub Actions con el workflow `terraform-deploy.yml`.

---

## 🗂️ Archivos principales

|  📄 Archivo               | 📝 Descripción |
|:--------------------------|:------------|
| `main.tf`                 | Define el Resource Group, App Service Plan y WebApps. |
| `variables.tf`            | Variables de entrada para parametrizar la infraestructura. |
| `outputs.tf`              | Outputs importantes como las URLs de las WebApps creadas. |
| `terraform.tfvars`        | Valores reales para las variables definidas. |
| `providers.tf`            | Configuración del proveedor de Azure. |
| `versions.tf`             | Versiones requeridas de Terraform y AzureRM. |

---

## 📦 Variables esperadas (`variables.tf`)

| 🔑 Variable                  | Tipo     | Descripción |
|:---------------------------|:---------|:------------|
| `resource_group_name`      | `string` | Nombre del Resource Group donde desplegar recursos. |
| `location`                 | `string` | Región de Azure. |
| `app_service_plan_name`    | `string` | Nombre del App Service Plan para alojar las WebApps. |
| `webapps`                  | `list(object({ name = string }))` | Lista de aplicaciones web a crear. |

---

## 🚀 Procedimiento de despliegue

### 1️⃣ Crear y configurar el secreto de Azure
Tener en GitHub un secreto llamado `AZURE_CREDENTIALS` con el contenido JSON generado desde el siguiente comando:
```bash
az ad sp create-for-rbac --name ""terraform-gha-sp"" --role Contributor --scopes /subscriptions/$(az account show --query id -o tsv) --sdk-auth
```
🔒 Copia el JSON de salida y guárdalo como secreto `AZURE_CREDENTIALS` en GitHub ➝ Settings ➝ Secrets ➝ Actions.

---

### 2️⃣ Configurar archivo `terraform.tfvars`
En la carpeta `infra/`, crea o actualiza tu archivo `terraform.tfvars` con el contenido:
```bash
resource_group_name = ""nombre-de-tu-resource-group""  
location = ""East US""  
app_service_plan_name = ""nombre-de-tu-appservice-plan""

webapps = [
  { name = ""nombre-webapp-1"" },
  { name = ""nombre-webapp-2"" }
]
```
---

### 3️⃣ Usar el workflow de GitHub Actions

En GitHub ➔ pestaña **Actions**:

1. Selecciona el workflow **""Terraform Manual Deploy""**.
2. Haz clic en **Run workflow**.
3. Ingresa el nombre de tu archivo `.tfvars`.
4. Haz clic en **Run**.

🏗️ Esto ejecutará automáticamente:

- terraform init
- terraform validate
- terraform plan
- terraform apply

---

## 💡 Notas importantes

- 🌐 El despliegue aplica recursos en la **suscripción** donde fue creado el Service Principal.
- 💰 Los cambios de infraestructura son visibles usando Infracost en Pull Requests configurado en el `infracost.yml`.
- 🛠️ Pendiente: Agregar un workflow que permita enviar automáticamente el contenedor al Azure App Service tras una build exitosa.
---"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-chite_paja,proyecto,si889-2025-i-u1-chite_paja,True,2081,False,12,True,False,False,"## UNIVERSIDAD PRIVADA DE TACNA  
### FACULTAD DE INGENIERÍA  
### Escuela Profesional de Ingeniería de Sistemas  

---

## Plataforma de Colaboración Académica para Proyectos Innovadores en Ingeniería de Sistemas  

**Curso:** Patrones de Software  
**Docente:** Mag. Patrick José Cuadros Quiroga  

---

**Integrantes:**

- Brian Danilo Chite Quispe   (2021070015)  
- Piero Alexander Paja de la Cruz   (2020067576)  
- Mary Luz Chura Ticona   (2019065163)  

---

**Tacna – Perú**  
**2025**

## 1.3 Descripción

El propósito de este proyecto es diseñar e implementar una **Plataforma de Colaboración Académica** destinada a los estudiantes y docentes de la Escuela Profesional de Ingeniería de Sistemas de la **Universidad Privada de Tacna (UPT)**, con el objetivo de fomentar el desarrollo de proyectos innovadores, facilitar el trabajo en equipo, centralizar el seguimiento académico, y promover la interacción multidisciplinaria.

Mediante esta plataforma, se busca **optimizar los procesos de gestión de proyectos académicos**, mejorar la visibilidad de los trabajos desarrollados, y fortalecer las competencias digitales y colaborativas de los futuros ingenieros.

---

## 1.4 Objetivos

### 1.4.1 Objetivo General

Desarrollar una plataforma de colaboración académica que permita la gestión integral de proyectos innovadores en la Escuela Profesional de Ingeniería de Sistemas.

### 1.4.2 Objetivos Específicos

1. Crear un sistema de registro y perfiles básicos  
2. Desarrollar un módulo para subir y organizar proyectos  
3. Implementar un chat grupal por proyecto  
4. Permitir que docentes comenten y aprueben proyectos  
5. Crear un listado público de proyectos destacados

Roeadmap:

![roadmap](https://github.com/user-attachments/assets/81fbb9c9-f6bb-49b0-afeb-4ce6e99c8a0d)

## 1.5 Pasos Para la Ejecucion del Proyecto

### - Descargar las dependencias con el siguiente comando 
pip install -r requirements.txt
### - Ejecutar la carpeta de la Base de Dastos en HeidiSQL
### - Finalmente ejecutar el siguiente comando desde la raiz del proyecto
flask run  --debug"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-docucode-ai,proyecto,si889-2025-i-u1-docucode-ai,True,2631,False,3,True,True,True,"](https://classroom.github.com/a/IlvMPK2Y)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18737900)
# proyecto-formatos-01

# DocuCode-AI 🚀

[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)
![Python Version](https://img.shields.io/badge/Python-3.8%2B-blue)
![PHP Version](https://img.shields.io/badge/PHP-7.4%2B-purple)
[![Open Issues](https://img.shields.io/github/issues-raw/[TU_USUARIO]/DocuCode-AI)](https://github.com/[TU_USUARIO]/DocuCode-AI/issues)

**Herramienta de análisis y documentación automática de código con IA para entornos educativos**

<div align=""center"">
  <img src=""docs/demo-preview.gif"" alt=""Demo Preview"" width=""800"">
</div>

## ✨ Características Principales

| Función | Descripción | 
|---------|-------------|
| 🧠 **Análisis con IA** | Detección inteligente de patrones usando GPT-4 |
| 📊 **Diagramas UML** | Generación automática de diagramas de clases y secuencias |
| 📈 **Métricas de calidad** | Evaluación de complejidad y buenas prácticas |
| 🔄 **Integración CI/CD** | Compatible con GitHub Actions y GitLab CI |

## 🚀 Instalación Rápida

```bash
# Clonar repositorio
git clone https://github.com/[TU_USUARIO]/DocuCode-AI.git
cd DocuCode-AI

# Configurar entorno
python -m venv venv
source venv/bin/activate
pip install -r requirements.txt

# Configurar API Key de OpenAI
echo ""OPENAI_API_KEY=tu_clave_aqui"" > .env

```

📚 Documentación Completa
Consulta nuestra Wiki completa para:

📖 Guía de usuario detallada

🛠 Arquitectura técnica

🔍 Ejemplos de uso avanzado

🤝 Guía de contribución

💻 Uso Básico

from docucode import Analyzer

# Analizar proyecto
report = Analyzer.analyze(
    path=""mi_proyecto"",
    lang=""python"",
    generate_uml=True
)

# Exportar resultados
report.export(format=""html"")

# Línea de comandos
docucode analyze --input mi_proyecto --output report.pdf

🤝 Contribuciones
¡Tu ayuda es bienvenida! Sigue estos pasos:

Revisa las issues abiertas

Haz fork del proyecto

Crea tu rama: git checkout -b feature/nueva-funcionalidad

Envía un Pull Request

Normas de código:
Code Style
Tests

📄 Licencia
MIT License - Ver LICENSE para detalles.

<div align=""center""> Hecho con ❤️ por el equipo DocuCode-AI </div> ```

# Wiki DocuCode-AI 📚

## 🏗️ Arquitectura del Sistema

```mermaid
graph TD
  A[Usuario] --> B[Interfaz Web]
  B --> C{API REST}
  C --> D[Análisis de Código]
  D --> E[Generador UML]
  D --> F[Evaluador Calidad]
  C --> G[Base de Datos]
```"
UPT-FAING-EPIS/proyecto-si885-2025-i-u1-chambi_flores_leyva,proyecto,si885-2025-i-u1-chambi_flores_leyva,True,1576,False,0,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18754960)
# proyecto-formatos-01

CURSO: INTELIGENCIA DE NEGOCIOS

Integrantes:

Chambi Cori Jerson Roni 			(2021072619)

Flores Quispe Jaime Elias			(2021070309)

Leyva Sardón Elvis Ronald			(2021072614)


Objetivo
Diseñar e implementar un dashboard que facilite el monitoreo y análisis de la actividad en repositorios académicos de GitHub, permitiendo evaluar la calidad del desarrollo y promoviendo buenas prácticas en la gestión de versiones.
¿Como se va a medir la calidad? Hay una Formula?
¿Como se mide las buenas practicas de gestion de versiones?

Objetivos Específicos
●	Desarrollar un dashboard que recopile datos sobre commits, ramas, issues y pull requests en repositorios académicos. 
Solo por repositorios o tambien por estudiante?

●	Generar informes y métricas sobre la frecuencia de contribuciones, uso de tecnologías y documentación en los proyectos. 
Como se va a medir?

●	Proporcionar herramientas visuales para la consulta de estadísticas y tendencias de desarrollo. 
Cuales herramientas? con que datos?

●	Implementar funcionalidades que permitan evaluar el cumplimiento de buenas prácticas en la gestión de repositorios. 
Como cuales? y que datos se van a utilizar?

●	Facilitar la supervisión y retroalimentación de docentes mediante reportes detallados sobre la evolución de los proyectos estudiantiles.
Opino que este objetivo aun no."
UPT-FAING-EPIS/proyecto-si885-2025-i-u1-chura_u1,proyecto,si885-2025-i-u1-chura_u1,True,246,False,0,True,False,False,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18755074)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-tapia_poma_ayma,proyecto,si889-2025-i-u1-tapia_poma_ayma,True,1791,True,7,False,True,False,"# 📱 Proyecto Flutter - SI889 - Gestión Financiera Personal

## 📝 Descripción

El sistema tiene como objetivo automatizar el registro de ingresos y egresos, permitiendo a los usuarios gestionar sus finanzas personales de manera eficiente. La solución abarcará la creación de un interfaz accesible y fácil de usar para registrar y categorizar transacciones de manera rápida, así como generar reportes automáticos de los hábitos de consumo. Además, incluirá la integración de funciones para establecer presupuestos, alertas de gastos y recomendaciones de ahorro. La implementación también incluirá medidas de seguridad para garantizar la privacidad de los datos financieros.

---

## ✅ Requisitos Previos

Asegúrate de tener instalados los siguientes programas y configuraciones:

### **1. Visual Studio 2019**

- Instala **Visual Studio 2019** con la carga de trabajo de **""Desarrollo de escritorio de .Net""**.
---
### **2. Android Studio**

- Descarga **Android Studio** y realiza la configuración con los siguientes componentes:
  - **Android SDK**
  - **SDK Tools**
  - **Android SNK Build-Tools 36**
  - **Android Emulator** (por ejemplo, el emulador de Pixel 8)
  - **NDK**
---
### **3. Emulador de Android**

- Asegúrate de tener un emulador Android descargado y configurado, como el **Pixel 8**.
---
### **4. Flutter en Visual Studio**

- Instala el componente de **Flutter** para **Visual Studio**.
- Asegúrate de tener las **extensiones de Flutter** configuradas correctamente en Visual Studio.


---

## ⚙️ Instalación

```bash
# Clona el repositorio
git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u1-tapia_poma_ayma
cd proyecto

# Verifica el estado de tu instalación de Flutter
flutter doctor

# Instala dependencias
flutter pub get

# Ejecuta la app
flutter run"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-team_fm_fr_fv,proyecto,si889-2025-i-u1-team_fm_fr_fv,True,3150,False,18,True,True,True,"](https://classroom.github.com/a/IlvMPK2Y)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18793491)
# PROYECTO APLICACION PARA LA GENERACION AUTOMATIZADA DE UN DICCIONARIO DE DATOS

<center>

![./media/logo-upt.png](./media/logo-upt.png)

# **UNIVERSIDAD PRIVADA DE TACNA**  
## **FACULTAD DE INGENIERÍA**  
### **ESCUELA PROFESIONAL DE INGENIERÍA DE SISTEMAS**  

---

# **APLICACIÓN PARA LA GENERACIÓN AUTOMATIZADA DE UN DICCIONARIO DE DATOS**

## **Curso:** Patrones de Diseño 
## **Docente:** Mag. Patrick Cuadros Quiroga  

---

### **Integrantes:**  
- **Flores Melendez Andree Sebastian**  
- **Flores Ramos Mario Anthonio**  
- **Fernandez Villanueva Daleska Fernandez**  

---

## Objetivo Principal:
Desarrollar una aplicación capaz de conectarse a bases de datos relacionales para extraer automáticamente los metadatos y generar un diccionario de datos estructurado y exportable, facilitando la documentación técnica en proyectos de software.

## Objetivos Secundarios:
- Automatizar la extracción de metadatos de bases de datos.
- Generar un diccionario de datos estructurado en un formato accesible.
- Implementar una interfaz de usuario amigable para gestionar y actualizar los diccionarios de datos.
- Facilitar la integración de la aplicación con sistemas de gestión de bases de datos.

---

## RoadMap:

![Roadmap](./media/roadmap.png)

---


## Despliegue: GitHub + Azure

### Pre-requisitos
- Azure Subscription
- GitHub Account
- Terraform ≥ 1.0
- .NET SDK 8.0
- Node.js ≥ 18.0

### Configuración Azure

```bash
az ad sp create-for-rbac --name ""GitHubActionsDataDicGen"" --role contributor \
  --scopes /subscriptions/{ID-SUSCRIPCION} --sdk-auth
```

### Secretos GitHub
- AZURE_CREDENTIALS → Service Principal (JSON)
- SUBSCRIPTION_ID → ID de suscripción Azure
- SQL_USER → Admin SQL
- SQL_PASS → Password SQL

### Infraestructura

El `main.tf` despliega:
- Resource Group: `upt-arg-xxx`
- SQL Server + Database: `upt-dbs-xxx`
- App Service Plan: `upt-asp-xxx` (F1)
- Web App: `datagen-api-xxx` (.NET 8)

### Pipeline de Despliegue

1. **Terraform apply** → 5-10 min
2. **Build Backend** → Restore, Build, Publish
3. **Build Frontend** → npm install, build
4. **Deploy to Azure** → Web App deploy

### Monitoreo y Logs

- Azure Portal → App Service → Logs
- Application Insights → Performance

### Conexión BD

```
Server={server}.database.windows.net;
Database=DataDicGenDATABASE;
User={SQL_USER};Password={SQL_PASS};
TrustServerCertificate=True;
```

### Estructura Principal
```
DataDictGen.sln
├── Application  → Servicios, DTOs
├── Domain       → Entidades core
├── Frontend     → React/TypeScript
├── Infrastructure → Persistencia, migraciones
├── WebAPI       → Controllers API
└── Tests        → Testing
```

### Troubleshooting Rápido

| Problema | Acción |
|----------|--------|
| Error 503 | Revisar logs App Service |
| Fallo BD | Verificar credenciales y firewall |
| CI/CD | Revisar GitHub Actions logs |

---

*Team FM_FR_FV - UPT 2025*


</center>"
UPT-FAING-EPIS/proyecto-si784-2025-i-u1-syntax-upt,proyecto,si784-2025-i-u1-syntax-upt,True,289,False,0,True,False,False,"](https://classroom.github.com/a/Ql3zNhp1)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18794358)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-proyecto_chambenina_patrones,proyecto,si889-2025-i-u1-proyecto_chambenina_patrones,True,4482,True,7,True,False,False,"# ChargePass - Sistema Gestor de Contraseñas

## 📌 Planteamiento del Problema

En la actualidad, muchas personas utilizan contraseñas débiles, repetidas o poco seguras debido a la dificultad para recordar múltiples credenciales complejas. Esta situación incrementa el riesgo de accesos no autorizados, robo de identidad digital y vulnerabilidades en la protección de información sensible.

A pesar de que existen diversas herramientas para la gestión de contraseñas, muchas de ellas no ofrecen un proceso de autenticación previo confiable, ni garantizan una experiencia accesible y segura desde dispositivos móviles.

Además, el registro de usuarios sin una verificación adecuada puede abrir la puerta a registros fraudulentos o bots, comprometiendo la seguridad del sistema y la privacidad de los usuarios. La falta de mecanismos robustos de validación y generación segura de contraseñas limita la efectividad de estos sistemas como herramientas de protección frente a amenazas cibernéticas comunes.

## 🎯 Alcance y Justificación

**ChargePass** nace como una solución móvil moderna, segura e intuitiva que busca abordar estas limitaciones. Está diseñada para permitir a los usuarios registrar cuentas mediante verificación por correo electrónico, generar contraseñas robustas de forma automática (con criterios definidos como longitud, caracteres especiales, etc.) o manual (usando un token personalizado), y almacenarlas de manera segura en la nube.

La aplicación está construida con **Flutter** y utiliza **Firebase** como plataforma de respaldo para servicios como Firebase Auth, Firestore y Firebase Storage. Además de garantizar autenticación segura y control de acceso, el sistema contempla mejoras futuras como autenticación multifactor, validaciones por dispositivo y restricciones por dominio de correo.

Todo esto con el objetivo de proteger la identidad digital de los usuarios, evitar accesos indebidos y ofrecer una experiencia confiable desde cualquier dispositivo.

## Url Enlace Github 📌

https://github.com/tomasyoel/chargepasscheck

## Url Enlace Youtube📌

https://www.youtube.com/watch?v=pqg5qtxOhXs

## Comandos de Despliegue y Clonacion de Repositorio Github👨‍💻

1.- Abrir terminal CMD

2.- git glone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u1-proyecto_chambenina_patrones.git

3.- cd charguepassv4

4.- code .        (se abrira el visual studio)

5.- Ctrl+ñ  (para abrir la terminal de visual studio y en la terminal escribir el comando a continuacion)

6.- flutter clean

7.- flutter pub get (para recolectar las librerias)

8.- flutter build apk  (para sacar el archivo .apk para probarlo)


## Diagrama de Casos de Uso

### Reporte de Infracost

![alt text](image.png)


Diagrama de Caso de Usos Iniciar Sesión:

![imagen](https://github.com/user-attachments/assets/c57b2e90-2e57-49ee-be79-4469aea216c5)

Registro de Usuario:

![imagen](https://github.com/user-attachments/assets/6aaedd05-e416-45ce-acf1-612d73a330cf)

Generación Automática de Claves - Generar o guardar Contraseña:

![imagen](https://github.com/user-attachments/assets/cfbed588-a714-4d77-908a-3aedf842e1a2)

Generación Automática de Claves - Generar o guardar Contraseña:

![imagen](https://github.com/user-attachments/assets/376f3be5-3cc8-4e8e-a6a5-fe0dcbdae0e5)

Diagrama de Base de Datos

![Sin título](https://github.com/user-attachments/assets/2d825ea1-f8f5-4c02-aedd-6dbb1b151ffb)

Diagrama de Subsistemas:

![imagen](https://github.com/user-attachments/assets/d541121b-9fc0-4922-9042-420517727d05)

Arquitectura lógica del sistema ChargePass a nivel de clases:

![fLZRRXit47tVhrYa3ssH6h2J1eYDE8siIo90bWL9TXuDQdUy8hHBgYJNYXha8uf-KdwiGovtHUv52jeNGvev7CxbS6Ra3r8HeV8i3UI6iYqH90kZb4ZPKqhGLQvW776se7z1U5w7Z3XJKv91-A8dA4bVjEdDoOjNhIgrJo5SyJGEWf_3w-lhi7yt7Oq_tizx_V7tVwRXO1WEnelXzx](https://github.com/user-attachments/assets/ab028cd1-5208-4444-b023-0c15b32e9e98)

Diagrama de Secuencia : Generacion y guardado de Contraseña

![imagen](https://github.com/user-attachments/assets/7b835bb3-4b5b-4d8e-9b14-9f88fc7d5d38)

Diagrama de arquitectura del Proyecto:

![imagen](https://github.com/user-attachments/assets/6082cedf-8f56-4711-911a-6c08c7612282)

Diagrama de Componentes:

![dPTTJzim58RlyoiiTh6hIL3s0HAhI5DtgzIr7GKq2KsLIKvJgwuTEGwCJVllSzAaILCx2GC9AVRZys4VdzTSnuf8bMoPynPzrZy8Bsx7andwWgVunfraOqwyeJmYacoHBxQHuC3LGhqmG19yHNZ8e894nD-G4Ef0XOZN913Fb8T8oQIwL8g41xwG72JgdJgra8OOURDlyzaKJs_nmX](https://github.com/user-attachments/assets/c30abac8-6903-4a09-977a-6df9a6d35949)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u1-ccalli_cespedes,proyecto,si889-2025-i-u1-ccalli_cespedes,True,14555,False,0,True,False,True,"﻿**Sistema de Recomendación de Carreras Universitarias Basado en el Perfil del Usuario – Tacna ![ref1]**

**Estudiantes:** 

**Cespedes Medina, Christian Alexander** **CCalli Chata, Joel Robert** 

**Antecedentes** 

El sistema de recomendación de carreras universitarias surge ante la dificultad que enfrentan muchos jóvenes al momento de elegir una carrera profesional acorde a sus intereses, habilidades y aspiraciones. La falta de orientación vocacional personalizada y el desconocimiento de las opciones disponibles generan decisiones mal informadas, deserción universitaria y baja satisfacción profesional. Este proyecto busca facilitar el proceso de elección vocacional mediante un sistema inteligente y automatizado que sugiera carreras afines al perfil del usuario. 

**Planteamiento del Problema** 

**Problema** 

Los estudiantes que culminan la educación secundaria suelen tener dificultades para identificar una carrera universitaria adecuada a su perfil personal, académico y vocacional. La carencia de herramientas tecnológicas de apoyo genera incertidumbre, desinformación y, en muchos casos, decisiones erróneas que afectan su futuro profesional. 

**Justificación** 

La implementación de un sistema de recomendación permitirá guiar a los jóvenes hacia decisiones más acertadas sobre su formación universitaria, considerando sus intereses, competencias y personalidad. Esto contribuirá a reducir los índices de deserción universitaria, aumentar la satisfacción vocacional y fomentar un mejor aprovechamiento del talento humano. 

**Alcance** 

El sistema abarcará el análisis del perfil del usuario a través de un cuestionario estructurado, procesamiento de respuestas mediante algoritmos de recomendación, visualización de resultados personalizados y sugerencia de carreras afines. También incluirá la posibilidad de generar reportes en PDF con los resultados obtenidos y permitirá el registro de usuarios para seguimiento. No incluirá asesoría en tiempo real ni integración con bases de datos externas de universidades en esta primera fase. 

**Objetivos** 

**Objetivo General** 

Desarrollar un sistema de recomendación de carreras universitarias que oriente a los usuarios en función de su perfil, intereses y aptitudes. 

**Objetivos Específicos** 

- Implementar un módulo de evaluación de intereses y habilidades del usuario. 
- Desarrollar un algoritmo de recomendación de carreras basado en el perfil individual. ![ref1]
- Diseñar una interfaz amigable para la presentación de sugerencias personalizadas. 
- Permitir la generación de reportes PDF con los resultados de recomendación. 
- Facilitar el registro y autenticación de usuarios para mantener su historial. 

**Marco Teórico** 

- Fundamentos de orientación vocacional y teoría de las inteligencias múltiples. 
- Sistemas de recomendación: tipos y aplicaciones en la educación. 
- Arquitectura de software educativo basado en la web. 
- Técnicas de minería de datos y análisis de perfiles. 
- Seguridad de la información y privacidad de datos personales en entornos educativos. 

**Desarrollo de la Solución Análisis de Factibilidad** 

- **Evaluación técnica:** Uso de tecnologías modernas como ASP.NET y SQL Server, compatibles con aplicaciones web educativas. 
- **Evaluación económica:** Desarrollo con herramientas de código abierto y hosting económico en la nube (como somee.com). 
- **Evaluación operativa:** Mejora en el proceso de orientación vocacional y toma de decisiones educativas. 
- **Evaluación social:** Apoyo a jóvenes en su desarrollo profesional, contribuyendo al desarrollo educativo del país. 
- **Evaluación legal:** Cumplimiento de normativas de protección de datos personales de los usuarios. 
- **Evaluación ambiental:** Uso eficiente de recursos digitales, evitando material impreso innecesario. 

**Tecnología de Desarrollo** 

- **Lenguajes de programación:** ASP.NET con C# para el backend, HTML/CSS y JavaScript para el frontend. 
- **Base de datos:** SQL Server para almacenamiento de perfiles, resultados y configuraciones del sistema. 
- **Infraestructura:** Despliegue en la nube para asegurar disponibilidad, escalabilidad y accesibilidad remota. 

**Metodología de Implementación ![ref1]**

Se empleará la metodología ágil **Scrum**, que permitirá el desarrollo iterativo e incremental del sistema, facilitando la incorporación de mejoras continuas. Se elaborarán los siguientes documentos técnicos como base de planificación y ejecución: 

- Documento de Visión 
- Documento de Requisitos del Software (SRS) 
- Documento de Arquitectura del Sistema (SAD) 

Diagrama de Despliegue: 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.002.png)

Infracost Report: 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.003.jpeg)

Diagrama de Arquitectura: ![ref1]

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.004.png)

Diagrama del Proceso Propuesto 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.005.png)

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.006.jpeg)

**II. Especificación de Requerimientos de Software ![ref1]**

Requerimientos Funcionales: 



|**Código** |**Nombre** |**Descripción** |**Prioridad** |
| - | - | - | - |
|RF-001 |Registro de Usuario |El sistema permitirá registrar nuevos usuarios con sus datos básicos para crear un perfil. |Alta |



|RF-002 |Inicio de Sesión |El sistema permitirá que los usuarios inicien sesión con su correo electrónico y contraseña. |Alta |
| - | - | :- | - |
|RF-003 |Ingreso de Perfil del Usuario |El sistema permitirá ingresar habilidades, intereses, rendimiento y tipo de personalidad. |Alta |
|RF-004 |Generar Recomendación |El sistema generará recomendaciones de carreras según los datos del perfil del usuario. |Alta |
|RF-005 |Visualizar Detalles de Carreras |El sistema mostrará detalles relevantes sobre cada carrera sugerida (duración, materias, etc.). |Alta |
|RF-006 |Guardar Recomendaciones |El usuario podrá guardar sus recomendaciones para visualizarlas posteriormente. |Media |
|RF-007 |Comparación de Carreras |El usuario podrá comparar dos o más carreras recomendadas por área, duración y dificultad. |Media |
|RF-008 |Filtros Avanzados |El sistema permitirá filtrar recomendaciones por ubicación, tipo de universidad o modalidad. |Media |
|RF-009 |Retroalimentación de Resultados |El sistema permitirá valorar la recomendación recibida para mejorar futuras sugerencias. |Baja |
|RF-010 |Test de Orientación Vocacional |El sistema incluirá un test vocacional basado en preguntas psicométricas para enriquecer el perfil. |Alta |

Requerimientos No Funcionales: ![ref1]



|**Código** |**Nombre** |**Descripción** |
| - | - | - |
|RNF- 001 |Seguridad |El sistema protegerá la información del usuario mediante protocolos HTTPS y cifrado de datos. |
|RNF- 002 |Rendimiento |Las recomendaciones se generarán en menos de 2 segundos bajo condiciones normales de carga. |
|RNF- 003 |Usabilidad |La interfaz será simple, intuitiva y amigable para usuarios sin experiencia técnica. |
|RNF- 004 |Accesibilidad |El sistema será accesible para usuarios con discapacidades, cumpliendo con estándares WCAG. |
|RNF- 005 |Mantenibilidad |El sistema estará desarrollado de forma modular para permitir mejoras y correcciones rápidas. |

**V. Fase de Desarrollo** 

**5.1. Perfiles de UsuarioGeneralización de Redes** 



|**Campo** |**Valor** |
| - | - |
|**Representante** |Administrador |
|**Descripción** |Responsable de la administración y gestión completa del sistema de recomendación de carreras, asegurando su funcionamiento y accesibilidad. |
|**Tipo** |Usuario con permisos totales sobre la gestión del sistema y asignación de privilegios a otros usuarios. |
|**Responsabilidades** |- Control total sobre la operación del sistema, sin restricciones. - Acceso y gestión a la base de datos de usuarios, recomendaciones y carreras. - Asignación de privilegios a otros usuarios (por ejemplo, asesores o estudiantes). - Monitoreo y supervisión de las recomendaciones generadas por el sistema. - Generación de reportes de uso del sistema y evidencia de recomendaciones realizadas. |

**HU01: Registro de Cliente** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.007.jpeg)

**HU02: Iniciar Sesión** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.008.jpeg)

**HU03: Actualización de Perfil** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.009.jpeg)

**HU04: Selección de Carrera** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.010.jpeg)

**HU05: Visualización de Recomendaciones** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.011.png)

**HU06: Realizar Búsqueda de Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.012.jpeg)

**HU07: Ver Detalles de una Carrera** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.013.png)

**HU08: Guardar Carreras Favoritas** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.014.png)

**HU09: Ver Histórico de Carreras Consultadas** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.015.png)

**HU10: Filtrar Carreras por Requisitos** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.016.jpeg)

**HU11: Recomendar Carreras Basadas en Perfil** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.017.png)

**HU12: Contactar con Asesor de Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.018.jpeg)

**HU13: Ver Notificaciones** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.019.jpeg)

**HU14: Eliminar Carrera de Favoritos** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.020.png)

**HU15: Ver Detalles del Asesor** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.021.png)

**HU16: Configurar Preferencias de Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.022.png)

**HU17: Buscar Asesores por Especialidad** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.023.png)

**HU18: Consultar Plan de Estudio de Carrera** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.024.png)

**HU19: Enviar Comentarios sobre el Sistema** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.025.png)

**HU20: Cerrar Sesión** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.026.png)

**Diagrama de Secuencia:** 

🔹 **HU01 - Registro de Cliente** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.027.jpeg)

🔹 **HU02 - Iniciar Sesión** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.028.jpeg)

🔹 **HU03 - Actualización de Perfil** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.029.jpeg)

🔹 **HU04 - Selección de Carrera** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.030.jpeg)

🔹 **HU05 - Visualización de Recomendaciones** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.031.png)

🔹 **HU06 - Realizar Búsqueda de Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.032.jpeg)

🔹 **HU07 - Ver Detalles de una Carrera** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.033.jpeg)

🔹 **HU08 - Guardar Carreras Favoritas** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.034.jpeg)

🔹 **HU09 - Ver Histórico de Carreras Consultadas** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.035.jpeg)

🔹 **HU10 - Filtrar Carreras por Requisitos** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.036.jpeg)

🔹 **HU11 - Comparar Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.037.jpeg)

🔹 **HU12 - Evaluar Perfil del Usuario** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.038.png)

🔹 **HU13 - Recibir Recomendaciones por Correo** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.039.png)

🔹 **HU14 - Acceder desde Dispositivo Móvil** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.040.jpeg)

🔹 **HU15 - Recibir Notificaciones sobre Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.041.jpeg)

🔹 **HU16 - Descargar PDF de Recomendaciones** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.042.jpeg)

🔹 **HU17 - Calificar Carreras Recomendadas** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.043.jpeg)

🔹 **HU18 - Contactar con un Asesor** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.044.jpeg)

🔹 **HU19 - Visualizar Ranking de Carreras** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.045.jpeg)

🔹 **HU20 - Gestionar Preferencias del Sistema** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.046.png)

**Diagrama de Clases:** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.047.jpeg)

**Diagrama de Base de Datos:** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.048.jpeg)

**Tablas de Base de Datos:** 

![](img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.049.png)

**Conclusión:** 

- El sistema propuesto de recomendación de carreras universitarias basado en el perfil del usuario proporcionará a los estudiantes una herramienta eficiente para tomar decisiones informadas sobre su futuro académico. Al ofrecer recomendaciones personalizadas según los intereses, habilidades y preferencias del usuario, el sistema facilita una experiencia única y personalizada, ayudando a los estudiantes a identificar las carreras más alineadas con sus objetivos profesionales. 

**Bibliografía:** 

1. García, M. (2020). *Sistemas de recomendación para educación superior*. Editorial Universitaria. 
1. Pérez, A., & Rodríguez, C. (2019). *Tecnologías de información aplicadas a la educación universitaria*. McGraw-Hill. 
1. López, J. (2021). *Análisis de datos y personalización de servicios educativos*. Editorial Académica. 
1. Sánchez, R., & Gómez, S. (2018). *Sistemas de recomendación: teoría y aplicaciones*. Springer. 
1. Hernández, P. (2022). *Inteligencia artificial en la educación: una aproximación práctica*. Pearson. 
1. Martínez, L., & Ruiz, V. (2020). *Innovaciones en sistemas de recomendación: Casos de estudio*. Elsevier. 
1. Castillo, F. (2021). *Evaluación de perfiles académicos para la recomendación de carreras*. Editorial Técnica. 
1. Fernández, M. (2019). *Algoritmos de recomendación y su impacto en la toma de decisiones*. Universidad de Barcelona. 
1. Pérez, L., & Jiménez, E. (2021). *Uso de big data en la educación: tendencias y perspectivas*. Wiley. 
1. Torres, A., & Ramírez, D. (2020). *Sistemas inteligentes para la personalización educativa en línea*. Routledge. 

[ref1]: img/Aspose.Words.a16e838d-c678-488d-af62-6fe167feefe2.001.png"
UPT-FAING-EPIS/si889_2025-i-proyecto_si889_2025-i-u2-proyecto-formatos-01,si889_2025,i-proyecto_si889_2025-i-u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/si784_2025-i-proyecto_si784_2025-i-u2-proyecto-formatos-01,si784_2025,i-proyecto_si784_2025-i-u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/si885_2025-i-proyecto_si885_2025-i-u2-proyecto-formatos-01,si885_2025,i-proyecto_si885_2025-i-u2-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-documentos-ia,proyecto,si784-2025-i-u2-documentos-ia,True,6379,False,13,True,True,False,"](https://classroom.github.com/a/c_xOAv9g)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19547133)

[![Infracost CI](https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u2-documentos-ia/actions/workflows/infracost.yml/badge.svg)](https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u2-documentos-ia/actions/workflows/infracost.yml)
# 📄✨ Proyecto Generador de Documentación Impulsado por IA (GDI-IA)

## 🔹 1. Descripción del Proyecto

Este proyecto tiene como objetivo diseñar e implementar una 🌐 plataforma web capaz de ayudar a completar documentos estructurados de manera automática, utilizando diversas 🤖 IAs especializadas en redacción, análisis de contenido y generación de referencias. La solución permitirá a los usuarios completar los documentos en poco tiempo siguiendo formatos predefinidos, reduciendo el esfuerzo manual ✍️ y asegurando la coherencia y calidad del contenido.

## ❓ Preguntas Claves

### 1. Problemática

Actualmente, la elaboración de documentos técnicos y académicos implica un proceso manual que consume tiempo ⏳, requiere conocimientos específicos 📚 y suele estar sujeto a errores de formato y redacción. Esta situación genera inconsistencias en el contenido 📄❌, dificulta el cumplimiento de estructuras predefinidas y limita la productividad de estudiantes, desarrolladores y profesionales que necesitan generar documentación clara, coherente y reutilizable en plazos cortos 🚀.

### 2. Alcance

El sistema abarca:

- ✏️ Ayuda automatizada para completar documentos en formatos estandarizados (FD01-FD06).
- 📝 Un módulo de captura de datos donde el usuario ingresará información clave.
- 🧠 Integración de IAs para procesar y generar contenido por secciones.
- 📄 Generación de documentos en formatos PDF.
- 📂 Almacenamiento y gestión de documentos generados.

**⚠️ El sistema no incluye la edición manual posterior al documento generado dentro de la plataforma.**

### 3. Limitaciones y posibles implementaciones

- 🔗 El sistema dependerá de la disponibilidad de servicios de IA externos, como OpenAI y otros proveedores de APIs.
- 🚫 La plataforma no ofrecerá edición manual posterior a los documentos generados.
- 🌟 Como posible mejora futura, se podría incluir un editor visual para realizar cambios antes de exportar el documento.

## 🎯 Objetivo del Proyecto

Automatizar la creación de documentos formales siguiendo formatos estandarizados, reduciendo el esfuerzo manual y asegurando la calidad del contenido ✅. La solución debe ser confiable y fácil de usar,  para estudiantes, desarrolladores y profesionales que necesiten generar documentación técnica o académica 📚🖥️.

## 🔹 2. Tecnologías y herramientas usadas

- **🛠️ Lenguajes principales:** PHP, MySQL
- **🎨 Frontend:** HTML5, CSS3, JavaScript
- **🧩 Librerías adicionales:** (pendiente a integrar en fases futuras)
- **📡 APIs externas:** OpenAI (GPT), Hugging Face
- **🌐 Servidor Web:** Apache
- **🔄 Control de versiones:** Git / GitHub
- **🛠️ Otras herramientas:**
  - PhpMyAdmin para la administración de base de datos o MySQL
  - Composer (opcional para manejo de dependencias futuras)

## 🔹 3. Requisitos del sistema

- **🖥️ Servidor Web:** Apache 2.4
- **⚙️ PHP:** Versión 8.1 o superior
  - Extensiones requeridas:
    - `pdo_mysql`
    - `mbstring`
    - `curl`
    - `openssl`
    - `json`
- **🗃️ MySQL:** 5.7 o superior
- **🖥️ Sistema operativo del servidor:** Windows / Linux / macOS
- **🌐 Acceso a Internet:** Para consumir APIs de IA
- **🛠️ Editor sugerido:** Visual Studio Code

## 🔹 4. Procedimiento de instalación

1. **📥 Clonar el repositorio:**

Utilizar Git Bash o CMD:

```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u1-aas.git
```

2. **🔧 Instalar Apache, PHP y MySQL:**

Se recomienda instalar [XAMPP](https://www.apachefriends.org/es/index.html).

3. **📁 Mover el proyecto:**

Copiar la carpeta `proyecto-si784-2025-i-u1-aas` dentro de `C:\xampp\htdocs\gdi-ia`

4. **🛡️ Configurar permisos:**

No es necesario configurar permisos especiales en Windows.

5. **🗄️ Crear la base de datos:**

Abrir `PhpMyAdmin` desde `http://localhost/phpmyadmin/` y ejecutar:

```sql
CREATE DATABASE db_gdiia;
CREATE USER 'gdiia_user'@'localhost' IDENTIFIED BY 'tu_password_segura';
GRANT ALL PRIVILEGES ON db_gdiia.* TO 'gdiia_user'@'localhost';
FLUSH PRIVILEGES;
```

6. **📤 Importar el esquema de la base de datos:**

En `PhpMyAdmin`, seleccionar `db_gdiia`, ir a Importar y cargar el archivo `bd/db_gdiia.sql`.

7. **🛠️ Configurar la conexión a base de datos en el proyecto:**

Editar `config/conexion.php`:

```php
<?php
$host = ""localhost"";
$user = ""gdiia_user"";
$pass = ""tu_password_segura"";
$dbname = ""db_gdiia"";
?>
```

8. **🔐 Configurar API keys de servicios de IA** donde corresponda.

9. **🌐 Acceder a la aplicación:**

Desde el navegador: `http://localhost/gdi-ia/`

## 🔹 5. Configuración del proyecto

- **🔑 Variables de entorno necesarias:**
  - API Key de OpenAI.
  - Configuración de acceso a la base de datos.

- **🔒 Sugerencia:** Para mayor seguridad, almacenar claves en variables de entorno o en un archivo `.env` protegido.

## 🔹 6. Comandos principales

- **🚀 Iniciar Apache y MySQL en Windows (XAMPP):**

Abrir el panel de control de XAMPP y dar clic en `Start` en Apache y MySQL.

- **🔍 Ver estado de Apache y MySQL:**

Desde el panel de XAMPP puedes ver si están en verde (activos).

## 🔹 7. Parámetros o configuraciones especiales

- **🤖 Consumo de APIs de IA:**
  - Se requiere una API Key activa de OpenAI para las funcionalidades de generación automática.

- **📈 Límites configurables:**
  - Se puede establecer un número máximo de documentos generados por usuario en la versión gratuita.

## 🔹 8. Notas adicionales

- ⚠️ Verificar siempre las cuotas de uso de OpenAI para evitar costos inesperados.
- 🔄 Mantener actualizado XAMPP en tu sistema.
- 💾 Se recomienda implementar backups regulares de la base de datos.

# 📚 Créditos

Proyecto desarrollado por 👥:

- **Akhtar Oviedo, Ahmed Hasan** (2022074261)
- **Ayala Ramos, Carlos Daniel** (2022074266)
- **Salas Jiménez, Walter Emmanuel** (2022073896)
- **Ancco Suaña, Bruno Enrique** (2023077472)

Repositorio oficial: [GDI-IA](https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u2-documentos-ia)"
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-documentos_datafiller,proyecto,si784-2025-i-u2-documentos_datafiller,True,2284,False,1,True,False,False,"](https://classroom.github.com/a/c_xOAv9g)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19547322)

# DataFiller
**DataFiller** es una herramienta innovadora que facilita la generación de datos sintéticos realistas para pruebas y simulaciones. Su principal objetivo es ayudar a desarrolladores, testers y profesionales de bases de datos a obtener registros automáticos de alta calidad, ahorrando tiempo y garantizando la efectividad en las pruebas. Compatible con bases de datos SQL y NoSQL, DataFiller se adapta a diversas necesidades de generación de datos, ofreciendo análisis inteligente y múltiples formatos de exportación.

## Funcionalidades Principales
- **Generación Rápida de Registros:** Permite generar registros de manera instantánea, optimizando el tiempo de prueba y desarrollo al automatizar la creación de datos.
- **Datos Realistas:** Los datos generados simulan información real, lo que permite obtener resultados más precisos y representativos durante las pruebas.
- **Compatibilidad Universal:** Funciona perfectamente con bases de datos SQL y NoSQL, lo que garantiza su uso en una amplia variedad de proyectos y arquitecturas.
- **Análisis Inteligente de Estructuras:** DataFiller detecta automáticamente la estructura de las tablas, facilitando la generación de registros adaptados a las necesidades específicas de cada base de datos.
- **Exportación en Múltiples Formatos:** Ofrece diversas opciones para exportar los datos generados, incluyendo SQL y JSON, según las necesidades del proyecto.
  
- **Consultas Ilimitadas (Plan Premium):** Con el Plan Premium, se eliminan las restricciones en las consultas diarias, brindando mayor flexibilidad y rendimiento.
  
- **Datos Personalizados por Industria (Plan Premium):** DataFiller ofrece la opción de generar datos adaptados a diferentes sectores, como salud, finanzas, y comercio electrónico, garantizando la relevancia de los registros generados.
  
- **Soporte Prioritario (Plan Premium):** Los usuarios Premium tienen acceso a soporte prioritario, asegurando respuestas rápidas y soluciones efectivas para cualquier duda o inconveniente."
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-markdown2video,proyecto,si784-2025-i-u2-markdown2video,True,4309,False,5,True,False,False,"](https://classroom.github.com/a/Ql3zNhp1)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18683862)

# Convertidor Automático de Markdown a Video Interactivo - Markdown2Video

## 1. Problemática  
En la actualidad, la creación de contenido audiovisual, especialmente en forma de videos educativos, promocionales o de divulgación, representa un desafío significativo para muchas personas y organizaciones. La producción de videos de calidad requiere conocimientos en edición, herramientas especializadas y tiempo considerable para desarrollar contenido atractivo.  

Las herramientas tradicionales de edición de video, como **Adobe Premiere, Final Cut Pro o DaVinci Resolve**, ofrecen un alto grado de personalización, pero requieren una curva de aprendizaje elevada y demanda de recursos computacionales considerables. Esto limita su accesibilidad a personas que no tienen experiencia en edición de video o que necesitan generar contenido de forma rápida y eficiente sin dedicar largas horas a la edición manual.  

Por otro lado, **Markdown** se ha convertido en un estándar ampliamente utilizado para la escritura estructurada de contenido en múltiples ámbitos, como documentación técnica, blogs y presentaciones. Sin embargo, actualmente no existe una solución accesible y automatizada que permita convertir estos documentos en videos interactivos sin necesidad de intervención manual.  

Este vacío en el mercado crea una barrera para creadores de contenido, docentes, empresas y profesionales que buscan transformar documentos en videos sin enfrentarse a procesos complicados de edición. En muchos casos, estas personas terminan utilizando herramientas de presentación como **PowerPoint o Google Slides con grabaciones de pantalla**, lo que puede ser un proceso tedioso y con limitaciones en cuanto a personalización y calidad.  

---

## 2. Objetivo General  
Desarrollar un sistema automatizado denominado **Markdown2Video**, capaz de convertir presentaciones escritas en formato **Markdown con Marp** en videos interactivos de manera eficiente y sin intervención manual, optimizando la generación de contenido audiovisual para diversas aplicaciones, como educación, divulgación, marketing y documentación técnica.  

---

## 3. Objetivos Específicos  
1. **Implementar un editor con soporte para Marp** que permita a los usuarios escribir sus presentaciones en Markdown con previsualización en tiempo real.  
2. **Desarrollar un módulo de conversión automática** que transforme las presentaciones en videos con transiciones predefinidas.  
3. **Optimizar el rendimiento del sistema** mediante el uso de herramientas como **FFmpeg** para la renderización eficiente de videos en formatos compatibles (MP4, WebM, AVI).  
4. **Permitir la personalización de estilos y duración de diapositivas**, ofreciendo opciones para cambiar, velocidad de presentación y efectos visuales.  
5. **Evaluar la usabilidad y accesibilidad del sistema** a través de pruebas con usuarios finales, validando su facilidad de uso y efectividad en la generación de contenido audiovisual.  

---

## 4. Justificación  
La transformación digital ha incrementado la demanda de contenido audiovisual accesible y de rápida producción. En este contexto, el desarrollo de **Markdown2Video** responde a la necesidad de **automatizar la generación de videos a partir de presentaciones Markdown**, permitiendo a usuarios sin conocimientos en edición de video convertir su contenido en material visual interactivo sin esfuerzo adicional.
### Beneficios clave:  
✅ **Automatización del proceso**: Reduce el tiempo y esfuerzo necesario para convertir presentaciones en videos.  
✅ **Accesibilidad**: Permite a cualquier usuario, sin conocimientos de edición, generar contenido visual.  
✅ **Eficiencia y optimización**: Usa tecnologías como **FFmpeg** para una conversión rápida y eficiente.  
✅ **Aplicación en múltiples sectores**: Educación, marketing digital, documentación técnica y divulgación de información.  
✅ **Innovación**: No existe actualmente una herramienta que realice esta conversión de forma completamente automatizada."
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-syntax,proyecto,si784-2025-i-u2-syntax,True,5230,True,25,True,True,True,"# 🎓 Sistema de Mentoría Académica – AMS

**AMS-UPT** es una plataforma web integral para la gestión de mentorías universitarias, creada para mejorar el rendimiento académico, automatizar procesos y fomentar el acompañamiento personalizado.

---

## 📘 Descripción General

Este sistema fue desarrollado por estudiantes de Ingeniería de Sistemas de la **Universidad Privada de Tacna**, con el propósito de:

- Reducir la deserción universitaria.
- Aumentar el rendimiento académico.
- Optimizar la carga docente.
- Conectar estudiantes con mentores de forma efectiva.

Incluye módulos para la gestión de usuarios, programación de clases, registro de asistencia, evaluación y generación de reportes académicos.

---

## 🧪 Tecnologías Utilizadas

| Categoría       | Tecnologías                           |
|------------------|----------------------------------------|
| Lenguaje         | PHP 8                                  |
| Base de Datos    | MySQL 8 (HeidiSQL)                     |
| Frontend         | HTML5, CSS3, Bootstrap 5               |
| Backend          | Apache + PHP-FPM                       |
| Local Dev        | XAMPP                                  |
| DevOps           | Git, GitHub, Terraform, Infracost      |
| Gestión Ágil     | Jira (Scrum)                           |
| UI/UX            | Figma, Balsamiq                        |

---

## ⚙️ Instalación y Ejecución Local
- Clona el repositorio:
   ```bash
   git clone https://github.com/usuario/proyecto-ams.git
    ```
- Importa la base de datos desde el archivo `ams_db.sql` a tu servidor MySQL.
- Configura el archivo `config/Conexion.php` con tus credenciales locales.
- Asegúrate de tener habilitadas las extensiones `mysqli` y `openssl` en tu `php.ini`.
- Copia el proyecto en htdocs y abre en navegador:

   http://localhost/web_asm/public/index.php

---

## 🚀 Funcionalidades Principales

### 🔐 Login y Roles
- Acceso diferenciado para administrador, estudiante y mentor.

### 📅 Gestión Académica
- Registro y programación de clases.
- Asignación de aulas, horarios y ciclos.
- Emparejamiento mentor–estudiante.

### 🎯 Seguimiento y Evaluación
- Registro de asistencia.
- Calificaciones y observaciones.
- Reportes de rendimiento.

### 📊 Administración y Reportes
- Panel de control.
- Visualización de métricas.
- Notificaciones y alertas internas.

### Integración con Discord y Google Meet
- Acceso controlado a canal privado de Discord del sistema.
- Gestión de roles y códigos de acceso automáticos para clases en Discord.
- Selección del modo de reunión por parte del mentor (Discord y/o Google Meet).
- Generación automática de enlaces de reunión según plataforma seleccionada.

### Dashboard General
- Panel centralizado con:
- Actividad reciente.
- Clases programadas.
- Estadísticas de asistencia y desempeño.
- Alertas y notificaciones internas.

---

## 📷 Capturas de Pantalla

### 🔑 Pantalla de Login
![Login](ruta/a/captura_login.png)

### 🏠 Dashboard del Mentor
![Dashboard Mentor](ruta/a/captura_dashboard_mentor.png)

### 📚 Vista de Clases Asignadas
![Clases Asignadas](ruta/a/captura_clases_asignadas.png)

### 📝 Calificación de Estudiantes
![Calificaciones](ruta/a/captura_calificaciones.png)

### 📈 Vista de Reportes de Clases
![Reportes](ruta/a/captura_reportes.png)

### 👨‍🎓 Vista del Estudiante – Clases Asignadas
![Clases Estudiante](ruta/a/captura_estudiante_clases.png)

### 📆 Programación de Mentorías
![Programación](ruta/a/captura_programacion.png)

---

## 👥 Autores

- 👨‍💻 Gregory Brandon Huanca Merma – Full Stack Developer  
- 👨‍💻 Joan Cristian Medina Quispe – Backend Developer  
- 🎨 Rodrigo Samael Adonai Lira Álvarez – UI/UX Specialist  

---

## 📜 Licencia

Proyecto académico desarrollado como parte del curso  
**Calidad y Pruebas de Software – Universidad Privada de Tacna.**  
**Uso exclusivo con fines educativos.**

---

## 🚀 Terraform: Automatización de Infraestructura

Este proyecto utiliza Terraform para desplegar una instancia EC2 en AWS como parte del sistema de mentoría académica.

### 📁 Estructura:
- `infra/main.tf`: Define la instancia EC2.
- `infra/variables.tf`: Variables sensibles (AWS).
- `terraform_apply.yml`: Workflow automático.

### 🔐 Seguridad
Las claves de acceso a AWS se manejan mediante GitHub Secrets.

## 🧪 Reportes de Cobertura y Análisis Estático

Este sistema cuenta con pruebas unitarias y generación de reportes de cobertura y análisis estático:

- ✅ Generación automática de reportes HTML y XML con PHPUnit.
- ✅ Más del 70% de cobertura alcanzada.
- ✅ Publicación en GitHub Pages (`docs/coverage`).
- ✅ Integración con SonarQube y Semgrep para análisis estático.

📁 Ruta: `/docs/coverage/index.html`  
🔗 [Ver cobertura online](https://tuusuario.github.io/PROYECTO-SI784-2025-I-U2-SYNTAX/coverage/)

## 🛣️ Roadmap del Proyecto

- ✅ Registro y autenticación de usuarios
- ✅ Gestión de clases y asignación de mentorías
- ✅ Evaluación y seguimiento académico
- ✅ Integración con Discord y Google Meet
- ✅ Dashboard centralizado
- 🔄 Implementación de análisis predictivo *(en desarrollo)*
- 🔄 Versión móvil multiplataforma *(planeado)*
- 🔄 Integración con sistemas académicos UPT *(planeado)*

---

Desarrollado con ❤️ por estudiantes de Ingeniería de Sistemas – UPT"
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-documentsreqfine,proyecto,si784-2025-i-u2-documentsreqfine,True,289,False,0,True,False,False,"](https://classroom.github.com/a/c_xOAv9g)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19547385)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-pianorise_agreda_contreras_ortiz,proyecto,si889-2025-i-u2-pianorise_agreda_contreras_ortiz,True,3597,False,8,True,True,True,"](https://classroom.github.com/a/IlvMPK2Y)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703740)
# proyecto-formatos-01
# 🚀 Infraestructura de Azure para WebApps - Proyecto Patrones

Este módulo de infraestructura contiene la configuración de Terraform para desplegar dos aplicaciones web en Azure, utilizando App Service Plan y Web Apps Linux, totalmente preparado para automatizar despliegues con GitHub Actions.

---

## ✅ Requisitos

- 🧑‍💻 Cuenta de Azure activa.
- 🔐 Haber creado un **Service Principal** y configurado el secreto `AZURE_CREDENTIALS` en GitHub.
- 📁 Tener configurado un archivo de variables (`terraform.tfvars`) en la carpeta `infra/`.
- ⚙️ Haber configurado GitHub Actions con el workflow `terraform-deploy.yml`.

---

## 🗂️ Archivos principales

|  📄 Archivo               | 📝 Descripción |
|:--------------------------|:------------|
| `main.tf`                 | Define el Resource Group, App Service Plan y WebApps. |
| `variables.tf`            | Variables de entrada para parametrizar la infraestructura. |
| `outputs.tf`              | Outputs importantes como las URLs de las WebApps creadas. |
| `terraform.tfvars`        | Valores reales para las variables definidas. |
| `providers.tf`            | Configuración del proveedor de Azure. |
| `versions.tf`             | Versiones requeridas de Terraform y AzureRM. |

---

## 📦 Variables esperadas (`variables.tf`)

| 🔑 Variable                  | Tipo     | Descripción |
|:---------------------------|:---------|:------------|
| `resource_group_name`      | `string` | Nombre del Resource Group donde desplegar recursos. |
| `location`                 | `string` | Región de Azure. |
| `app_service_plan_name`    | `string` | Nombre del App Service Plan para alojar las WebApps. |
| `webapps`                  | `list(object({ name = string }))` | Lista de aplicaciones web a crear. |

---

## 🚀 Procedimiento de despliegue

### 1️⃣ Crear y configurar el secreto de Azure
Tener en GitHub un secreto llamado `AZURE_CREDENTIALS` con el contenido JSON generado desde el siguiente comando:
```bash
az ad sp create-for-rbac --name ""terraform-gha-sp"" --role Contributor --scopes /subscriptions/$(az account show --query id -o tsv) --sdk-auth
```
🔒 Copia el JSON de salida y guárdalo como secreto `AZURE_CREDENTIALS` en GitHub ➝ Settings ➝ Secrets ➝ Actions.

---

### 2️⃣ Configurar archivo `terraform.tfvars`
En la carpeta `infra/`, crea o actualiza tu archivo `terraform.tfvars` con el contenido:
```bash
resource_group_name = ""nombre-de-tu-resource-group""  
location = ""East US""  
app_service_plan_name = ""nombre-de-tu-appservice-plan""

webapps = [
  { name = ""nombre-webapp-1"" },
  { name = ""nombre-webapp-2"" }
]
```
---

### 3️⃣ Usar el workflow de GitHub Actions

En GitHub ➔ pestaña **Actions**:

1. Selecciona el workflow **""Terraform Manual Deploy""**.
2. Haz clic en **Run workflow**.
3. Ingresa el nombre de tu archivo `.tfvars`.
4. Haz clic en **Run**.

🏗️ Esto ejecutará automáticamente:

- terraform init
- terraform validate
- terraform plan
- terraform apply

---

## 💡 Notas importantes

- 🌐 El despliegue aplica recursos en la **suscripción** donde fue creado el Service Principal.
- 💰 Los cambios de infraestructura son visibles usando Infracost en Pull Requests configurado en el `infracost.yml`.
- 🛠️ Pendiente: Agregar un workflow que permita enviar automáticamente el contenedor al Azure App Service tras una build exitosa.
---"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-poma_ayma_tapia,proyecto,si889-2025-i-u2-poma_ayma_tapia,True,1693,True,8,False,True,False,"# 📱 Proyecto Flutter - SI889 - Gestión Financiera Personal

## 📝 Descripción

Este sistema tiene como objetivo automatizar el registro de egresos, permitiendo a los usuarios gestionar sus finanzas personales de manera eficiente. La solución incluye:

- Interfaz accesible y fácil de usar.
- Registro y categorización rápida de transacciones.
- Generación de reportes automáticos sobre hábitos de consumo.
- Establecimiento de presupuestos y alertas de gastos.


---

## ✅ Requisitos Previos

Antes de ejecutar el proyecto, asegúrate de tener instalado lo siguiente:

### 🧰 Herramientas necesarias

#### 1. Visual Studio 2019

- Instalar con la carga de trabajo: **Desarrollo de escritorio de .NET**.

#### 2. Android Studio

Instalar y configurar los siguientes componentes:

- **Android SDK**
- **SDK Tools**
- **Android SDK Build-Tools 36**
- **Android Emulator** (por ejemplo: Pixel 8)
- **NDK**

#### 3. Emulador Android

- Tener configurado un emulador como **Pixel 8** en Android Studio.

#### 4. Flutter y Dart en Visual Studio Code

- Instalar las extensiones:
  - **Flutter**
  - **Dart**
- Verifica que Flutter esté agregado correctamente al **PATH** del sistema.

---

## ⚙️ Instalación y Ejecución

Sigue estos pasos para clonar y ejecutar el proyecto en tu entorno local:

```bash
# 1. Clona el repositorio
git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u1-tapia_poma_ayma.git

# 2. Accede al directorio del proyecto
cd proyecto-si889-2025-i-u1-tapia_poma_ayma

# 3. Verifica el estado de tu entorno Flutter
flutter doctor

# 4. Instala las dependencias del proyecto
flutter pub get

# 5. Ejecuta la aplicación en un emulador o dispositivo conectado
flutter run"
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-scae-upt,proyecto,si784-2025-i-u2-scae-upt,True,6049,True,25,False,True,False,"# 🎓 SCAE-UPT - Sistema de Control de Acceso Electrónico
Sistema Integral de Control de Acceso Electrónico para la Universidad Privada de Tacna

## 📋 Descripción
SCAE-UPT es un sistema moderno y completo de control de acceso diseñado específicamente para la Universidad Privada de Tacna. El sistema moderniza el proceso de ingreso al campus universitario mediante tecnología QR y autenticación institucional, proporcionando una solución segura, eficiente y fácil de usar.

### 🎯 Características Principales
- 🔐 Autenticación Segura : Login con cuentas institucionales de Google
- 📱 Códigos QR Dinámicos : Generación de códigos QR únicos con expiración de 5 minutos
- 🖥️ Aplicación de Escritorio : Interface para personal de seguridad con escaneo QR
- 🌐 Plataforma Web : Portal estudiantil para generación de códigos de acceso
- 📊 Reportes y Auditoría : Historial completo de ingresos y salidas
- ⚡ Tiempo Real : Verificación instantánea de credenciales
## 🏗️ Arquitectura del Sistema
El proyecto está estructurado en dos componentes principales:

### 🖥️ Aplicación de Escritorio (DesktopApp)
Tecnologías : C# .NET Framework 4.7.2, Windows Forms, MySQL

- Propósito : Interface para personal de vigilancia
- Funcionalidades :
  - Escaneo y validación de códigos QR
  - Verificación de identidad en tiempo real
  - Registro automático de ingresos/salidas
  - Gestión de visitantes
  - Generación de reportes
### 🌐 Aplicación Web (WebApp)
Tecnologías : ASP.NET Core 8.0, Entity Framework, MySQL, Docker

- Propósito : Portal para estudiantes y administración
- Funcionalidades :
  - Autenticación con Google OAuth
  - Generación de códigos QR personales
  - Historial de accesos
  - API REST para integración
  - JWT para seguridad
## 🚀 Inicio Rápido
### 📱 Para Estudiantes - Plataforma Web
1. Accede al sistema : https://scae-upt-app.azurewebsites.net
2. Inicia sesión con tu cuenta institucional de Google (@virtual.upt.pe)
3. Genera tu código QR con un solo clic
4. Presenta el código en el acceso a la universidad
⏰ Importante : Los códigos QR tienen una validez de 5 minutos por seguridad

### 🖥️ Para Personal de Seguridad - Aplicación de Escritorio
Credenciales de Acceso :

- Usuario : segurid
- Contraseña : 123
Descarga : Enlace de descarga del instalador

## 🛠️ Instalación y Desarrollo
### Prerrequisitos
- .NET 8.0 SDK
- .NET Framework 4.7.2
- MySQL Server 8.0+
- Visual Studio 2022 o VS Code
- Docker (opcional)
### Configuración del Entorno
1. Clona el repositorio :
```
git clone https://github.com/usuario/proyecto-si784-2025-i-u2-scae-upt.git
cd proyecto-si784-2025-i-u2-scae-upt
```
2. Configura las variables de entorno :
```
# WebApp/.env
GOOGLE_CLIENT_ID=tu_google_client_id
GOOGLE_CLIENT_SECRET=tu_google_client_secret
JWT_SECRET_KEY=tu_jwt_secret_key
MYSQL_CONNECTION_STRING=tu_connection_string
```
3. Ejecuta la aplicación web :
```
cd WebApp/pyWeb_ScaeUPT
dotnet restore
dotnet run
```
4. Compila la aplicación de escritorio :
```
cd DesktopApp
nuget restore SCAE-UPT.sln
msbuild SCAE-UPT.sln /p:Configuration=Release
```
### 🐳 Usando Docker
```
cd WebApp/pyWeb_ScaeUPT
docker build -t scae-upt-web .
docker run -p 8080:8080 scae-upt-web
```
## 🧪 Testing
El proyecto incluye pruebas automatizadas con diferentes enfoques:

### Pruebas BDD (Behavior Driven Development)
```
cd WebApp/pyWeb_ScaeUPT.Tests
dotnet test
```
### Cobertura de Código
- Cobertura actual : 76.92%
- Reportes : Disponibles en TestResults/coverage.cobertura.xml
### Pruebas de Mutación
Se ejecutan automáticamente en el pipeline de CI/CD para validar la calidad de las pruebas.

## 📊 CI/CD y DevOps
El proyecto incluye pipelines automatizados de GitHub Actions:

- 🔨 Build & Release : Compilación automática de la aplicación de escritorio
- 📋 BDD Reports : Generación de reportes de pruebas de comportamiento
- 📈 Coverage Reports : Reportes de cobertura de código
- 🔒 Security Scans : Análisis de seguridad con Semgrep y Snyk
- ☁️ Terraform : Infraestructura como código para Azure
## 🏛️ Estructura del Proyecto
```
proyecto-si784-2025-i-u2-scae-upt/
├── 📱 DesktopApp/                 # Aplicación de escritorio
│   ├── pyDesktop_ScaeUPT/         # Código fuente principal
│   ├── SCAE-UPT.Installer/        # Instalador Inno Setup
│   └── SCAE-UPT.sln              # Solución Visual Studio
├── 🌐 WebApp/                     # Aplicación web
│   ├── pyWeb_ScaeUPT/            # API y frontend
│   ├── pyWeb_ScaeUPT.Tests/      # Pruebas automatizadas
│   └── ReporteBDD/               # Reportes de pruebas
├── 📚 Documentación/              # Informes técnicos
├── 🔧 .github/workflows/         # Pipelines CI/CD
└── 📄 README.md                  # Este archivo
```
## 🔒 Seguridad
- Autenticación OAuth 2.0 con Google
- JWT Tokens para sesiones seguras
- Códigos QR con expiración (5 minutos)
- Cifrado de datos sensibles
- Auditoría completa de accesos
- Análisis de seguridad automatizado
## 📖 Documentación Técnica
- 📋 Informe de Factibilidad
- 🎯 Documento de Visión
- 📝 Especificación de Requerimientos
- 🏗️ Arquitectura de Software
- 📊 Informe Final del Proyecto
## 🤝 Contribución
¡Tu ayuda es muy valiosa! Puedes contribuir de las siguientes maneras:

### 🐛 Reportar Errores
1. Ve a la sección Issues
2. Crea un nuevo issue describiendo el problema
3. Incluye pasos para reproducir el error
4. Adjunta capturas de pantalla si es necesario
### ✨ Sugerir Mejoras
1. Abre una Discussion
2. Describe tu idea o sugerencia
3. Explica cómo beneficiaría al proyecto
### 🔧 Contribuir Código
1. Fork el repositorio
2. Crea una rama para tu feature ( git checkout -b feature/nueva-funcionalidad )
3. Commit tus cambios ( git commit -m 'Añadir nueva funcionalidad' )
4. Push a la rama ( git push origin feature/nueva-funcionalidad )
5. Abre un Pull Request
## 👥 Equipo de Desarrollo
- Antayhua Mamani, Renzo Antonio (2022074258)
- Colque Ponce, Sergio Alberto (2022073503)
Docente : Mag. Patrick Cuadros Quiroga Curso : Calidad y Pruebas de Software Universidad : Universidad Privada de Tacna Facultad : Ingeniería - Escuela Profesional de Ingeniería de Sistemas"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-chambe_nina_condori,proyecto,si889-2025-i-u2-chambe_nina_condori,True,4535,True,7,True,False,False,"# ChargePass - Sistema Gestor de Contraseñas

## 📌 Planteamiento del Problema

En la actualidad, muchas personas utilizan contraseñas débiles, repetidas o poco seguras debido a la dificultad para recordar múltiples credenciales complejas. Esta situación incrementa el riesgo de accesos no autorizados, robo de identidad digital y vulnerabilidades en la protección de información sensible.

A pesar de que existen diversas herramientas para la gestión de contraseñas, muchas de ellas no ofrecen un proceso de autenticación previo confiable, ni garantizan una experiencia accesible y segura desde dispositivos móviles.

Además, el registro de usuarios sin una verificación adecuada puede abrir la puerta a registros fraudulentos o bots, comprometiendo la seguridad del sistema y la privacidad de los usuarios. La falta de mecanismos robustos de validación y generación segura de contraseñas limita la efectividad de estos sistemas como herramientas de protección frente a amenazas cibernéticas comunes.

## 🎯 Alcance y Justificación

**ChargePass** nace como una solución móvil moderna, segura e intuitiva que busca abordar estas limitaciones. Está diseñada para permitir a los usuarios registrar cuentas mediante verificación por correo electrónico, generar contraseñas robustas de forma automática (con criterios definidos como longitud, caracteres especiales, etc.) o manual (usando un token personalizado), y almacenarlas de manera segura en la nube.

La aplicación está construida con **Flutter** y utiliza **Firebase** como plataforma de respaldo para servicios como Firebase Auth, Firestore y Firebase Storage. Además de garantizar autenticación segura y control de acceso, el sistema contempla mejoras futuras como autenticación multifactor, validaciones por dispositivo y restricciones por dominio de correo.

Todo esto con el objetivo de proteger la identidad digital de los usuarios, evitar accesos indebidos y ofrecer una experiencia confiable desde cualquier dispositivo.

## Url Enlace Github 📌

https://github.com/tomasyoel/chargepasscheck

## Url Enlace Youtube📌

https://www.youtube.com/watch?v=pqg5qtxOhXs

## Comandos de Despliegue y Clonacion de Repositorio Github👨‍💻

1.- Abrir terminal CMD

2.- git glone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-chambe_nina_condori

3.- cd charguepassv4

4.- code .        (se abrira el visual studio)

5.- Ctrl+ñ  (para abrir la terminal de visual studio y en la terminal escribir el comando a continuacion)

6.- flutter clean

7.- flutter pub get (para recolectar las librerias)

8.- flutter build apk  (para sacar el archivo .apk para probarlo)


## Diagrama de Casos de Uso

### Reporte de Infracost

![image](https://github.com/user-attachments/assets/7faf53ad-2425-4685-a61d-0305c8f77a1a)

Diagrama de Caso de Usos Iniciar Sesión:

![imagen](https://github.com/user-attachments/assets/c57b2e90-2e57-49ee-be79-4469aea216c5)

Registro de Usuario:

![imagen](https://github.com/user-attachments/assets/6aaedd05-e416-45ce-acf1-612d73a330cf)

Generación Automática de Claves - Generar o guardar Contraseña:

![imagen](https://github.com/user-attachments/assets/cfbed588-a714-4d77-908a-3aedf842e1a2)

Generación Automática de Claves - Generar o guardar Contraseña:

![imagen](https://github.com/user-attachments/assets/376f3be5-3cc8-4e8e-a6a5-fe0dcbdae0e5)

Diagrama de Base de Datos

![Sin título](https://github.com/user-attachments/assets/2d825ea1-f8f5-4c02-aedd-6dbb1b151ffb)

Diagrama de Subsistemas:

![imagen](https://github.com/user-attachments/assets/d541121b-9fc0-4922-9042-420517727d05)

Arquitectura lógica del sistema ChargePass a nivel de clases:

![fLZRRXit47tVhrYa3ssH6h2J1eYDE8siIo90bWL9TXuDQdUy8hHBgYJNYXha8uf-KdwiGovtHUv52jeNGvev7CxbS6Ra3r8HeV8i3UI6iYqH90kZb4ZPKqhGLQvW776se7z1U5w7Z3XJKv91-A8dA4bVjEdDoOjNhIgrJo5SyJGEWf_3w-lhi7yt7Oq_tizx_V7tVwRXO1WEnelXzx](https://github.com/user-attachments/assets/ab028cd1-5208-4444-b023-0c15b32e9e98)

Diagrama de Secuencia : Generacion y guardado de Contraseña

![imagen](https://github.com/user-attachments/assets/7b835bb3-4b5b-4d8e-9b14-9f88fc7d5d38)

Diagrama de arquitectura del Proyecto:

![imagen](https://github.com/user-attachments/assets/6082cedf-8f56-4711-911a-6c08c7612282)

Diagrama de Componentes:

![dPTTJzim58RlyoiiTh6hIL3s0HAhI5DtgzIr7GKq2KsLIKvJgwuTEGwCJVllSzAaILCx2GC9AVRZys4VdzTSnuf8bMoPynPzrZy8Bsx7andwWgVunfraOqwyeJmYacoHBxQHuC3LGhqmG19yHNZ8e894nD-G4Ef0XOZN913Fb8T8oQIwL8g41xwG72JgdJgra8OOURDlyzaKJs_nmX](https://github.com/user-attachments/assets/c30abac8-6903-4a09-977a-6df9a6d35949)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-leyva_chambi_floresq,proyecto,si889-2025-i-u2-leyva_chambi_floresq,True,3511,False,10,True,True,False,"![./media/media/image1.png](./media/logo-upt.png)

CURSO: PATRONES DE SOFTWARE

Integrantes:

Chambi Cori Jerson Roni (2021072619)

Flores Quispe Jaime Elias (2021070309)

Leyva Sardón Elvis Ronald (2021072614)

Brian Danilo Chite Quispe (2021070015)

# 🚀 Proyecto: Desarrollo de un Sistema de Conversión y Organización de Documentos Técnicos en Markdown con Estructuración Automática y Control de Versiones para los estudiantes en la facultad de Ingeniería de Sistemas

Este proyecto permite la conversión automática de documentos en diversos formatos (Word, PDF, HTML, TXT) al formato **Markdown** y la organización de estos documentos en un sistema estructurado con control de versiones. El proyecto está diseñado para estudiantes y docentes de la Facultad de Ingeniería de Sistemas de la Universidad Privada de Tacna.

## Tecnologías y Herramientas Principales

- **Cosine Similarity**: Integrado para la detección de plagio entre documentos, permitiendo comparar la similitud entre textos de manera eficiente.
- **Deepseek Azure AI Foundry**: Se emplea inteligencia artificial para mejorar el procesamiento y análisis de los documentos, aportando capacidades avanzadas de clasificación y organización automática.
- **FastAPI**: Framework utilizado para la creación de APIs rápidas, eficientes y fáciles de mantener, facilitando la interacción con el sistema y la integración con otros servicios.
- **Control de Versiones**: Gestión y seguimiento de los cambios realizados a los documentos, asegurando integridad y trazabilidad.
- **Terraform**: Para la gestión y despliegue de infraestructura, especialmente útil para entornos en la nube.
- **SQL Server / Azure SQL**: Base de datos centralizada para almacenamiento y consulta eficiente de los documentos y metadatos.

## Diagrama caso de uso 

![./media/media/doc1.png](./media/doc1.png)

## Paquetes de secuencia 
![./media/media/doc2.png](./media/doc2.png)
##  1. Validar formato de archivo
![./media/media/doc3.png](./media/doc3.png)


## Diagrama de arquitectura software
![./media/media/doc4.png](./media/doc4.png)
## Diagrama de arquitectura del sistema (Diagrama de componentes)
![./media/media/doc5.png](./media/doc5.png)
## Vista de Despliegue
Diagrama de infraestructura
![./media/media/doc6.png](./media/doc6.png)
Diagrama de arquitectura
![./media/media/doc7.png](./media/doc7.png)




## Requisitos del Sistema

Antes de instalar y ejecutar el proyecto, asegúrate de tener los siguientes requisitos:

- **Sistema Operativo**: Compatible con Linux, macOS y Windows
- **Python**: Versión 3.8 o superior
- **Dependencias**: Todas las dependencias necesarias se encuentran en el archivo `requirements.txt`
- **Base de Datos**: **SQL Server** (Azure SQL para bases de datos en la nube)
- **Terraform**: Para la gestión de infraestructura (si es necesario)

## Instalación

### 1. Clona el repositorio
```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u1-floresq_chambi_leyva.git
```
2️⃣ Configura el entorno virtual
Para evitar conflictos con otras bibliotecas, es recomendable crear un entorno virtual.
     
```bash
python -m venv venv
```
En Windows:

```bash
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
.\venv\Scripts\Activate.ps1
```

3️⃣ Instala las dependencias
Con el entorno virtual activado, instala las dependencias necesarias:

```bash
pip install -r requirements.txt
```

4️⃣ Inicia la aplicación
Una vez todo esté configurado, ejecuta el servidor de desarrollo:

```bash
python run.py
```"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro,proyecto,si889-2025-i-u2-lupaca_viveros_jarro,True,10110,False,44,True,True,True,"](https://classroom.github.com/a/ZtQ31pSG)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19677797)

# DocuCode-AI

Sistema web inteligente para la evaluación automática de código fuente y generación de diagramas UML, orientado a mejorar el proceso de enseñanza-aprendizaje en el ámbito académico universitario.

---

## 🎓 Proyecto académico

Este proyecto fue desarrollado en el marco del curso **PATRONES DE SOFTWARE**  
Facultad de Ingeniería - EPIS - Universidad Privada de Tacna  
Docente: *Patrick José Cuadros Quiroga*

---

## 🚀 Descripción del Proyecto

**DocuCode-AI** es una plataforma web que permite a docentes y estudiantes:

- Analizar código fuente automáticamente utilizando IA (OpenAI API).
- Generar diagramas UML (Clases, Casos de Uso, Actividad, Componentes, Paquetes, Secuencia).
- Evaluar la calidad del código.
- Detectar código duplicado.
- Generar comentarios explicativos en el código.
- Consultar el historial de análisis por usuario.

---

## 📄 Documentación del Proyecto

| Documento | Formato PDF | Formato Markdown |
|-----------|-------------|------------------|
| FD01 - Informe de Factibilidad | [📄 Descargar](./FD01-EPIS-Informe%20de%20Factibilidad.pdf) | [📄 Ver MD](./FD01-Informe-Factibilidad.md) |
| FD02 - Informe de Visión de Producto | [📄 Descargar](./FD02-EPIS-Informe%20Vision.pdf) | [📄 Ver MD](./FD02-Informe-Vision.md) |
| FD03 - Informe de Especificación de Requerimientos | [📄 Descargar](./FD03-EPIS-Informe%20Especificación%20Requerimientos.pdf) | [📄 Ver MD](./FD03-EPIS-Informe%20Especificación%20Requerimientos.md) |
| FD04 - Informe de Arquitectura de Software | [📄 Descargar](./FD04-EPIS-Informe%20Arquitectura%20de%20Software.docx) | — |
| FD05 - Informe de Proyecto | 📄 Descargare | 📄 Descargar |
| Anexo - Diccionario de Datos | 📄 Descargar | 📄 Descargar |
| Anexo - Estándar de Programación | 📄 Descargar| 📄 Descargar |

---

## 📊 Análisis económico con Terraform

El análisis económico del proyecto ha sido realizado utilizando **Terraform** para simular la infraestructura requerida y calcular los costos asociados a un despliegue en la nube.

Resumen:

- VPS (Elastika) simulado: 2 vCPU, 4 GB RAM, 50 GB SSD → S/ 100 anuales.
- Beneficio / Costo (B/C): **16.24** → Proyecto viable (FD01).

Ver detalles completos en:  
👉 [FD01 - Informe de Factibilidad](./FD01-EPIS-Informe%20de%20Factibilidad.pdf)

---

## 📌 Puntos del GitHub Wiki

👉  [Acceder al Wiki del Proyecto](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro/wiki)

El Wiki incluye:

- Descripción del producto
- Manual de uso
- Roadmap de versiones
- Características planeadas
- Posibles mejoras futuras

---

## 📍 Roadmap de versiones
Roadmap:
![image](https://github.com/user-attachments/assets/b8197fe7-f1fe-4703-b2b5-a9067bd036ed)
### Versión 1.0 (actual)

- Generación de diagramas UML básicos.
- Análisis de código con IA.
- Evaluación de calidad y duplicados.
- Historial de análisis por usuario.

### Futuras versiones (planeado)

- Exportación avanzada de reportes.
- Mejora de precisión en diagramas de actividad y secuencia.
- Soporte para más lenguajes (Java, C#).
- Integración con LMS institucional.

---

## 📝 Historias de usuario

| ID | Historia de Usuario |
|----|---------------------|
| HU01 | Como **docente**, quiero **analizar automáticamente el código fuente** para ahorrar tiempo en la evaluación. |
| HU02 | Como **estudiante**, quiero **generar automáticamente los diagramas UML** para mejorar la documentación de mis proyectos. |
| HU03 | Como **usuario**, quiero **ver el historial de mis análisis** para hacer seguimiento a mi progreso. |
| HU04 | Como **usuario**, quiero **detectar código duplicado** para mejorar la calidad de mi código. |

---

## ✅ Criterios de aceptación (formato Gherkin)

### HU01 - Análisis automático de código

```gherkin
DADO que soy un docente autenticado
CUANDO subo un archivo de código fuente
ENTONCES el sistema genera comentarios automáticos sobre el código
```

### HU02 - Generación de diagramas UML

```gherkin
DADO que soy un usuario autenticado
CUANDO subo un archivo ZIP con código fuente
ENTONCES el sistema genera automáticamente los diagramas UML solicitados
```

### HU04 - Detección de código duplicado

```gherkin
DADO que he subido un archivo de código fuente
CUANDO ejecuto la función de detección de duplicados
ENTONCES el sistema muestra un reporte de posibles duplicados encontrados
```

---

## 🛠️ Requisitos para desplegar el proyecto

### 📌 Requisitos del sistema

- Servidor VPS o local (XAMPP, WAMP, LAMP).
- PHP >= 8.1
- MySQL o MariaDB
- Composer

### 📌 Dependencias

- OpenAI API (API KEY)
- PlantUML
- Terraform

---

## ⚙️ Procedimiento de despliegue

### 1️⃣ Clonar el repositorio

```bash
git clone https://github.com/tu-usuario/docucode-ai.git
```

### 2️⃣ Instalar dependencias PHP

```bash
composer install
```

### 3️⃣ Configurar variables de entorno

Crear `.env`:

```env
OPENAI_API_KEY=tu_api_key
DB_HOST=localhost
DB_NAME=nombre_de_tu_db
DB_USER=usuario_db
DB_PASS=contraseña_db
```

### 4️⃣ Configurar la base de datos

Importar el script `database.sql` en MySQL/MariaDB.

### 5️⃣ Ejecutar el sistema

```
http://localhost/docucode-ai
```

---

## 🚀 GitHub Projects (tareas relacionadas a ramas)

👉 [Acceder a GitHub Projects](https://github.com/tu-usuario/docucode-ai/projects)

- HU01, HU02, HU03, HU04 → Completadas y vinculadas a ramas `feature/...` o `develop`.

---

## 🛡️ GitHub Actions - Seguridad

👉 [Acceder a GitHub Actions](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro/actions)

- SonarQube → análisis de bugs y vulnerabilidades → configurado.
- Snyk o Semgrep → escaneo de dependencias → configurado.

---

## 🏷️ GitHub - Releases y Packages

👉 [Acceder a Releases](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro/releases)

- Release v1.0 publicado.
- Package de distribución → publicado (opcional).

---

## 🤝 GitHub - Contribuciones al proyecto

| Integrante | Commits | Pull Requests | Issues cerrados |
|------------|---------|---------------|-----------------|
| Farley Rodrigo Viveros Blanco | X | Y | Z |
| Ronal Daniel Lupaca Mamani | X | Y | Z |

---

## 🌍 Actions para despliegue de infraestructura


- Workflow [`terraform_deploy.yml`](./.github/workflows/terraform_deploy.yml) → despliegue real de infraestructura en AWS EC2 utilizando Terraform.

### Resultado de ejecución:

✅ Workflow ejecutado correctamente → instancia EC2 real creada.

```
Outputs:
instance_public_ip = ""3.95.193.156""
```

### Evidencia:

Instancias EC2 creadas en AWS us-east-1 (N. Virginia):

![image](https://github.com/user-attachments/assets/e89796b6-9378-4f7b-bf1e-305d917df7b8)

![image](https://github.com/user-attachments/assets/b8b27d26-06e3-44b1-8f3e-6504286a5e0d)

![image](https://github.com/user-attachments/assets/3c7359ab-0081-4918-ab79-f68f4342dbe4)


### Archivos utilizados:

- [`terraform_deploy.yml`](./.github/workflows/terraform_deploy.yml)
- [`main.tf`](./infra/terraform/main.tf)
- [`variables.tf`](./infra/terraform/variables.tf)
- [`outputs.tf`](./infra/terraform/outputs.tf)

---

## 🚀 Actions para despliegue de la aplicación

- Workflow `app_deploy.yml` → despliegue automático de la app a servidor VPS.

---

## 🎬 Video de Exposición

👉 [Ver video en YouTube](https://youtu.be/TU_VIDEO)  
👉 [Presentación MARP](https://github.com/tu-usuario/docucode-ai/tree/main/docs/marp)

---

## 🧑‍💻 Autores

- Farley Rodrigo Eduardo Viveros Blanco - 2020066896
- Ronal Daniel Lupaca Mamani - 202006146

---

## 📜 Licencia

Este proyecto es de uso académico, desarrollado en el marco del curso **Patrones de Software - EPIS UPT**.

---
## 🖼️ Diagramas UML y Arquitectura del Sistema

A continuación se presentan los diagramas UML y de arquitectura obtenidos mediante reverse engineering del código del sistema **DocuCode-AI**, tal como se solicita en la rúbrica FD04:

### 📌 Diagrama de Casos de Uso

![Casos de Uso](./imgdiagrama/image-20.png)

---

### 📌 Diagramas de Actividades (por Casos de Uso)

- **CU01 - Subir archivo de código**  
  ![CU01 - Actividad](./imgdiagrama/image-6.png)

- **CU02 - Generar diagramas UML**  
  ![CU02 - Actividad](./imgdiagrama/image-7.png)

- **CU03 - Visualizar resultados**  
  ![CU03 - Actividad](./imgdiagrama/image-8.png)

- **CU04 - Evaluar calidad del código**  
  ![CU04 - Actividad](./imgdiagrama/image-9.png)

- **CU05 - Detectar código duplicado**  
  ![CU05 - Actividad](./imgdiagrama/image-10.png)

- **CU06 - Ver historial de análisis**  
  ![CU06 - Actividad](./imgdiagrama/image-11.png)

- **CU07 - Autenticarse con Google**  
  ![CU07 - Actividad](./imgdiagrama/image-12.png)

---

### 📌 Diagramas de Secuencia

- **CU01 - Subir archivo de código**  
  ![CU01 - Secuencia](./imgdiagrama/image-13.png)

- **CU02 - Generar diagramas UML**  
  ![CU02 - Secuencia](./imgdiagrama/image-14.png)

- **CU03 - Visualizar resultados**  
  ![CU03 - Secuencia](./imgdiagrama/image-15.png)

- **CU04 - Evaluar calidad del código**  
  ![CU04 - Secuencia](./imgdiagrama/image-16.png)

- **CU05 - Detectar código duplicado**  
  ![CU05 - Secuencia](./imgdiagrama/image-17.png)

- **CU06 - Ver historial de análisis**  
  ![CU06 - Secuencia](./imgdiagrama/image-18.png)

- **CU07 - Autenticarse con Google**  
  ![CU07 - Secuencia](./imgdiagrama/image-19.png)

---

### 📌 Diagrama de Clases

![Diagrama de Clases](./imgdiagrama/image-30.png)

---

### 📌 Diagrama de Objetos

![Diagrama de Objetos](./imgdiagrama/image-29.png)

---

### 📌 Diagrama de Paquetes (Subsistemas)

![Diagrama de Paquetes](./imgdiagrama/image-21.png)

---

### 📌 Diagrama de Componentes (Arquitectura del Sistema)

![Diagrama de Componentes](./imgdiagrama/image-32.png)

---

### 📌 Diagrama de Base de Datos

![image](https://github.com/user-attachments/assets/75209419-4fc5-4616-bd5a-597cf9828e6e)

---

### 📌 Diagrama de Despliegue

![Diagrama de Despliegue](./imgdiagrama/image-34.png)

---"
UPT-FAING-EPIS/proyecto-si885-2025-i-u2-grupo_fv_fr_fm,proyecto,si885-2025-i-u2-grupo_fv_fr_fm,True,3503,False,4,True,False,False,"](https://classroom.github.com/a/Zu4fxsIs)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19684116)
# 📊 Dashboard de Análisis del Mercado Laboral Tecnológico 

## 👋 Introducción

Bienvenido a la **Plataforma de Análisis del Mercado Laboral Tecnológico**, una herramienta diseñada para proporcionar insights valiosos y actualizados sobre las oportunidades de empleo para profesionales y estudiantes de tecnologias de informacion.

En un mercado tecnológico en constante evolución, entender las tendencias de la demanda, las habilidades más solicitadas y las expectativas salariales es crucial para la toma de decisiones estratégicas. Esta plataforma busca empoderar a los individuos para orientar su carrera, planificar su formación continua, y ayudar a las instituciones educativas a adaptar sus currículas a las necesidades reales del dinámico sector TI.


## 🎯 Objetivos del Proyecto

El objetivo general de este proyecto es:

Desarrollar e implementar una dashboard interactivo y basado en datos que **monitoree, analice y presente de manera clara y accesible las tendencias, requisitos y oportunidades del mercado laboral para profesionales y estudiantes del amplio espectro de carreras tecnológicas en Perú**, con el fin de facilitar la toma de decisiones estratégicas para esta diversa audiencia, así como para instituciones educativas y empresas del sector.

Para lograr esto, el **dashboard de Power BI** se enfoca en los siguientes objetivos clave:

### Objetivo Principal del Dashboard:

1.  **Visualizar Oportunidades Laborales Detalladas:**
    *   Mostrar ofertas laborales actualizadas, permitiendo a los usuarios filtrar y explorar por criterios como departamento, mes, nivel de educacion, modalidad de trabajo, lenguajes de programación. El objetivo es que los usuarios de diversas carreras TI puedan identificar rápidamente las oportunidades que mejor se ajustan a su perfil y aspiraciones profesionales.

### Objetivos Secundarios del Dashboard:

2.  **Identificar Roles en tecnologia de la informacion Más Demandadas:**
    *   Permitir a los usuarios visualizar de forma clara cuáles son los roles (ej. Desarrollador Backend, Ingeniero de Datos, Especialista en Ciberseguridad, etc.) con mayor demanda en el mercado TI peruano.
    *   Analizar y destacar las habilidades y tecnologías (lenguajes, frameworks, bases de datos, metodologías) más requeridas por las empresas en las diferentes ofertas, ayudando a los profesionales y estudiantes a enfocar su aprendizaje y desarrollo.

3.  **Análisis Geográfico de la Oferta Laboral TI:**
    *   Facilitar la visualización de la distribución de las ofertas laborales del sector tecnológico a lo largo de las diferentes regiones del Perú. Esto ayudará a los usuarios a evaluar las oportunidades por ubicación, entender dónde se concentra la demanda para ciertos perfiles y tomar decisiones informadas sobre posibles reubicaciones o enfoque geográfico en su búsqueda de empleo.

4.  **Evaluar Tendencias Salariales por Especialización y Experiencia en TI:**
    *   Proveer gráficos y visualizaciones interactivas que muestren rangos y promedios salariales para diferentes especializaciones y roles dentro del campo tecnológico. Este análisis ayudará a los usuarios a comprender mejor las expectativas salariales en su área y región, y a negociar de manera más informada."
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-ticonamartinezperez,proyecto,si889-2025-i-u2-ticonamartinezperez,True,3088,True,15,False,True,False,"# Plataforma Avanzada para la Generación Automática de Diagramas UML

**Empresa:** Tech Solutions
**Curso:** Patrones de Software
**Docente:** Mag. Patrick Cuadros

## 📌 Integrantes:

* **Alexis Jeanpierre Martínez Vargas** (2019063638)
* **Juan José David Pérez Vizcarra** (2019063636)
* **Jhon Thomas Ticona Chambi** (2018062232)

---

## 📖 Descripción del Proyecto

La **Plataforma Avanzada para la Generación Automática de Diagramas UML** es una herramienta web creada para facilitar la creación y edición de diagramas UML mediante automatización, validación en tiempo real y colaboración multiusuario.

Permite generar diagramas UML (clases, casos de uso, secuencia, componentes) desde código fuente y modelos JSON/YAML, asegurando precisión y eficiencia en la documentación.

## 🎯 Objetivo

Ofrecer una solución eficiente para la generación y edición colaborativa de diagramas UML, reduciendo la carga manual y mejorando la coherencia de los modelos.

## 📌 Alcance del Proyecto

Sistema web construido con **FastAPI** (backend) y **React** (frontend), incluyendo:

* 🚀 **Generación automática de diagramas UML** desde código fuente y modelos JSON/YAML.
* ✅ **Validación en tiempo real** de la consistencia de los diagramas.
* 🎨 **Edición manual asistida** con herramientas visuales.
* 🔄 **Colaboración multiusuario en tiempo real.**

## 🛠️ Tecnologías Utilizadas

* **FastAPI** (Backend)
* **React** (Frontend)

## 🚀 Instalación y Configuración

### 🔹 Requisitos Previos

* Python 3.9+
* Node.js 16+

### 🔹 Instalación del Backend (FastAPI)

```bash
# Clonar el repositorio
git clone https://github.com/usuario/repositorio.git
cd repositorio/Backend

# Crear entorno virtual e instalar dependencias
python -m venv venv
source venv/bin/activate  # En Windows: venv\Scripts\activate
pip install -r requirements.txt

# Ejecutar servidor de desarrollo
uvicorn app.main:app --reload
```

### 🔹 Instalación del Frontend (React)

```bash
cd ../Frontend
npm install
npm start
```

## 👥 Estructura del Proyecto

```
C:.
├───Backend
│   └───app
│       ├───api
│       ├───core
│       ├───db
│       ├───models
│       ├───schemas
│       ├───services
│       └───utils
└───Frontend
    └───src
        ├───components
        │   ├───Auth
        │   ├───Dashboard
        │   ├───Layout
        │   └───ui
        ├───context
        └───views
```

## 📈 Resultados de Pruebas de Seguridad y Calidad

### ✅ SonarQube

* Análisis estático completo sobre el backend con reporte de vulnerabilidades y code smells.
* 0 errores críticos detectados.

### 🚀 Snyk

* Evaluación de dependencias en tiempo real para detectar paquetes vulnerables.
* Todas las dependencias del backend y frontend sin vulnerabilidades conocidas.

### 📄 Semgrep

* Reglas aplicadas para identificar patrones de código inseguros.
* Se corrigieron issues menores en servicios del backend.

## 👤 Contribución

Para contribuir:

1. Haz un fork del repositorio.
2. Crea una rama: `git checkout -b feature-nueva`.
3. Sube tus cambios: `git commit -m 'Agregado X'` y `git push origin feature-nueva`.
4. Abre un **pull request**."
UPT-FAING-EPIS/proyecto-si885-2025-i-u2-chambi_floresqf_leyva,proyecto,si885-2025-i-u2-chambi_floresqf_leyva,True,7263,True,11,True,True,True,"# 🎓 Universidad Privada de Tacna
# CURSO: INTELIGENCIA DE NEGOCIOS
## 👨‍🎓 Alumnos
- **Jerson Roni Chambi Cori**
- **Jaime Elias Flores Quispe**
- **Elvis Ronald Leyva Sardon**

# Dashboard de Monitoreo de Repositorios Académicos en GitHub

Sistema para la **evaluación automática y monitoreo** de repositorios académicos de estudiantes de la Facultad de Ingeniería de Sistemas, Universidad Privada de Tacna. Facilita el análisis de métricas de contribución, calidad del código, uso de buenas prácticas y tecnologías empleadas, además de proveer dashboards y reportes para docentes y estudiantes.

---

## Descripción General

Esta herramienta automatiza la revisión de repositorios GitHub usados en cursos académicos, permitiendo:

- **Reducción del tiempo de evaluación docente**.
- **Estandarización de buenas prácticas** en el desarrollo.
- **Reportes analíticos** y métricas objetivas de desempeño.
- **Transparencia y retroalimentación** inmediata para estudiantes.

---

## Objetivos

- **Automatizar** la evaluación de repositorios, reduciendo el tiempo de revisión manual.
- **Estandarizar** criterios de calidad y buenas prácticas en el desarrollo de software.
- **Generar reportes** e identificar tendencias tecnológicas en los proyectos estudiantiles.
- **Mejorar la transparencia** y objetividad en la calificación.

---

## Funcionalidades Principales

- Autenticación con GitHub (OAuth2).
- Extracción y análisis de commits, ramas, issues, pull requests.
- Cálculo automático de métricas de actividad y tecnologías usadas.
- Dashboards interactivos y reportes exportables (PDF/CSV).
- Integración con Power BI.
- Verificación automática de documentación (README.md, informes técnicos).

---

## Requerimientos Funcionales

| ID     | Requerimiento                               | Descripción                                                                 | Prioridad |
|--------|---------------------------------------------|-----------------------------------------------------------------------------|-----------|
| RF-01  | Analizar actividad en repositorios          | Extraer y presentar datos sobre commits, ramas, issues y pull requests.     | Alta      |
| RF-02  | Generar métricas de actividad               | Calcular estadísticas sobre frecuencia de contribución y actividad.         | Alta      |
| RF-03  | Identificar tecnologías utilizadas          | Detectar lenguajes de programación y frameworks en los repositorios.        | Alta      |
| RF-04  | Visualizar reportes interactivos de actividad| Mostrar gráficos y tendencias de desarrollo.                                | Media     |

---

## Diagramas en Mermaid

### Diagrama de Arquitectura

```mermaid
flowchart TD
    github[GitHub]:::github
    actions[GitHub Actions]:::actions
    etl[Script Python ETL]:::etl
    storage[Azure Storage Account]:::storage
    sql[Azure SQL Database]:::sql
    powerbi[Power BI]:::powerbi
    user[Usuario Final]:::user

    github -->|Trigger| actions
    actions -->|Ejecuta script| etl
    etl -->|Escribe CSV/SCRIPT| storage
    etl -->|Carga datos| sql
    storage -->|Importación opcional| sql
    sql -->|Provee datos| powerbi
    powerbi -->|Dashboards,\nReportes| user

    classDef github fill:#f0f8ff,stroke:#000,stroke-width:1px,color:#222;
    classDef actions fill:#ffffe0,stroke:#000,stroke-width:1px,color:#222;
    classDef etl fill:#90ee90,stroke:#000,stroke-width:1px,color:#222;
    classDef storage fill:#87ceeb,stroke:#000,stroke-width:1px,color:#222;
    classDef sql fill:#add8e6,stroke:#000,stroke-width:1px,color:#222;
    classDef powerbi fill:#f5deb3,stroke:#000,stroke-width:1px,color:#222;
    classDef user fill:#ffc0cb,stroke:#000,stroke-width:1px,color:#222;
```

---

### Diagrama de Casos de Uso

```mermaid
flowchart LR
    Scheduler[""Scheduler (Crontab)""]
    User[""Usuario""]

    subgraph ""Sistema ETL / Dashboard Power BI""
      UC1[""Actualizar datos periódicamente automáticamente""]
      UC2[""Visualizar dashboard en Power BI""]
      UC3[""Ejecutar filtros en dashboard""]
    end

    Scheduler --> UC1
    User --> UC2
    User --> UC3
```

---

### Diagrama de Secuencia

```mermaid
%% Diagrama 1: Proceso automático ETL
sequenceDiagram
    participant Scheduler
    participant ETL as ""Sistema ETL""
    participant DataSource as ""Fuente de datos""
    participant Database as ""Base de datos""
    participant Artifacts as ""Artefactos de visualización""

    Scheduler->>ETL: Dispara proceso según intervalo
    ETL->>DataSource: Extraer datos
    alt Datos extraídos correctamente
        ETL->>ETL: Transformar y limpiar datos
        ETL->>Database: Cargar datos limpios
        alt Carga correcta
            ETL->>Artifacts: Actualizar artefactos para visualización
        else Error al cargar datos
            ETL-->>Scheduler: Notificar fallo en carga
        end
    else Error en extracción
        ETL-->>Scheduler: Notificar fallo en conexión o script ETL
    end
```

```mermaid
%% Diagrama 2: Visualizar dashboard en Power BI
sequenceDiagram
    participant Usuario
    participant Dashboard as ""Dashboard Power BI""
    participant Database as ""Base de datos""

    Usuario->>Dashboard: Abre sitio web del dashboard
    Dashboard->>Database: Solicita datos actualizados
    alt Datos disponibles
        Database-->>Dashboard: Envía datos
        Dashboard-->>Usuario: Muestra datos y visualizaciones
    else Problemas de acceso o datos
        Dashboard-->>Usuario: Muestra error o datos desactualizados
    end
    Usuario->>Dashboard: Navega entre vistas y gráficos
```

```mermaid
%% Diagrama 3: Ejecutar filtros en dashboard
sequenceDiagram
    participant Usuario
    participant Dashboard as ""Dashboard Power BI""
    participant Database as ""Base de datos""

    Usuario->>Dashboard: Selecciona filtros
    Dashboard->>Database: Solicita datos filtrados
    alt Datos filtrados disponibles
        Database-->>Dashboard: Envía datos filtrados
        Dashboard-->>Usuario: Actualiza visualizaciones
    else Filtros sin resultados o error
        Dashboard-->>Usuario: Muestra mensaje de error o sin resultados
    end
```

---

## Reglas de Negocio

- Solo se analizan repositorios públicos de la organizacion con permisos autorizados.
- El usuario puede seleccionar un filtro de año y mes para el análisis.
- Para ser considerado válido, un repositorio debe tener al menos un commit y archivos fuente/documentación.
- Debe existir un archivo `README.md` y al menos un informe técnico (.docx o .md).
- La detección de tecnologías se realiza automáticamente.

---

## Recomendaciones

- Mantener el `README.md` actualizado y con enlaces a los diagramas Mermaid.
- Garantizar la existencia de documentación técnica y archivos requeridos en cada repositorio monitoreado.
- Incentivar el uso de issues y pull requests para mejorar la colaboración y trazabilidad.
- Implementar talleres periódicos sobre buenas prácticas en GitHub para estudiantes y docentes.
- Considerar la integración futura con LMS como Moodle para centralizar la información académica.

---

# ENLACE DE DASHBOARD

https://app.powerbi.com/links/VtN9HA7oPn?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare

![image](https://github.com/user-attachments/assets/cabfa55f-012d-4b83-bd14-5ef95a8221b9)"
UPT-FAING-EPIS/proyecto-si885-2025-i-u2-grupo_bc_ch_rv,proyecto,si885-2025-i-u2-grupo_bc_ch_rv,True,2150,False,9,True,False,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703117)

<center>
           
[comment]: <img src=""./media/media/image1.png"" style=""width:1.088in;height:1.46256in"" alt=""escudo.png"" />

![./media/media/image1.png](./media/logo-upt.png)

# **UNIVERSIDAD PRIVADA DE TACNA**  
## **FACULTAD DE INGENIERÍA**  
### **ESCUELA PROFESIONAL DE INGENIERÍA DE SISTEMAS**  

---

# **ANÁLISIS DEL PERFIL PROFESIONAL DE LOS EGRESADOS DE LA EPIS DE LA UPT EN LINKEDIN**

## **Curso:** Inteligencia de Negocios  
## **Docente:** Mag. Patrick Cuadros Quiroga  

---
                        
### **Integrantes:**  
- **Villanueva Mamani, Royser Alonsso**  
- **Hinojosa Mucho, Christian Dennis**  
- **Chite Quispe, Brian Danilo** 
 
                        
## Objetivo Principal:
Evaluar el perfil profesional de los egresados de la EPIS de la UPT en LinkedIn para identificar sus habilidades, competencias, sectores laborales y trayectorias profesionales, y proponer estrategias para mejorar su posicionamiento en el mercado laboral.
         
## Objetivos Secundarios:
✅ Identificar las especializaciones profesionales más comunes entre los egresados registrados en LinkedIn, determinando los sectores o roles en los que predominan.

✅ Analizar las habilidades y competencias técnicas más utilizadas por los egresados según los perfiles registrados en LinkedIn

✅ Determinar la distribución geográfica de los egresados, clasificándola en local, nacional e internacional, para comprender mejor su presencia y alcance laboral.  

## Costos Terraform:

| Concepto                 | Costo Mensual (PEN) |
|-------------------------|---------------------|
| Trabajo con Terraform    | S/ 95               |
| Terraform Cloud (servicio) | S/ 76               |
| **Total**               | **S/ 171**          |

Nota: Solo si se sobrepasa el limite gratuito, de acuerdo a los recursos que se utilziarán.

![Roadmap](media/bd.png)
![Roadmap](media/despliegue.png)
## RoadMap:

![Roadmap](./descarga.png)"
UPT-FAING-EPIS/proyecto-si885-2025-i-u2-grupo_ac_pm_tv,proyecto,si885-2025-i-u2-grupo_ac_pm_tv,True,1862,True,7,False,False,True,"# 🎓 Título del Proyecto

**Análisis de Datos de Tesis Universitarias para Guiar a Estudiantes en la Elección de Temas y Tecnologías**

---

## ❗ Problemática

Muchos estudiantes universitarios enfrentan dificultades al momento de elegir un tema de tesis y las tecnologías adecuadas para su desarrollo. Esta situación se debe a la falta de acceso a información organizada y visual sobre los trabajos realizados en años anteriores.

### 📌 Consecuencias

- Dificultad para elegir un tema de tesis alineado con las tendencias tecnológicas.
- Incertidumbre sobre qué tecnologías son más utilizadas en el entorno académico.
- Falta de referentes claros sobre cómo se aplican ciertas herramientas en proyectos reales.

---

## 🎯 Objetivo Principal

-Permitir la visualización clara de la cantidad de tesis por categoría, titulos de tesis filtrados y las tecnologías utilizadas en cada una.


---

## ✅ Objetivos Secundarios

- Analizar la evolución temporal del uso de tecnologías en las tesis para identificar tendencias y cambios significativos a lo largo del tiempo.
- Identificar las universidades que destacan en cantidad de tesis por la categoria de tesis de interes.


---

## 👥 Integrantes

| Nombre                              | Código      |
| ------------------------------------ | ----------- |
| Erick Yoel Ayma Choque               | 2021072616  |
| Fabiola Estefani Poma Machicado      | 2021070030  |
| Dylan Yariet Tapia Vargas            | 2021072630  |

---

## 📋 Control de Versiones

| Versión | Hecha por | Revisada por | Aprobada por | Fecha      | Motivo                      |
| ------- | --------- | ------------ | ------------ | ---------- | --------------------------- |
| 1.0     | EYA       | FPM          | DTV          | 10/06/2025 | Versión Inicial del Proyecto |

---

## 🛠️ Tecnologías Utilizadas

- Microsoft Power BI 📊
- SQL Server"
UPT-FAING-EPIS/proyecto-si885-2025-i-u2-grupo_hc_pc,proyecto,si885-2025-i-u2-grupo_hc_pc,True,6492,False,16,True,True,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703737)
# Proyecto: Análisis del Uso de Herramientas Tecnológicas en los Proyectos de Estudiantes de Sistemas UPT

## Universidad Privada de Tacna
**Facultad de Ingeniería**  
**Escuela Profesional de Ingeniería de Sistemas**  

### Curso: Inteligencia de Negocios

**Docente:** Mag. Patrick Cuadros Quiroga

### Integrantes:
- **Hernandez Cruz, Angel Gadiel** (2021070017)  
- **Paja de la Cruz, Piero Alexander** (2020067576)  
### RoadMap:
![./media/media/Roadmap.png](./media/Roadmap.png)


## Funcionalidades Principales

-   **Automatización Completa del Proceso ETL**: El pipeline se ejecuta de forma automática, sin intervención manual, en cada cambio del código o de forma programada.
-   **Aprovisionamiento Dinámico de Infraestructura**: Utiliza Terraform para crear y configurar todos los recursos necesarios en Azure desde cero en cada ejecución, garantizando un entorno limpio y reproducible.
-   **Extracción de Datos de GitHub**: Se conecta a la API de GitHub para recopilar una amplia gama de datos: metadatos del repositorio, commits, issues, colaboradores y lenguajes de programación.
-   **Análisis de Tecnologías**: Analiza el contenido de los archivos `README.md` para detectar el uso de frameworks, librerías, bases de datos y herramientas de CI/CD.
-   **Almacenamiento Estructurado**: Carga los datos procesados en una base de datos relacional en Azure SQL, listos para ser consumidos por herramientas de BI.

## Requerimientos Funcionales

| ID | Descripción | Prioridad |
|----|-------------|-----------|
| RF01 | Extraer metadatos de repositorios Git | Crítica |
| RF02 | Clasificar lenguajes por proyecto | Alta |
| RF03 | Generar reportes de frecuencia de tecnologías | Media |

## Diagramas en Mermaid

### Diagrama de Arquitectura

```mermaid
graph TD
    A[Usuario/Desarrollador] -- Push a 'main' --> B{GitHub};
    C[Scheduler] -- Lunes 3 AM UTC --> B;
    B -- Activa --> D[Pipeline en GitHub Actions];
    D -- 1. Job: terraform-deploy --> E{Terraform};
    E -- Aprovisiona --> F[Azure Resource Group];
    F --> G[Azure SQL Server];
    G --> H[Azure SQL Database];
    H -- Credenciales --> D;
    D -- 2. Job: run-etl --> I[Script Python];
    I -- Lee schema.sql --> H;
    I -- Llama a --> J[GitHub API];
    J -- Devuelve datos --> I;
    I -- Procesa con Pandas --> I;
    I -- Carga datos --> H;
    K[Analista de BI] -- Consume datos --> L[Power BI];
    H -- Provee datos --> L;
```

### Diagrama de Casos de Uso

```mermaid
flowchart TD
    subgraph Sistema
        UC1[Consultar estadísticas]
        UC2[Exportar reportes]
        UC3[Configurar sistema]
        UC4[Autenticarse]
    end

    Estudiante --> UC1
    Administrador --> UC2
    Administrador --> UC3
    UC1 -.-> UC4
    UC2 -.-> UC4
    UC3 -.-> UC4

    style Sistema fill:#f9f9f9,stroke:#333
    linkStyle 0,1,2 stroke:#0074D9,stroke-width:2px
    linkStyle 3,4,5 stroke:#FF851B,stroke-width:2px
```

### Diagrama de Secuencia

#### RF01 - Extracción de metadatos
```mermaid
sequenceDiagram
    participant Sistema
    participant GitHubAPI
    participant BD
    
    Sistema->>GitHubAPI: GET /repos (con token)
    GitHubAPI-->>Sistema: JSON con metadatos
    Sistema->>BD: INSERT metadatos_proyecto
    BD-->>Sistema: Confirmación
    Sistema->>Sistema: Log de auditoría
```
#### RF02 - Clasificación de lenguajes 
```mermaid
sequenceDiagram
    participant Sistema
    participant Repositorio
    participant Clasificador
    
    Sistema->>Repositorio: Obtener archivos clave
    Repositorio-->>Sistema: Archivos .gitignore, manifestos
    Sistema->>Clasificador: Analizar contenido
    Clasificador-->>Sistema: Lenguaje principal + tecnologías
    Sistema->>BD: UPDATE proyecto SET tecnologías
```
#### RF03 - Generación de reportes
```mermaid
sequenceDiagram
    actor Usuario
    participant Frontend
    participant Backend
    participant BD
    
    Usuario->>Frontend: Solicitar reporte (rango fechas)
    Frontend->>Backend: GET /reportes?fechaInicio=X&fechaFin=Y
    Backend->>BD: Query agregada tecnologías
    BD-->>Backend: Dataset estadístico
    Backend->>Backend: Generar visualizaciones
    Backend-->>Frontend: JSON con datos + gráficos
    Frontend->>Usuario: Mostrar dashboard interactivo
```

## Reglas de Negocio

-   **Activación del Pipeline**: El pipeline se ejecuta con cada `push` a la rama `main` y de forma programada todos los lunes a las 3:00 AM UTC.
-   **Infraestructura Efímera**: La infraestructura en Azure (servidor y base de datos) se crea desde cero en cada ejecución del pipeline y no se destruye automáticamente. Esto garantiza un entorno limpio para cada carga, pero requiere una limpieza manual posterior si se desea controlar costos.
-   **Alcance del Análisis**: El script está configurado para analizar los primeros 50 repositorios (`scrap_pequeno.py`).
-   **Identificación de Cursos**: La asignación de un proyecto a un curso se basa en la detección de patrones como `si...` y `u...` en el nombre del repositorio. Si no se encuentra el patrón, el curso no se asigna.
-   **Detección de Tecnologías**: La identificación de frameworks, librerías, bases de datos y herramientas de CI/CD depende exclusivamente de su mención explícita en el archivo `README.md` del repositorio.

## Recomendaciones

-   **Estandarizar Nomenclatura**: Fomentar el uso de una convención de nombres estandarizada para los repositorios para mejorar la precisión en la identificación de cursos y unidades.
-   **Documentación en READMEs**: Incentivar a los estudiantes a documentar las tecnologías utilizadas en el `README.md` de sus proyectos para enriquecer los datos recopilados.
-   **Optimización de Costos**: Considerar añadir un paso de `terraform destroy` al final del pipeline o un pipeline separado para la limpieza de recursos en Azure y así evitar costos inesperados.
-   **Seguridad de Credenciales**: Las credenciales `AZURE_CREDENTIALS` y `GITHUB_TOKEN` deben ser gestionadas como secretos en GitHub y tener los permisos mínimos necesarios para operar.

## Enlace de Dashboard

*Aquí se puede colocar el enlace público al dashboard de Power BI una vez que esté disponible.*

[\[Enlace al Dashboard de Power BI\]](https://app.powerbi.com/links/eSOGnu0Qt-?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-floresr_floresm_fernandezv,proyecto,si889-2025-i-u2-floresr_floresm_fernandezv,True,3693,True,18,False,True,True,"# 📑 Aplicación para la Generación Automatizada de un Diccionario de Datos 


## **Docente:** Mag. Patrick Cuadros Quiroga  

---

### **Integrantes:**  
- **Flores Melendez Andree Sebastian**  
- **Flores Ramos Mario Anthonio**  
- **Fernandez Villanueva Daleska Fernandez**  

---

## 🚨 Problemática 
En la actualidad, la documentación de bases de datos sigue siendo una tarea mayormente manual, lo que genera demoras y potenciales errores. Las herramientas existentes para la documentación de bases de datos son costosas o no ofrecen la flexibilidad necesaria para adaptarse a las necesidades de los estudiantes o desarrolladores que requieren una solución práctica y económica. Este proyecto surge para llenar esa brecha, ofreciendo una plataforma accesible que automatice la creación de diccionarios de datos a partir de bases de datos relacionales y no relacionales.

---

## 🎯 Objetivo General 

Desarrollar una aplicación que permita la generación automatizada de diccionarios de datos, facilitando la gestión continua de la información en sistemas de bases de datos.

---

## 💡 Objetivos Específicos 

- **Automatizar** la extracción de metadatos de bases de datos.
- **Generar** un diccionario de datos estructurado en un formato accesible.
- **Implementar** una interfaz de usuario amigable para gestionar los diccionarios de datos.
- **Facilitar** la integración de la aplicación con sistemas de gestión de bases de datos.

---

## 📝 Justificación 

El proyecto busca abordar la necesidad de automatización en la documentación de bases de datos, reduciendo los errores humanos y mejorando la eficiencia del proceso. La automatización no solo ahorrará tiempo, sino que también proporcionará una documentación precisa, actualizada y fácilmente accesible para todos los usuarios, desde estudiantes hasta profesionales.

**Beneficios clave**:

- **Automatización**: Reduce el tiempo y esfuerzo necesario para la creación de diccionarios de datos.
- **Accesibilidad**: Permite a cualquier usuario generar contenido visual sin experiencia en documentación técnica.
- **Eficiencia**: Uso de tecnologías como C# y React JS para garantizar una rápida generación y exportación.


---

# 📑 DataDictGen - Generador de Diccionarios de Datos

Aplicación web para generar diccionarios de datos automáticamente desde bases de datos relacionales y NoSQL.

## 🎯 Características

- Extracción automática de metadatos
- Documentación con IA (OpenAI)
- Exportación a PDF
- Soporte para múltiples BD
- Interfaz web moderna


## 📋 Requisitos

- .NET 8.0 SDK
- Node.js 18+
- Cuenta AWS
- OpenAI API Key



### GitHub Secrets (para deploy)
```
AWS_ACCESS_KEY_ID=xxx
AWS_SECRET_ACCESS_KEY=xxx

```

## ☁️ Despliegue AWS

### 1. Infraestructura con Terraform
```bash
cd terraform
terraform init
terraform plan
terraform apply
```

### 2. Deploy con GitHub Actions
- Configurar secrets en GitHub
- Push tag: `git tag v1.0.0 && git push origin v1.0.0`
- O ejecutar workflow manualmente

## �️ Bases de Datos Soportadas

| Base de Datos | Puerto | Estado |
|---------------|--------|--------|
| SQL Server    | 1433   | ✅ |
| MySQL         | 3306   | ✅ |
| PostgreSQL    | 5432   | ✅ |
| MongoDB       | 27017  | ✅ |
| Redis         | 6379   | ✅ |
| Cassandra     | 9042   | ✅ |

## 🔌 API Endpoints

### Autenticación
```bash
POST /api/auth/login
POST /api/auth/register
```

### Metadatos
```bash
POST /api/metadata/test-connection
POST /api/metadata/database-preview
POST /api/metadata/table-schema
```

### Documentos
```bash
POST /api/word/generate-word
POST /api/word/generate-pdf
```

## � Equipo

- **Flores Melendez Andree Sebastian** 
- **Flores Ramos Mario Anthonio**
- **Fernandez Villanueva Daleska**"
UPT-FAING-EPIS/proyecto-si784-2025-i-u2-deadline-collision-predictor,proyecto,si784-2025-i-u2-deadline-collision-predictor,True,6655,False,18,True,True,False,"](https://classroom.github.com/a/c_xOAv9g)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19770719)
# proyecto-formatos-01


# Deadline Collision Predictor

Aplicación web para que estudiantes de ingeniería gestionen sus tareas y eviten colisiones de deadlines. Utiliza IA heurística para distribuir tareas y agendar automáticamente. **¡Ahora con integración completa con Moodle!**

## Descripción del Proyecto

Deadline Collision Predictor es una plataforma que ayuda a los estudiantes a organizar sus actividades académicas, evitando la superposición de fechas límite (deadlines) y mejorando la gestión del tiempo.  
La aplicación permite:

- Registrar y autenticar usuarios.
- Crear, editar y eliminar eventos/tareas académicas.
- Visualizar los eventos en un calendario interactivo.
- Detectar y notificar colisiones de fechas entre tareas.
- Sugerir la mejor distribución de actividades usando IA heurística.
- **🆕 Integración completa con Moodle** para sincronizar cursos, tareas y calendario.
- Realizar pruebas automatizadas de calidad (unitarias, integración, interfaz y mutación).
- Automatizar la infraestructura de despliegue con Terraform y GitHub Actions.

## Objetivos

- Facilitar la gestión de tareas y eventos académicos para estudiantes.
- Prevenir colisiones de fechas límite mediante notificaciones automáticas.
- Optimizar la distribución de actividades usando inteligencia artificial heurística.
- **🆕 Sincronizar automáticamente con plataformas LMS como Moodle**.
- Garantizar la calidad del software mediante pruebas automatizadas y buenas prácticas de desarrollo.
- Automatizar el despliegue y la infraestructura del proyecto utilizando Terraform y GitHub Actions.

## Características principales

- **Registro e inicio de sesión de usuarios** con autenticación segura.
- **Gestión de eventos/tareas**: creación, edición, eliminación y visualización en calendario.
- **Detección de colisiones** entre deadlines y notificaciones al usuario.
- **Asistente inteligente** para sugerir la mejor distribución de tareas.
- **Panel de control (dashboard)** para visualizar el progreso y próximos eventos.
- **🆕 Integración con Moodle**:
  - Sincronización automática de cursos
  - Importación de tareas y asignaciones
  - Integración del calendario de Moodle
  - Detección de colisiones entre tareas de Moodle y eventos locales
- **Pruebas automatizadas**: unitarias, integración, interfaz y mutación.
- **Automatización de infraestructura**: despliegue en Azure App Service y gestión con Terraform.

## Arquitectura general

- **Frontend:** HTML, CSS, JavaScript, FullCalendar.js, Bootstrap.
- **Backend:** Node.js, Express.js.
- **Base de datos:** MySQL (en servidor propio).
- **🆕 Integración:** API REST de Moodle para sincronización de datos.
- **Infraestructura:** Azure App Service (automatizada con Terraform).
- **Automatización y CI/CD:** GitHub Actions.
- **Pruebas:** Jest (unitarias e integración), Playwright/Selenium (interfaz), Stryker (mutación).

## Instalación y Uso

### Requisitos previos

- Node.js (v18 o superior)
- MySQL
- Cuenta en Azure (para despliegue)
- Terraform (opcional, para infraestructura como código)
- **🆕 Acceso a plataforma Moodle** (para integración)

### Instalación local

1. Clona el repositorio:
   ```bash
   git clone https://github.com/tu-usuario/proyecto-si784-2025-i-u2-deadline-collision-predictor.git
   cd proyecto-si784-2025-i-u2-deadline-collision-predictor
   ```

2. Instala las dependencias:
   ```bash
   npm install
   ```

3. Configura las variables de entorno:
   ```bash
   cp .env.example .env
   # Edita el archivo .env con tus configuraciones
   ```

4. Ejecuta las migraciones de la base de datos:
   ```bash
   mysql -u tu_usuario -p tu_base_de_datos < db/init.sql
   mysql -u tu_usuario -p tu_base_de_datos < db/migrations/add_moodle_tables.sql
   ```

5. Inicia la aplicación:
   ```bash
   npm start
   ```

6. Accede a la aplicación en [http://localhost:3000](http://localhost:3000)

### 🆕 Configuración de Integración con Moodle

1. **Obtén tu token de Moodle**:
   - Inicia sesión en tu plataforma Moodle
   - Ve a tu perfil → Preferencias → Servicios web
   - Genera un token de acceso

2. **Configura la integración**:
   - Accede a la página ""Moodle"" en la aplicación
   - Ingresa la URL de tu Moodle, token y ID de usuario
   - Guarda la configuración

3. **Sincroniza tus datos**:
   - Haz clic en ""Sincronizar Cursos""
   - Luego ""Sincronizar Tareas""
   - Finalmente ""Sincronizar Calendario""

Para más detalles, consulta la [documentación completa de integración con Moodle](MOODLE_INTEGRATION.md).

---

## Pruebas y Automatización

El proyecto cuenta con pruebas automatizadas de calidad:

- **Pruebas unitarias y de integración:** ejecutadas con Jest y Supertest.
- **Pruebas de interfaz de usuario:** automatizadas con Playwright y/o Selenium.
- **Pruebas de mutación:** realizadas con Stryker.
- **Automatización de infraestructura:** mediante Terraform y GitHub Actions.

### Ejecución de pruebas

```bash
npm test
```

### Generar reporte de cobertura

```bash
npm test -- --coverage
```

### Automatización CI/CD

El repositorio incluye workflows de GitHub Actions para:

- Ejecutar pruebas y generar reportes de cobertura.
- Realizar pruebas de mutación.
- Ejecutar pruebas de interfaz de usuario.
- Automatizar el despliegue y la infraestructura con Terraform.

---

## 🆕 Nuevas Funcionalidades

### Integración con Moodle
- **Sincronización automática** de cursos y tareas
- **Importación de calendario** de Moodle
- **Detección de colisiones** entre eventos de Moodle y locales
- **Interfaz unificada** para gestionar todo desde un solo lugar

### Mejoras en la IA
- **Procesamiento mejorado** de fechas en español
- **Detección inteligente** de tipos de tareas
- **Sugerencias automáticas** para evitar colisiones

### Interfaz de Usuario
- **Diseño responsivo** mejorado
- **Navegación intuitiva** entre módulos
- **Indicadores visuales** para estados de tareas

---

## Contribución

Para contribuir al proyecto:

1. Fork el repositorio
2. Crea una rama para tu feature (`git checkout -b feature/nueva-funcionalidad`)
3. Commit tus cambios (`git commit -am 'Agrega nueva funcionalidad'`)
4. Push a la rama (`git push origin feature/nueva-funcionalidad`)
5. Crea un Pull Request

---

## Licencia

Este proyecto está bajo la licencia ISC.

---

**¡Organiza tus tareas académicas de manera inteligente y evita colisiones de deadlines con la integración completa de Moodle!** 🎓✨"
UPT-FAING-EPIS/proyecto-si889-2025-i-u2-scannerweb_ccalli_jarro,proyecto,si889-2025-i-u2-scannerweb_ccalli_jarro,True,4758,False,10,True,True,True,"](https://classroom.github.com/a/ZtQ31pSG)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19828959)
# 🔐 PWASP SCANNER – Sistema de Detección de Vulnerabilidades Web

**Ubicación:** Tacna, Perú  
**Año:** 2025  
**Autor:** Joel Robert Ccalli Chata

---

## 📌 Descripción General del Proyecto

El **PWASP SCANNER** es un sistema web diseñado para detectar **vulnerabilidades en aplicaciones web** basándose en los estándares del **OWASP Top 10**, facilitando el análisis de seguridad en sitios de pequeñas y medianas empresas. El sistema permite escanear sitios ingresando una URL, autenticarse si es necesario, identificar vulnerabilidades como XSS, SQLi, CSRF, etc., y generar reportes técnicos detallados en múltiples formatos.

> Este proyecto nace de la necesidad creciente de automatizar procesos de evaluación de seguridad, sin depender de costosas auditorías manuales o herramientas complejas.

---

## 🧱 Estructura del Proyecto

El sistema se desarrolló bajo una metodología ágil (SCRUM) y se documentó en seis entregables clave:

---

## 📄 Documentación Técnica

| Documento | Descripción | Enlace |
|----------|-------------|--------|
| **FD01 - Ficha del Proyecto** | Contiene los datos generales del proyecto: nombre, responsable, ubicación, objetivos generales, tiempo estimado, etc. | [Ver FD01](#) |
| **FD02 - Documento de Visión** | Presenta una descripción extensa del sistema, su valor para los usuarios, actores involucrados, contexto de uso, y funcionalidades clave esperadas. | [Ver FD02](#) |
| **FD03 - Especificación de Requisitos de Software (SRS)** | Documento detallado de requisitos funcionales y no funcionales, casos de uso (con PlantUML), y diagramas de secuencia (Mermaid). | [Ver FD03](#) |
| **FD04 - Diseño de Arquitectura del Software (SAD)** | Contiene el diagrama de arquitectura general, tecnologías empleadas, capas del sistema, módulos internos y su interacción. | [Ver FD04](#) |
| **FD05 - Informe Final del Proyecto** | Informe técnico con justificación, desarrollo, evidencias, pruebas realizadas, resultados obtenidos, y conclusiones. | [Ver FD05](#) |
| **FD06 - Propuesta de Proyecto** | Propuesta detallada del sistema: introducción, objetivos, justificación, cronograma, presupuesto, metodología y referencias bibliográficas. | [Ver FD06](#) |

---

## 🔍 Tecnologías Utilizadas

- **Frontend:** HTML5, CSS3, JavaScript (Vanilla o React opcional)
- **Backend:** Python (Flask), con librerías para escaneo (requests, BeautifulSoup, OWASP ZAP API)
- **Base de datos:** SQLite / PostgreSQL (según necesidad)
- **Herramientas de Seguridad:** OWASP ZAP, Nmap, Sqlmap
- **Despliegue:** Hosting compartido o VPS (como Somee.com, Heroku, etc.)

---

## 🧠 Funcionalidades Principales

- ✅ Escaneo de sitios web por URL
- ✅ Detección de vulnerabilidades OWASP Top 10
- ✅ Panel de usuario para historial de escaneos
- ✅ Reportes exportables (PDF, CSV)
- ✅ Modo de escaneo autenticado (Login)
- ✅ Interfaz amigable y adaptable (responsive)

---

## 🖥️ Diagrama General del Sistema

![Diagrama Arquitectura General](./assets/diagrama-arquitectura-pwasp.png)

> *Incluye capas: presentación, lógica de negocio, motor de escaneo, base de datos y generación de reportes.*

---

## 📆 Cronograma de Desarrollo

| Fase | Actividades | Mes |
|------|-------------|-----|
| Análisis | Recolección de requerimientos, OWASP Top 10 | Julio |
| Diseño | Arquitectura, casos de uso, diagramas | Julio |
| Desarrollo | Backend, frontend, motor de escaneo | Agosto - Septiembre |
| Pruebas | Validación, reportes, pruebas automatizadas | Septiembre |
| Despliegue | Entrega final, documentación, evaluación | Octubre |

---

## 💼 Autor

- 👤 **Joel Robert Ccalli Chata**
- 📍 Tacna, Perú
- 📧 joelccalli@example.com

---

## 📚 Referencias Bibliográficas

1. OWASP Foundation. (2023). *OWASP Top 10: Web Application Security Risks*. https://owasp.org
2. Stallings, W. (2020). *Cryptography and Network Security*. Pearson.
3. Grimes, R. (2021). *Hacking the Hacker*. Wiley.
4. Kim & Solomon. (2020). *Fundamentals of Information Systems Security*. Jones & Bartlett.
5. Anderson, R. (2020). *Security Engineering*. Wiley.
6. Allen, J. (2022). *Software Security Engineering*. Addison-Wesley.
7. Bishop, M. (2018). *Computer Security: Art and Science*. Addison-Wesley.
8. Zetter, K. (2015). *Countdown to Zero Day*. Crown Publishing.
9. OWASP ZAP. (2023). *Zed Attack Proxy*. https://owasp.org/www-project-zap/
10. ISO/IEC 27001:2022. *Information Security Management Systems*. ISO.

---

## 📦 Estado del Proyecto

```bash
🚧 EN DESARROLLO – Fase de validación y pruebas finales"
UPT-FAING-EPIS/si889_2025-i-proyecto_si889_2025-i-u3-proyecto-formatos-01,si889_2025,i-proyecto_si889_2025-i-u3-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez,proyecto,si889-2025-i-u3-ticona-martinez-perez,True,8739,True,34,True,True,False,"# Plataforma Avanzada para la Generación Automática de Diagramas UML

**Empresa:** Tech Solutions
**Curso:** Patrones de Software
**Docente:** Mag. Patrick Cuadros

## 📌 Integrantes:

* **Alexis Jeanpierre Martínez Vargas** (2019063638)
* **Juan José David Pérez Vizcarra** (2019063636)
* **Jhon Thomas Ticona Chambi** (2018062232)

---

## 📖 Descripción del Proyecto

La **Plataforma Avanzada para la Generación Automática de Diagramas UML** es una herramienta web creada para facilitar la creación y edición de diagramas UML mediante automatización, validación en tiempo real y colaboración multiusuario.

Permite generar diagramas UML (clases, casos de uso, secuencia, componentes) desde código fuente y modelos JSON/YAML, asegurando precisión y eficiencia en la documentación.

### 🔹 Instalación del Backend (FastAPI)

```bash
# Clonar el repositorio
git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez.git

# Nos dirigimos a la carpeta backend
cd https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez.git/Proyecto/Backend

# Crear entorno virtual e instalar dependencias
python -m venv venv
source venv/bin/activate  # En Windows: venv\Scripts\activate
pip install -r requirements.txt

# Ejecutar servidor de desarrollo
uvicorn app.main:app --reload
```

### 🔹 Instalación del Frontend (React)

```bash
# Nos dirigimos a la carpeta frontend
cd ../https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez.git/Proyecto/Frontend
# Instalamos las dependencias
npm install
# Iniciamos el proyecto
npm start
```

## 👥 Estructura del Proyecto

```
C:.
├───Backend
│   └───app
│       ├───api
│       ├───core
│       ├───db
│       ├───models
│       ├───schemas
│       ├───services
│       └───utils
└───Frontend
    └───src
        ├───components
        │   ├───Auth
        │   ├───Dashboard
        │   ├───Layout
        │   └───ui
        ├───context
        └───views
```


## 🗂️ INFORMES

### 📝 FD01 - Análisis Económico con Terraform
* [📄 FD01.pdf](./Documentos/FD01_DocumentoFactibilidad/FD01_DocumentoFactibilidad.pdf) - *Realizado*
* [📝 FD01.md](./Documentos/FD01_DocumentoFactibilidad/FD01_DocumentoFactibilidad.md) - *Realizado*
* ✅ **Incluye análisis económico** del despliegue usando **Terraform**
* 📂 Resultado Terraform: [`infra/terraform`](./terraform_analisis/analisis_economico.txt) - *Realizado*



### 📝 FD02 - Wiki + Roadmap
* [📄 FD02.pdf](./Documentos/FD02_DocumentoVision/FD02_DocumentoVision.pdf) - *Realizado*
* [📝 FD02.md](./Documentos/FD02_DocumentoVision/FD02_DocumentoVision.md) - *Realizado*
* 📌 Wiki: [Características del producto](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/wiki) - *Realizado*
* 🚀 Roadmap: [Versión 1.0 - Características y fechas](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/wiki/Roadmap) - *Realizado*



### 📝 FD03 - Issues, Criterios Gherkin, Diagramas de Secuencia
* [📄 FD03.pdf](./Documentos/FD03_DocumentoSRS/FD03_DocumentoSRS.pdf) - *Realizado*
* [📝 FD03.md](./Documentos/FD03_DocumentoSRS/FD03_DocumentoSRS.md) - *Realizado*
* ✅ Issues: Formato *Como... quiero... para...*
* ✅ Criterios Gherkin:
  ```gherkin
  DADO que el usuario está autenticado
  CUANDO hace clic en ""Generar diagrama UML""
  ENTONCES se muestra el editor de diagramas
  ```



### 📝 FD04 - Diagramas de Arquitectura (Reverse Engineering)
* [📄 FD04.pdf](./Documentos/FD04_DocumentoSAD/FD04_DocumentoSAD.pdf) - *Realizado*
* [📝 FD04.md](./Documentos/FD04_DocumentoSAD/FD04_DocumentoSAD.md) - *Realizado*
* ✅ Diagramas incluidos:
  * Clases
  * Base de datos
  * Componentes
  * Despliegue
  * Arquitectura

---

### 📝 FD05 - Informe Final
* [📄 FD05.pdf](./Documentos/FD05_InformeProyectoFinal/FD05_InformeProyectoFinal.pdf) - *Realizado*
* [📝 FD05.md](./Documentos/FD05_InformeProyectoFinal/FD05_InformeProyectoFinal.md) - *Realizado*

---

## 📎 ANEXOS

### 📘 Diccionario de Datos
* [📄 Diccionario.pdf](./Documentos/Diccionario%20de%20Datos/diccionario_datos.pdf) - *Realizado*
* [📝 Diccionario.md](./Documentos/Diccionario%20de%20Datos/diccionario_datos.md) - *Realizado*

### 📘 Estándar de Programación
* [📄 Estandar.pdf](./Documentos/Estandar%20de%20Programacion/Estandar%20de%20Programacion.pdf) - *Realizado*
* [📝 Estandar.md](./Documentos/Estandar%20de%20Programacion/Estandar%20de%20Programacion.md) - *Realizado*

---

## 🚀 GITHUB: IMPLEMENTACIONES

### 📄 README actualizado
* Incluye:
  * ✅ Requisitos (Python 3.9+, Node.js 16+)
  * ✅ Parámetros de entorno
  * ✅ Instrucciones de despliegue

---

### 📚 Uso de GitHub Wikis
* [Wiki del Proyecto](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/wiki) - *Realizado*
* Contiene:
  * Características actuales
  * Futuras versiones
  * Fechas estimadas de liberación

---

### 📋 GitHub Projects
* ✅ Issues relacionados a tareas completas - *Realizado*
* 🔗 Enlace: [GitHub Project](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/projects) - *Realizado*

---

### 🤖 GitHub Actions - Desarrollo seguro

* ✅ **SonarQube** - [Configurado](./.github/workflows/sonar.yml)
* ✅ **Snyk** - [Configurado](./.github/workflows/snyk.yml)
* ✅ **Semgrep** - [Configurado](./.github/workflows/semgrep.yml)
* ✅ **Package Publishing** - [Configurado](./.github/workflows/publish-package.yml)
* 📁 Ver workflows: [`.github/workflows/`](./.github/workflows/)

---

### 📦 Releases y Packages
* 🔖 **Releases**: ✅ [Ver Releases](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/releases) - **2 releases disponibles**
* 📦 **Packages**: ✅ [Ver Package publicado](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/packages) - **@upt-faing-epis/ui-components**

---

### 📋 Telemetría y Monitoreo
* ✅ **Google Analytics** - Implementado para análisis de uso y comportamiento de usuarios
* 📊 **Métricas recopiladas**: Páginas visitadas, tiempo de sesión, interacciones con diagramas UML
* 📈 **Dashboard de Analytics**: Seguimiento de adopción de funcionalidades y rendimiento

![Google Analytics Dashboard](./Documentos/Telemetria/Resumen%20de%20iteraccion.png)
*Dashboard de Google Analytics mostrando métricas de uso de la plataforma*

> 📊 **[Ver reporte completo de telemetría →](./Documentos/Telemetria/Telemetria.md)**

---
### 🤝 Contribuciones
* ✅ Commits significativos en ramas feature/ y fix/
* 📈 **3 contributors activos**

---

### ☁️ GitHub Actions - Infraestructura
* ✅ Despliegue automatizado con Terraform - *Realizado*
* 🛠️ Workflow: `.github/workflows/terraform.yml` - *Realizado*

---

### 🚀 GitHub Actions - Aplicación
* 🛠️ **Deployments**: ✅ [github-pages activo](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ticona-martinez-perez/deployments)

---

## 🧪 Proyecto - Aplicación

### 🎯 Estado del Proyecto
* ✅ **Frontend**: 100% funcional - React + Tailwind CSS
* ✅ **Backend**: 100% funcional - FastAPI + Python
* ✅ **Conexión**: Frontend ↔ Backend completamente integrado
* 🌐 **URL de desarrollo**: `http://localhost:3000` (Frontend) + `http://localhost:8000` (Backend)

### 🛠️ Tecnologías Implementadas
* **Frontend**: React 19.0.0, Vite, Tailwind CSS, Framer Motion
* **Backend**: FastAPI, Python 3.9+
* **Base de datos**: PostgreSQL
* **Autenticación**: React Hook Form + token

### 📊 Métricas de Calidad
* ✅ **SonarQube**: Análisis estático completo - 0 errores críticos
* ✅ **Snyk**: Evaluación de dependencias - Sin vulnerabilidades conocidas  
* ✅ **Semgrep**: Reglas aplicadas - Issues menores corregidos

---

## 🎤 EXPOSICIÓN

### 🎞️ Presentación
* 🎥 [Video en YouTube](https://www.youtube.com/watch?v=5NrXfO6V9tI) - *Realizado*
* 🖼️ [Presentación Marp](./index.md) - *Realizado*

### 🧠 Enfoque y Claridad
* ✅ Explicación clara del problema: Automatización de diagramas UML
* ✅ Solución propuesta: Plataforma web con FastAPI + React
* ✅ Arquitectura bien definida: Backend API + Frontend SPA



---

## 📊 ESTADO ACTUAL DEL REPOSITORIO

### 🟢 Secciones Completadas
* ✅ **Releases**: 2 releases (v1.3.0 Latest)
* ✅ **Packages**: 1 paquete (@upt-faing-epis/ui-components)  
* ✅ **Deployments**: 4 deployment (github-pages)

* ✅ **Issues**: Templates configurados
* ✅ **Projects**: Tablero Kanban
* ✅ **Wiki**: Documentación técnica
* ✅ **Security**: Análisis automatizado


---

## 📌 Notas

* ✅ **Repositorio activo** con commits regulares
* ✅ **Integración continua** configurada
* ✅ **Desarrollo seguro** implementado
* ✅ **Arquitectura escalable** Frontend + Backend
* 📦 **Paquetes publicados** en GitHub Packages
* 🚀 **Deployments automatizados** activos

---

**Última actualización**: Julio 5, 2025  
**Estado del proyecto**: 🟢 En desarrollo activo"
UPT-FAING-EPIS/si784_2025-i-proyecto_si784_2025-i-u3-proyecto-formatos-01,si784_2025,i-proyecto_si784_2025-i-u3-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/si885_2025-i-proyecto_si885_2025-i-u3-proyecto-formatos-01,si885_2025,i-proyecto_si885_2025-i-u3-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si885-2025-i-u3-ayma_poma_tapiaa,proyecto,si885-2025-i-u3-ayma_poma_tapiaa,True,1841,True,7,True,False,True,"# 🎓 Título del Proyecto

**Dashboard interactivo para el análisis de tendencias y la visualización de tecnologías aplicables a temas de tesis en Ingeniería de Sistemas**

---

## ❗ Problemática

Muchos estudiantes universitarios enfrentan dificultades al momento de elegir un tema de tesis y las tecnologías adecuadas para su desarrollo. Esta situación se debe a la falta de acceso a información organizada y visual sobre los trabajos realizados en años anteriores.

### 📌 Consecuencias

- Dificultad para elegir un tema de tesis alineado con las tendencias tecnológicas.
- Incertidumbre sobre qué tecnologías son más utilizadas en el entorno académico.
- Falta de referentes claros sobre cómo se aplican ciertas herramientas en proyectos reales.

---

## 🎯 Objetivo Principal

-Permitir la visualización clara de la cantidad de tesis por categoría, titulos de tesis filtrados y las tecnologías utilizadas en cada una.

---

## ✅ Objetivos Secundarios

- Analizar la evolución temporal del uso de tecnologías en las tesis para identificar tendencias y cambios significativos a lo largo del tiempo.

---

## 📊 Dashboard Interactivo

Accede al dashboard de Power BI para explorar las visualizaciones y análisis de datos:

🔗 **[Ver Dashboard en Power BI](https://app.powerbi.com/groups/me/reports/ff558cdc-1051-474b-9992-e91c2c06a806?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare)**

![Dashboard Captura 1](media/01.jpg)

![Dashboard Captura 2](media/02.jpg)
---

## 👥 Integrantes

| Nombre                              | Código      |
| ------------------------------------ | ----------- |
| Erick Yoel Ayma Choque               | 2021072616  |
| Fabiola Estefani Poma Machicado      | 2021070030  |
| Dylan Yariet Tapia Vargas            | 2021072630  |

---

## 🛠️ Tecnologías Utilizadas

- Microsoft Power BI 📊
- SQL Server"
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-agreda-contreras-ortiz,proyecto,si889-2025-i-u3-agreda-contreras-ortiz,True,3597,False,8,True,True,True,"](https://classroom.github.com/a/IlvMPK2Y)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703740)
# proyecto-formatos-01
# 🚀 Infraestructura de Azure para WebApps - Proyecto Patrones

Este módulo de infraestructura contiene la configuración de Terraform para desplegar dos aplicaciones web en Azure, utilizando App Service Plan y Web Apps Linux, totalmente preparado para automatizar despliegues con GitHub Actions.

---

## ✅ Requisitos

- 🧑‍💻 Cuenta de Azure activa.
- 🔐 Haber creado un **Service Principal** y configurado el secreto `AZURE_CREDENTIALS` en GitHub.
- 📁 Tener configurado un archivo de variables (`terraform.tfvars`) en la carpeta `infra/`.
- ⚙️ Haber configurado GitHub Actions con el workflow `terraform-deploy.yml`.

---

## 🗂️ Archivos principales

|  📄 Archivo               | 📝 Descripción |
|:--------------------------|:------------|
| `main.tf`                 | Define el Resource Group, App Service Plan y WebApps. |
| `variables.tf`            | Variables de entrada para parametrizar la infraestructura. |
| `outputs.tf`              | Outputs importantes como las URLs de las WebApps creadas. |
| `terraform.tfvars`        | Valores reales para las variables definidas. |
| `providers.tf`            | Configuración del proveedor de Azure. |
| `versions.tf`             | Versiones requeridas de Terraform y AzureRM. |

---

## 📦 Variables esperadas (`variables.tf`)

| 🔑 Variable                  | Tipo     | Descripción |
|:---------------------------|:---------|:------------|
| `resource_group_name`      | `string` | Nombre del Resource Group donde desplegar recursos. |
| `location`                 | `string` | Región de Azure. |
| `app_service_plan_name`    | `string` | Nombre del App Service Plan para alojar las WebApps. |
| `webapps`                  | `list(object({ name = string }))` | Lista de aplicaciones web a crear. |

---

## 🚀 Procedimiento de despliegue

### 1️⃣ Crear y configurar el secreto de Azure
Tener en GitHub un secreto llamado `AZURE_CREDENTIALS` con el contenido JSON generado desde el siguiente comando:
```bash
az ad sp create-for-rbac --name ""terraform-gha-sp"" --role Contributor --scopes /subscriptions/$(az account show --query id -o tsv) --sdk-auth
```
🔒 Copia el JSON de salida y guárdalo como secreto `AZURE_CREDENTIALS` en GitHub ➝ Settings ➝ Secrets ➝ Actions.

---

### 2️⃣ Configurar archivo `terraform.tfvars`
En la carpeta `infra/`, crea o actualiza tu archivo `terraform.tfvars` con el contenido:
```bash
resource_group_name = ""nombre-de-tu-resource-group""  
location = ""East US""  
app_service_plan_name = ""nombre-de-tu-appservice-plan""

webapps = [
  { name = ""nombre-webapp-1"" },
  { name = ""nombre-webapp-2"" }
]
```
---

### 3️⃣ Usar el workflow de GitHub Actions

En GitHub ➔ pestaña **Actions**:

1. Selecciona el workflow **""Terraform Manual Deploy""**.
2. Haz clic en **Run workflow**.
3. Ingresa el nombre de tu archivo `.tfvars`.
4. Haz clic en **Run**.

🏗️ Esto ejecutará automáticamente:

- terraform init
- terraform validate
- terraform plan
- terraform apply

---

## 💡 Notas importantes

- 🌐 El despliegue aplica recursos en la **suscripción** donde fue creado el Service Principal.
- 💰 Los cambios de infraestructura son visibles usando Infracost en Pull Requests configurado en el `infracost.yml`.
- 🛠️ Pendiente: Agregar un workflow que permita enviar automáticamente el contenedor al Azure App Service tras una build exitosa.
---"
UPT-FAING-EPIS/proyecto-si885-2025-i-u3-floresq_chambi_leyvas,proyecto,si885-2025-i-u3-floresq_chambi_leyvas,True,7263,True,11,True,True,True,"# 🎓 Universidad Privada de Tacna
# CURSO: INTELIGENCIA DE NEGOCIOS
## 👨‍🎓 Alumnos
- **Jerson Roni Chambi Cori**
- **Jaime Elias Flores Quispe**
- **Elvis Ronald Leyva Sardon**

# Dashboard de Monitoreo de Repositorios Académicos en GitHub

Sistema para la **evaluación automática y monitoreo** de repositorios académicos de estudiantes de la Facultad de Ingeniería de Sistemas, Universidad Privada de Tacna. Facilita el análisis de métricas de contribución, calidad del código, uso de buenas prácticas y tecnologías empleadas, además de proveer dashboards y reportes para docentes y estudiantes.

---

## Descripción General

Esta herramienta automatiza la revisión de repositorios GitHub usados en cursos académicos, permitiendo:

- **Reducción del tiempo de evaluación docente**.
- **Estandarización de buenas prácticas** en el desarrollo.
- **Reportes analíticos** y métricas objetivas de desempeño.
- **Transparencia y retroalimentación** inmediata para estudiantes.

---

## Objetivos

- **Automatizar** la evaluación de repositorios, reduciendo el tiempo de revisión manual.
- **Estandarizar** criterios de calidad y buenas prácticas en el desarrollo de software.
- **Generar reportes** e identificar tendencias tecnológicas en los proyectos estudiantiles.
- **Mejorar la transparencia** y objetividad en la calificación.

---

## Funcionalidades Principales

- Autenticación con GitHub (OAuth2).
- Extracción y análisis de commits, ramas, issues, pull requests.
- Cálculo automático de métricas de actividad y tecnologías usadas.
- Dashboards interactivos y reportes exportables (PDF/CSV).
- Integración con Power BI.
- Verificación automática de documentación (README.md, informes técnicos).

---

## Requerimientos Funcionales

| ID     | Requerimiento                               | Descripción                                                                 | Prioridad |
|--------|---------------------------------------------|-----------------------------------------------------------------------------|-----------|
| RF-01  | Analizar actividad en repositorios          | Extraer y presentar datos sobre commits, ramas, issues y pull requests.     | Alta      |
| RF-02  | Generar métricas de actividad               | Calcular estadísticas sobre frecuencia de contribución y actividad.         | Alta      |
| RF-03  | Identificar tecnologías utilizadas          | Detectar lenguajes de programación y frameworks en los repositorios.        | Alta      |
| RF-04  | Visualizar reportes interactivos de actividad| Mostrar gráficos y tendencias de desarrollo.                                | Media     |

---

## Diagramas en Mermaid

### Diagrama de Arquitectura

```mermaid
flowchart TD
    github[GitHub]:::github
    actions[GitHub Actions]:::actions
    etl[Script Python ETL]:::etl
    storage[Azure Storage Account]:::storage
    sql[Azure SQL Database]:::sql
    powerbi[Power BI]:::powerbi
    user[Usuario Final]:::user

    github -->|Trigger| actions
    actions -->|Ejecuta script| etl
    etl -->|Escribe CSV/SCRIPT| storage
    etl -->|Carga datos| sql
    storage -->|Importación opcional| sql
    sql -->|Provee datos| powerbi
    powerbi -->|Dashboards,\nReportes| user

    classDef github fill:#f0f8ff,stroke:#000,stroke-width:1px,color:#222;
    classDef actions fill:#ffffe0,stroke:#000,stroke-width:1px,color:#222;
    classDef etl fill:#90ee90,stroke:#000,stroke-width:1px,color:#222;
    classDef storage fill:#87ceeb,stroke:#000,stroke-width:1px,color:#222;
    classDef sql fill:#add8e6,stroke:#000,stroke-width:1px,color:#222;
    classDef powerbi fill:#f5deb3,stroke:#000,stroke-width:1px,color:#222;
    classDef user fill:#ffc0cb,stroke:#000,stroke-width:1px,color:#222;
```

---

### Diagrama de Casos de Uso

```mermaid
flowchart LR
    Scheduler[""Scheduler (Crontab)""]
    User[""Usuario""]

    subgraph ""Sistema ETL / Dashboard Power BI""
      UC1[""Actualizar datos periódicamente automáticamente""]
      UC2[""Visualizar dashboard en Power BI""]
      UC3[""Ejecutar filtros en dashboard""]
    end

    Scheduler --> UC1
    User --> UC2
    User --> UC3
```

---

### Diagrama de Secuencia

```mermaid
%% Diagrama 1: Proceso automático ETL
sequenceDiagram
    participant Scheduler
    participant ETL as ""Sistema ETL""
    participant DataSource as ""Fuente de datos""
    participant Database as ""Base de datos""
    participant Artifacts as ""Artefactos de visualización""

    Scheduler->>ETL: Dispara proceso según intervalo
    ETL->>DataSource: Extraer datos
    alt Datos extraídos correctamente
        ETL->>ETL: Transformar y limpiar datos
        ETL->>Database: Cargar datos limpios
        alt Carga correcta
            ETL->>Artifacts: Actualizar artefactos para visualización
        else Error al cargar datos
            ETL-->>Scheduler: Notificar fallo en carga
        end
    else Error en extracción
        ETL-->>Scheduler: Notificar fallo en conexión o script ETL
    end
```

```mermaid
%% Diagrama 2: Visualizar dashboard en Power BI
sequenceDiagram
    participant Usuario
    participant Dashboard as ""Dashboard Power BI""
    participant Database as ""Base de datos""

    Usuario->>Dashboard: Abre sitio web del dashboard
    Dashboard->>Database: Solicita datos actualizados
    alt Datos disponibles
        Database-->>Dashboard: Envía datos
        Dashboard-->>Usuario: Muestra datos y visualizaciones
    else Problemas de acceso o datos
        Dashboard-->>Usuario: Muestra error o datos desactualizados
    end
    Usuario->>Dashboard: Navega entre vistas y gráficos
```

```mermaid
%% Diagrama 3: Ejecutar filtros en dashboard
sequenceDiagram
    participant Usuario
    participant Dashboard as ""Dashboard Power BI""
    participant Database as ""Base de datos""

    Usuario->>Dashboard: Selecciona filtros
    Dashboard->>Database: Solicita datos filtrados
    alt Datos filtrados disponibles
        Database-->>Dashboard: Envía datos filtrados
        Dashboard-->>Usuario: Actualiza visualizaciones
    else Filtros sin resultados o error
        Dashboard-->>Usuario: Muestra mensaje de error o sin resultados
    end
```

---

## Reglas de Negocio

- Solo se analizan repositorios públicos de la organizacion con permisos autorizados.
- El usuario puede seleccionar un filtro de año y mes para el análisis.
- Para ser considerado válido, un repositorio debe tener al menos un commit y archivos fuente/documentación.
- Debe existir un archivo `README.md` y al menos un informe técnico (.docx o .md).
- La detección de tecnologías se realiza automáticamente.

---

## Recomendaciones

- Mantener el `README.md` actualizado y con enlaces a los diagramas Mermaid.
- Garantizar la existencia de documentación técnica y archivos requeridos en cada repositorio monitoreado.
- Incentivar el uso de issues y pull requests para mejorar la colaboración y trazabilidad.
- Implementar talleres periódicos sobre buenas prácticas en GitHub para estudiantes y docentes.
- Considerar la integración futura con LMS como Moodle para centralizar la información académica.

---

# ENLACE DE DASHBOARD

https://app.powerbi.com/links/VtN9HA7oPn?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare

![image](https://github.com/user-attachments/assets/cabfa55f-012d-4b83-bd14-5ef95a8221b9)"
UPT-FAING-EPIS/proyecto-si885-2025-i-u3-fernandez_floresr_floresm,proyecto,si885-2025-i-u3-fernandez_floresr_floresm,True,3503,False,4,True,False,False,"](https://classroom.github.com/a/7rvBn7Ze)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19881757)
# 📊 Dashboard de Análisis del Mercado Laboral Tecnológico 

## 👋 Introducción

Bienvenido a la **Plataforma de Análisis del Mercado Laboral Tecnológico**, una herramienta diseñada para proporcionar insights valiosos y actualizados sobre las oportunidades de empleo para profesionales y estudiantes de tecnologias de informacion.

En un mercado tecnológico en constante evolución, entender las tendencias de la demanda, las habilidades más solicitadas y las expectativas salariales es crucial para la toma de decisiones estratégicas. Esta plataforma busca empoderar a los individuos para orientar su carrera, planificar su formación continua, y ayudar a las instituciones educativas a adaptar sus currículas a las necesidades reales del dinámico sector TI.


## 🎯 Objetivos del Proyecto

El objetivo general de este proyecto es:

Desarrollar e implementar una dashboard interactivo y basado en datos que **monitoree, analice y presente de manera clara y accesible las tendencias, requisitos y oportunidades del mercado laboral para profesionales y estudiantes del amplio espectro de carreras tecnológicas en Perú**, con el fin de facilitar la toma de decisiones estratégicas para esta diversa audiencia, así como para instituciones educativas y empresas del sector.

Para lograr esto, el **dashboard de Power BI** se enfoca en los siguientes objetivos clave:

### Objetivo Principal del Dashboard:

1.  **Visualizar Oportunidades Laborales Detalladas:**
    *   Mostrar ofertas laborales actualizadas, permitiendo a los usuarios filtrar y explorar por criterios como departamento, mes, nivel de educacion, modalidad de trabajo, lenguajes de programación. El objetivo es que los usuarios de diversas carreras TI puedan identificar rápidamente las oportunidades que mejor se ajustan a su perfil y aspiraciones profesionales.

### Objetivos Secundarios del Dashboard:

2.  **Identificar Roles en tecnologia de la informacion Más Demandadas:**
    *   Permitir a los usuarios visualizar de forma clara cuáles son los roles (ej. Desarrollador Backend, Ingeniero de Datos, Especialista en Ciberseguridad, etc.) con mayor demanda en el mercado TI peruano.
    *   Analizar y destacar las habilidades y tecnologías (lenguajes, frameworks, bases de datos, metodologías) más requeridas por las empresas en las diferentes ofertas, ayudando a los profesionales y estudiantes a enfocar su aprendizaje y desarrollo.

3.  **Análisis Geográfico de la Oferta Laboral TI:**
    *   Facilitar la visualización de la distribución de las ofertas laborales del sector tecnológico a lo largo de las diferentes regiones del Perú. Esto ayudará a los usuarios a evaluar las oportunidades por ubicación, entender dónde se concentra la demanda para ciertos perfiles y tomar decisiones informadas sobre posibles reubicaciones o enfoque geográfico en su búsqueda de empleo.

4.  **Evaluar Tendencias Salariales por Especialización y Experiencia en TI:**
    *   Proveer gráficos y visualizaciones interactivas que muestren rangos y promedios salariales para diferentes especializaciones y roles dentro del campo tecnológico. Este análisis ayudará a los usuarios a comprender mejor las expectativas salariales en su área y región, y a negociar de manera más informada."
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ccalli-jarro,proyecto,si889-2025-i-u3-ccalli-jarro,True,4754,False,10,True,True,True,"](https://classroom.github.com/a/wz6Z3zoy)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19882130)
# 🔐 PWASP SCANNER – Sistema de Detección de Vulnerabilidades Web

**Ubicación:** Tacna, Perú  
**Año:** 2025  
**Autor:** Joel Robert Ccalli Chata

---

## 📌 Descripción General del Proyecto

El **web guard** es un sistema web diseñado para detectar **vulnerabilidades en aplicaciones web** basándose en los estándares del **OWASP Top 10**, facilitando el análisis de seguridad en sitios de pequeñas y medianas empresas. El sistema permite escanear sitios ingresando una URL, autenticarse si es necesario, identificar vulnerabilidades como XSS, SQLi, CSRF, etc., y generar reportes técnicos detallados en múltiples formatos.

> Este proyecto nace de la necesidad creciente de automatizar procesos de evaluación de seguridad, sin depender de costosas auditorías manuales o herramientas complejas.

---

## 🧱 Estructura del Proyecto

El sistema se desarrolló bajo una metodología ágil (SCRUM) y se documentó en seis entregables clave:

---

## 📄 Documentación Técnica

| Documento | Descripción | Enlace |
|----------|-------------|--------|
| **FD01 - Ficha del Proyecto** | Contiene los datos generales del proyecto: nombre, responsable, ubicación, objetivos generales, tiempo estimado, etc. | [Ver FD01](#) |
| **FD02 - Documento de Visión** | Presenta una descripción extensa del sistema, su valor para los usuarios, actores involucrados, contexto de uso, y funcionalidades clave esperadas. | [Ver FD02](#) |
| **FD03 - Especificación de Requisitos de Software (SRS)** | Documento detallado de requisitos funcionales y no funcionales, casos de uso (con PlantUML), y diagramas de secuencia (Mermaid). | [Ver FD03](#) |
| **FD04 - Diseño de Arquitectura del Software (SAD)** | Contiene el diagrama de arquitectura general, tecnologías empleadas, capas del sistema, módulos internos y su interacción. | [Ver FD04](#) |
| **FD05 - Informe Final del Proyecto** | Informe técnico con justificación, desarrollo, evidencias, pruebas realizadas, resultados obtenidos, y conclusiones. | [Ver FD05](#) |
| **FD06 - Propuesta de Proyecto** | Propuesta detallada del sistema: introducción, objetivos, justificación, cronograma, presupuesto, metodología y referencias bibliográficas. | [Ver FD06](#) |

---

## 🔍 Tecnologías Utilizadas

- **Frontend:** HTML5, CSS3, JavaScript (Vanilla o React opcional)
- **Backend:** Python (Flask), con librerías para escaneo (requests, BeautifulSoup, OWASP ZAP API)
- **Base de datos:** SQLite / PostgreSQL (según necesidad)
- **Herramientas de Seguridad:** OWASP ZAP, Nmap, Sqlmap
- **Despliegue:** Hosting compartido o VPS (como Somee.com, Heroku, etc.)

---

## 🧠 Funcionalidades Principales

- ✅ Escaneo de sitios web por URL
- ✅ Detección de vulnerabilidades OWASP Top 10
- ✅ Panel de usuario para historial de escaneos
- ✅ Reportes exportables (PDF, CSV)
- ✅ Modo de escaneo autenticado (Login)
- ✅ Interfaz amigable y adaptable (responsive)

---

## 🖥️ Diagrama General del Sistema

![Diagrama Arquitectura General](./assets/diagrama-arquitectura-pwasp.png)

> *Incluye capas: presentación, lógica de negocio, motor de escaneo, base de datos y generación de reportes.*

---

## 📆 Cronograma de Desarrollo

| Fase | Actividades | Mes |
|------|-------------|-----|
| Análisis | Recolección de requerimientos, OWASP Top 10 | Julio |
| Diseño | Arquitectura, casos de uso, diagramas | Julio |
| Desarrollo | Backend, frontend, motor de escaneo | Agosto - Septiembre |
| Pruebas | Validación, reportes, pruebas automatizadas | Septiembre |
| Despliegue | Entrega final, documentación, evaluación | Octubre |

---

## 💼 Autor

- 👤 **Joel Robert Ccalli Chata**
- 📍 Tacna, Perú
- 📧 joelccalli@example.com

---

## 📚 Referencias Bibliográficas

1. OWASP Foundation. (2023). *OWASP Top 10: Web Application Security Risks*. https://owasp.org
2. Stallings, W. (2020). *Cryptography and Network Security*. Pearson.
3. Grimes, R. (2021). *Hacking the Hacker*. Wiley.
4. Kim & Solomon. (2020). *Fundamentals of Information Systems Security*. Jones & Bartlett.
5. Anderson, R. (2020). *Security Engineering*. Wiley.
6. Allen, J. (2022). *Software Security Engineering*. Addison-Wesley.
7. Bishop, M. (2018). *Computer Security: Art and Science*. Addison-Wesley.
8. Zetter, K. (2015). *Countdown to Zero Day*. Crown Publishing.
9. OWASP ZAP. (2023). *Zed Attack Proxy*. https://owasp.org/www-project-zap/
10. ISO/IEC 27001:2022. *Information Security Management Systems*. ISO.

---

## 📦 Estado del Proyecto

```bash
🚧 EN DESARROLLO – Fase de validación y pruebas finales"
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-chambe-nina-condori,proyecto,si889-2025-i-u3-chambe-nina-condori,True,4535,True,7,True,False,False,"# ChargePass - Sistema Gestor de Contraseñas

## 📌 Planteamiento del Problema

En la actualidad, muchas personas utilizan contraseñas débiles, repetidas o poco seguras debido a la dificultad para recordar múltiples credenciales complejas. Esta situación incrementa el riesgo de accesos no autorizados, robo de identidad digital y vulnerabilidades en la protección de información sensible.

A pesar de que existen diversas herramientas para la gestión de contraseñas, muchas de ellas no ofrecen un proceso de autenticación previo confiable, ni garantizan una experiencia accesible y segura desde dispositivos móviles.

Además, el registro de usuarios sin una verificación adecuada puede abrir la puerta a registros fraudulentos o bots, comprometiendo la seguridad del sistema y la privacidad de los usuarios. La falta de mecanismos robustos de validación y generación segura de contraseñas limita la efectividad de estos sistemas como herramientas de protección frente a amenazas cibernéticas comunes.

## 🎯 Alcance y Justificación

**ChargePass** nace como una solución móvil moderna, segura e intuitiva que busca abordar estas limitaciones. Está diseñada para permitir a los usuarios registrar cuentas mediante verificación por correo electrónico, generar contraseñas robustas de forma automática (con criterios definidos como longitud, caracteres especiales, etc.) o manual (usando un token personalizado), y almacenarlas de manera segura en la nube.

La aplicación está construida con **Flutter** y utiliza **Firebase** como plataforma de respaldo para servicios como Firebase Auth, Firestore y Firebase Storage. Además de garantizar autenticación segura y control de acceso, el sistema contempla mejoras futuras como autenticación multifactor, validaciones por dispositivo y restricciones por dominio de correo.

Todo esto con el objetivo de proteger la identidad digital de los usuarios, evitar accesos indebidos y ofrecer una experiencia confiable desde cualquier dispositivo.

## Url Enlace Github 📌

https://github.com/tomasyoel/chargepasscheck

## Url Enlace Youtube📌

https://www.youtube.com/watch?v=pqg5qtxOhXs

## Comandos de Despliegue y Clonacion de Repositorio Github👨‍💻

1.- Abrir terminal CMD

2.- git glone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-chambe_nina_condori

3.- cd charguepassv4

4.- code .        (se abrira el visual studio)

5.- Ctrl+ñ  (para abrir la terminal de visual studio y en la terminal escribir el comando a continuacion)

6.- flutter clean

7.- flutter pub get (para recolectar las librerias)

8.- flutter build apk  (para sacar el archivo .apk para probarlo)


## Diagrama de Casos de Uso

### Reporte de Infracost

![image](https://github.com/user-attachments/assets/7faf53ad-2425-4685-a61d-0305c8f77a1a)

Diagrama de Caso de Usos Iniciar Sesión:

![imagen](https://github.com/user-attachments/assets/c57b2e90-2e57-49ee-be79-4469aea216c5)

Registro de Usuario:

![imagen](https://github.com/user-attachments/assets/6aaedd05-e416-45ce-acf1-612d73a330cf)

Generación Automática de Claves - Generar o guardar Contraseña:

![imagen](https://github.com/user-attachments/assets/cfbed588-a714-4d77-908a-3aedf842e1a2)

Generación Automática de Claves - Generar o guardar Contraseña:

![imagen](https://github.com/user-attachments/assets/376f3be5-3cc8-4e8e-a6a5-fe0dcbdae0e5)

Diagrama de Base de Datos

![Sin título](https://github.com/user-attachments/assets/2d825ea1-f8f5-4c02-aedd-6dbb1b151ffb)

Diagrama de Subsistemas:

![imagen](https://github.com/user-attachments/assets/d541121b-9fc0-4922-9042-420517727d05)

Arquitectura lógica del sistema ChargePass a nivel de clases:

![fLZRRXit47tVhrYa3ssH6h2J1eYDE8siIo90bWL9TXuDQdUy8hHBgYJNYXha8uf-KdwiGovtHUv52jeNGvev7CxbS6Ra3r8HeV8i3UI6iYqH90kZb4ZPKqhGLQvW776se7z1U5w7Z3XJKv91-A8dA4bVjEdDoOjNhIgrJo5SyJGEWf_3w-lhi7yt7Oq_tizx_V7tVwRXO1WEnelXzx](https://github.com/user-attachments/assets/ab028cd1-5208-4444-b023-0c15b32e9e98)

Diagrama de Secuencia : Generacion y guardado de Contraseña

![imagen](https://github.com/user-attachments/assets/7b835bb3-4b5b-4d8e-9b14-9f88fc7d5d38)

Diagrama de arquitectura del Proyecto:

![imagen](https://github.com/user-attachments/assets/6082cedf-8f56-4711-911a-6c08c7612282)

Diagrama de Componentes:

![dPTTJzim58RlyoiiTh6hIL3s0HAhI5DtgzIr7GKq2KsLIKvJgwuTEGwCJVllSzAaILCx2GC9AVRZys4VdzTSnuf8bMoPynPzrZy8Bsx7andwWgVunfraOqwyeJmYacoHBxQHuC3LGhqmG19yHNZ8e894nD-G4Ef0XOZN913Fb8T8oQIwL8g41xwG72JgdJgra8OOURDlyzaKJs_nmX](https://github.com/user-attachments/assets/c30abac8-6903-4a09-977a-6df9a6d35949)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-ayma-tapia-vargas,proyecto,si889-2025-i-u3-ayma-tapia-vargas,True,266,False,0,True,False,False,"](https://classroom.github.com/a/wz6Z3zoy)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19887815)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-florer_floresm_fernandezv,proyecto,si889-2025-i-u3-florer_floresm_fernandezv,True,3693,True,18,False,True,True,"# 📑 Aplicación para la Generación Automatizada de un Diccionario de Datos 


## **Docente:** Mag. Patrick Cuadros Quiroga  

---

### **Integrantes:**  
- **Flores Melendez Andree Sebastian**  
- **Flores Ramos Mario Anthonio**  
- **Fernandez Villanueva Daleska Fernandez**  

---

## 🚨 Problemática 
En la actualidad, la documentación de bases de datos sigue siendo una tarea mayormente manual, lo que genera demoras y potenciales errores. Las herramientas existentes para la documentación de bases de datos son costosas o no ofrecen la flexibilidad necesaria para adaptarse a las necesidades de los estudiantes o desarrolladores que requieren una solución práctica y económica. Este proyecto surge para llenar esa brecha, ofreciendo una plataforma accesible que automatice la creación de diccionarios de datos a partir de bases de datos relacionales y no relacionales.

---

## 🎯 Objetivo General 

Desarrollar una aplicación que permita la generación automatizada de diccionarios de datos, facilitando la gestión continua de la información en sistemas de bases de datos.

---

## 💡 Objetivos Específicos 

- **Automatizar** la extracción de metadatos de bases de datos.
- **Generar** un diccionario de datos estructurado en un formato accesible.
- **Implementar** una interfaz de usuario amigable para gestionar los diccionarios de datos.
- **Facilitar** la integración de la aplicación con sistemas de gestión de bases de datos.

---

## 📝 Justificación 

El proyecto busca abordar la necesidad de automatización en la documentación de bases de datos, reduciendo los errores humanos y mejorando la eficiencia del proceso. La automatización no solo ahorrará tiempo, sino que también proporcionará una documentación precisa, actualizada y fácilmente accesible para todos los usuarios, desde estudiantes hasta profesionales.

**Beneficios clave**:

- **Automatización**: Reduce el tiempo y esfuerzo necesario para la creación de diccionarios de datos.
- **Accesibilidad**: Permite a cualquier usuario generar contenido visual sin experiencia en documentación técnica.
- **Eficiencia**: Uso de tecnologías como C# y React JS para garantizar una rápida generación y exportación.


---

# 📑 DataDictGen - Generador de Diccionarios de Datos

Aplicación web para generar diccionarios de datos automáticamente desde bases de datos relacionales y NoSQL.

## 🎯 Características

- Extracción automática de metadatos
- Documentación con IA (OpenAI)
- Exportación a PDF
- Soporte para múltiples BD
- Interfaz web moderna


## 📋 Requisitos

- .NET 8.0 SDK
- Node.js 18+
- Cuenta AWS
- OpenAI API Key



### GitHub Secrets (para deploy)
```
AWS_ACCESS_KEY_ID=xxx
AWS_SECRET_ACCESS_KEY=xxx

```

## ☁️ Despliegue AWS

### 1. Infraestructura con Terraform
```bash
cd terraform
terraform init
terraform plan
terraform apply
```

### 2. Deploy con GitHub Actions
- Configurar secrets en GitHub
- Push tag: `git tag v1.0.0 && git push origin v1.0.0`
- O ejecutar workflow manualmente

## �️ Bases de Datos Soportadas

| Base de Datos | Puerto | Estado |
|---------------|--------|--------|
| SQL Server    | 1433   | ✅ |
| MySQL         | 3306   | ✅ |
| PostgreSQL    | 5432   | ✅ |
| MongoDB       | 27017  | ✅ |
| Redis         | 6379   | ✅ |
| Cassandra     | 9042   | ✅ |

## 🔌 API Endpoints

### Autenticación
```bash
POST /api/auth/login
POST /api/auth/register
```

### Metadatos
```bash
POST /api/metadata/test-connection
POST /api/metadata/database-preview
POST /api/metadata/table-schema
```

### Documentos
```bash
POST /api/word/generate-word
POST /api/word/generate-pdf
```

## � Equipo

- **Flores Melendez Andree Sebastian** 
- **Flores Ramos Mario Anthonio**
- **Fernandez Villanueva Daleska**"
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-docucode-ai-1,proyecto,si889-2025-i-u3-docucode-ai-1,True,10344,False,44,True,True,True,"](https://classroom.github.com/a/ZtQ31pSG)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19677797)

# DocuCode-AI

Sistema web inteligente para la evaluación automática de código fuente y generación de diagramas UML, orientado a mejorar el proceso de enseñanza-aprendizaje en el ámbito académico universitario.

---

## 🎓 Proyecto académico

Este proyecto fue desarrollado en el marco del curso **PATRONES DE SOFTWARE**  
Facultad de Ingeniería - EPIS - Universidad Privada de Tacna  
Docente: *Patrick José Cuadros Quiroga*

---

## 🚀 Descripción del Proyecto

**DocuCode-AI** es una plataforma web que permite a docentes y estudiantes:

- Analizar código fuente automáticamente utilizando IA (OpenAI API).
- Generar diagramas UML (Clases, Casos de Uso, Actividad, Componentes, Paquetes, Secuencia).
- Evaluar la calidad del código.
- Detectar código duplicado.
- Generar comentarios explicativos en el código.
- Consultar el historial de análisis por usuario.

---

## 📄 Documentación del Proyecto

| Documento | Formato PDF | Formato Markdown |
|-----------|-------------|------------------|
| FD01 - Informe de Factibilidad | [📄 Descargar](./FD01-EPIS-Informe%20de%20Factibilidad.pdf) | [📄 Ver MD](./FD01-Informe-Factibilidad.md) |
| FD02 - Informe de Visión de Producto | [📄 Descargar](./FD02-EPIS-Informe%20Vision.pdf) | [📄 Ver MD](./FD02-Informe-Vision.md) |
| FD03 - Informe de Especificación de Requerimientos | [📄 Descargar](./FD03-EPIS-Informe%20Especificación%20Requerimientos.pdf) | [📄 Ver MD](./FD03-EPIS-Informe%20Especificación%20Requerimientos.md) |
| FD04 - Informe de Arquitectura de Software | [📄 Descargar](./FD04-EPIS-Informe%20Arquitectura%20de%20Software.docx) | — |
| FD05 - Informe de Proyecto | 📄 Descargare | 📄 Descargar |
| Anexo - Diccionario de Datos | 📄 [Descargar](./Diccionario_Datos_DocuCodeAI.md) | 📄 Ver
| Anexo - Estándar de Programación | 📄 Descargar| 📄 Descargar |

---

## 📊 Análisis económico con Terraform

El análisis económico del proyecto ha sido realizado utilizando **Terraform** para simular la infraestructura requerida y calcular los costos asociados a un despliegue en la nube.

Resumen:

- VPS (Elastika) simulado: 2 vCPU, 4 GB RAM, 50 GB SSD → S/ 100 anuales.
- Beneficio / Costo (B/C): **16.24** → Proyecto viable (FD01).

Ver detalles completos en:  
👉 [FD01 - Informe de Factibilidad](./FD01-EPIS-Informe%20de%20Factibilidad.pdf)

---

## 📌 Puntos del GitHub Wiki

👉  [Acceder al Wiki del Proyecto](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro/wiki)

El Wiki incluye:

- Descripción del producto
- Manual de uso
- Roadmap de versiones
- Características planeadas
- Posibles mejoras futuras

---

## 📍 Roadmap de versiones
Roadmap:
![image](https://github.com/user-attachments/assets/b8197fe7-f1fe-4703-b2b5-a9067bd036ed)
### Versión 1.0 (actual)

- Generación de diagramas UML básicos.
- Análisis de código con IA.
- Evaluación de calidad y duplicados.
- Historial de análisis por usuario.

### Futuras versiones (planeado)

- Exportación avanzada de reportes.
- Mejora de precisión en diagramas de actividad y secuencia.
- Soporte para más lenguajes (Java, C#).
- Integración con LMS institucional.

---

## 📝 Historias de usuario

| ID | Historia de Usuario |
|----|---------------------|
| HU01 | Como **docente**, quiero **analizar automáticamente el código fuente** para ahorrar tiempo en la evaluación. |
| HU02 | Como **estudiante**, quiero **generar automáticamente los diagramas UML** para mejorar la documentación de mis proyectos. |
| HU03 | Como **usuario**, quiero **ver el historial de mis análisis** para hacer seguimiento a mi progreso. |
| HU04 | Como **usuario**, quiero **detectar código duplicado** para mejorar la calidad de mi código. |

---

## ✅ Criterios de aceptación (formato Gherkin)

### HU01 - Análisis automático de código

```gherkin
DADO que soy un docente autenticado
CUANDO subo un archivo de código fuente
ENTONCES el sistema genera comentarios automáticos sobre el código
```

### HU02 - Generación de diagramas UML

```gherkin
DADO que soy un usuario autenticado
CUANDO subo un archivo ZIP con código fuente
ENTONCES el sistema genera automáticamente los diagramas UML solicitados
```

### HU04 - Detección de código duplicado

```gherkin
DADO que he subido un archivo de código fuente
CUANDO ejecuto la función de detección de duplicados
ENTONCES el sistema muestra un reporte de posibles duplicados encontrados
```

---

## 🛠️ Requisitos para desplegar el proyecto

### 📌 Requisitos del sistema

- Servidor VPS o local (XAMPP, WAMP, LAMP).
- PHP >= 8.1
- MySQL o MariaDB
- Composer

### 📌 Dependencias

- OpenAI API (API KEY)
- PlantUML
- Terraform

---

## ⚙️ Procedimiento de despliegue

### 1️⃣ Clonar el repositorio

```bash
git clone https://github.com/tu-usuario/docucode-ai.git
```

### 2️⃣ Instalar dependencias PHP

```bash
composer install
```

### 3️⃣ Configurar variables de entorno

Crear `.env`:

```env
OPENAI_API_KEY=tu_api_key
DB_HOST=localhost
DB_NAME=nombre_de_tu_db
DB_USER=usuario_db
DB_PASS=contraseña_db
```

### 4️⃣ Configurar la base de datos

Importar el script `database.sql` en MySQL/MariaDB.

### 5️⃣ Ejecutar el sistema

```
http://localhost/docucode-ai
```

---

## 🚀 GitHub Projects (tareas relacionadas a ramas)

👉 [Acceder a GitHub Projects](https://github.com/tu-usuario/docucode-ai/projects)

- HU01, HU02, HU03, HU04 → Completadas y vinculadas a ramas `feature/...` o `develop`.

---

## 🛡️ GitHub Actions - Seguridad

👉 [Acceder a GitHub Actions](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro/actions)

- SonarQube → análisis de bugs y vulnerabilidades → configurado.
- Snyk o Semgrep → escaneo de dependencias → configurado.

---

## 🏷️ GitHub - Releases y Packages

👉 [Acceder a Releases](https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u2-lupaca_viveros_jarro/releases)

- Release v1.0 publicado.
- Package de distribución → publicado (opcional).

---

## 🤝 GitHub - Contribuciones al proyecto

| Integrante | Commits | Pull Requests | Issues cerrados |
|------------|---------|---------------|-----------------|
| Farley Rodrigo Viveros Blanco | X | Y | Z |
| Ronal Daniel Lupaca Mamani | X | Y | Z |
| Piero Paja De la Cruz | X | Y | Z |

---

## 🌍 Actions para despliegue de infraestructura


- Workflow [`terraform_deploy.yml`](./.github/workflows/terraform_deploy.yml) → despliegue real de infraestructura en AWS EC2 utilizando Terraform.

### Resultado de ejecución:

✅ Workflow ejecutado correctamente → instancia EC2 real creada.

```
Outputs:
instance_public_ip = ""3.95.193.156""
```

### Evidencia:

Instancias EC2 creadas en AWS us-east-1 (N. Virginia):

![image](https://github.com/user-attachments/assets/e89796b6-9378-4f7b-bf1e-305d917df7b8)

![image](https://github.com/user-attachments/assets/a2eda741-b7c5-4157-99d1-e7281c890111)

![image](https://github.com/user-attachments/assets/501ce366-5738-4f96-84e9-bb3413a4b05d)


### Archivos utilizados:

- [`terraform_deploy.yml`](./.github/workflows/terraform_deploy.yml)
- [`main.tf`](./infra/terraform/main.tf)
- [`variables.tf`](./infra/terraform/variables.tf)
- [`outputs.tf`](./infra/terraform/outputs.tf)

---

## 🚀 Actions para despliegue de la aplicación

- Workflow `app_deploy.yml` → despliegue automático de la app a servidor VPS.

---

## 🎬 Video de Exposición

👉 [Ver video en YouTube](https://youtu.be/TU_VIDEO)  
👉 [Presentación MARP](https://github.com/tu-usuario/docucode-ai/tree/main/docs/marp)

---

## 🧑‍💻 Autores

- Farley Rodrigo Eduardo Viveros Blanco - 2020066896
- Ronal Daniel Lupaca Mamani - 202006146
- Piero Alexander Paja De la Cruz - 2020067576

---

## 📜 Licencia

Este proyecto es de uso académico, desarrollado en el marco del curso **Patrones de Software - EPIS UPT**.

---
## 🖼️ Diagramas UML y Arquitectura del Sistema

A continuación se presentan los diagramas UML y de arquitectura obtenidos mediante reverse engineering del código del sistema **DocuCode-AI**, tal como se solicita en la rúbrica FD04:

### 📌 Diagrama de Casos de Uso

![image](https://github.com/user-attachments/assets/1e2848fd-92fa-46d9-8dd1-bb3b58069f20)

---

### 📌 Diagramas de Actividades (por Casos de Uso)

- **CU01 - Subir archivo de código**  
  ![CU01 - Actividad](./imgdiagrama/image-6.png)

- **CU02 - Generar diagramas UML**  
  ![CU02 - Actividad](./imgdiagrama/image-7.png)

- **CU03 - Visualizar resultados**  
  ![CU03 - Actividad](./imgdiagrama/image-8.png)

- **CU04 - Evaluar calidad del código**  
  ![CU04 - Actividad](./imgdiagrama/image-9.png)

- **CU05 - Detectar código duplicado**  
  ![CU05 - Actividad](./imgdiagrama/image-10.png)

- **CU06 - Ver historial de análisis**  
  ![CU06 - Actividad](./imgdiagrama/image-11.png)

- **CU07 - Autenticarse con GitHub**  
![image](https://github.com/user-attachments/assets/4373a7c0-9954-452e-b7b4-872f6e3eed40)

---

### 📌 Diagramas de Secuencia

- **CU01 - Subir archivo de código**  
  ![CU01 - Secuencia](./imgdiagrama/image-13.png)

- **CU02 - Generar diagramas UML**  
  ![CU02 - Secuencia](./imgdiagrama/image-14.png)

- **CU03 - Visualizar resultados**  
  ![CU03 - Secuencia](./imgdiagrama/image-15.png)

- **CU04 - Evaluar calidad del código**  
  ![CU04 - Secuencia](./imgdiagrama/image-16.png)

- **CU05 - Detectar código duplicado**  
  ![CU05 - Secuencia](./imgdiagrama/image-17.png)

- **CU06 - Ver historial de análisis**  
  ![CU06 - Secuencia](./imgdiagrama/image-18.png)

- **CU07 - Autenticarse con GitHub**  
  ![CU07 - Secuencia](https://github.com/user-attachments/assets/78c02a1f-3f76-4fe0-89e2-7cc7a22f5431)

---

### 📌 Diagrama de Clases

![Diagrama de Clases](./imgdiagrama/image-30.png)

---

### 📌 Diagrama de Objetos

![image](https://github.com/user-attachments/assets/8cb0989a-78d9-4031-b180-5fe6892e5034)

---

### 📌 Diagrama de Paquetes (Subsistemas)

![Diagrama de Paquetes](./imgdiagrama/image-21.png)

---

### 📌 Diagrama de Componentes (Arquitectura del Sistema)

![Diagrama de Componentes](./imgdiagrama/image-32.png)

---

### 📌 Diagrama de Base de Datos

![alt text](<base de datos.png>)
---

### 📌 Diagrama de Despliegue

![Diagrama de Despliegue](./imgdiagrama/image-34.png)

---"
UPT-FAING-EPIS/proyecto-si885-2025-i-u3-chite_hinojosa_villanueva,proyecto,si885-2025-i-u3-chite_hinojosa_villanueva,True,5567,False,13,True,False,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703117)

<center>
           
[comment]: <img src=""./media/media/image1.png"" style=""width:1.088in;height:1.46256in"" alt=""escudo.png"" />

![./media/media/image1.png](./media/logo-upt.png)

# **UNIVERSIDAD PRIVADA DE TACNA**  
## **FACULTAD DE INGENIERÍA**  
### **ESCUELA PROFESIONAL DE INGENIERÍA DE SISTEMAS**  

---

# **ANÁLISIS DEL PERFIL PROFESIONAL DE LOS EGRESADOS DE LA EPIS DE LA UPT EN LINKEDIN**

## **Curso:** Inteligencia de Negocios  
## **Docente:** Mag. Patrick Cuadros Quiroga  

---
                        
### **Integrantes:**  
- **Villanueva Mamani, Royser Alonsso**  
- **Hinojosa Mucho, Christian Dennis**  
- **Chite Quispe, Brian Danilo** 
 
                        
## Objetivo Principal:
Evaluar el perfil profesional de los egresados de la EPIS de la UPT en LinkedIn para identificar sus habilidades, competencias, sectores laborales y trayectorias profesionales, y proponer estrategias para mejorar su posicionamiento en el mercado laboral.
         
## Objetivos Secundarios:
✅ Identificar las especializaciones profesionales más comunes entre los egresados registrados en LinkedIn, determinando los sectores o roles en los que predominan.

✅ Analizar las habilidades y competencias técnicas más utilizadas por los egresados según los perfiles registrados en LinkedIn

✅ Determinar la distribución geográfica de los egresados, clasificándola en local, nacional e internacional, para comprender mejor su presencia y alcance laboral.  

## Costos Terraform:

| Concepto                 | Costo Mensual (PEN) |
|-------------------------|---------------------|
| Trabajo con Terraform    | S/ 95               |
| Terraform Cloud (servicio) | S/ 76               |
| **Total**               | **S/ 171**          |

Nota: Solo si se sobrepasa el limite gratuito, de acuerdo a los recursos que se utilziarán.

## 📦 Inventario de Artefactos del Proyecto

| Código     | Nombre del Documento                                                | Tipo         | Enlace |
|------------|---------------------------------------------------------------------|--------------|--------|
| FD01       | Informe de Factibilidad                                             | PDF / DOCX   | [Ver PDF](""./FD01-EPIS-Informe%de%Factibilidad.pdf"") / [Ver DOCX](./FD01-EPIS-Informe%de%Factibilidad.docx) |
| FD02       | Informe de Visión                                                   | PDF / DOCX   | [Ver PDF](./FD02-EPIS-Informe%Vision.pdf) / [Ver DOCX](./FD02-EPIS-Informe%Vision.docx) |
| FD03       | Informe de Especificación de Requerimientos                        | PDF / DOCX   | [Ver PDF](./FD03-EPIS-Informe%Especificación%Requerimientos.pdf) / [Ver DOCX](./FD03-EPIS-Informe%Especificación%Requerimientos.docx) |
| FD04       | Informe de Arquitectura de Software                                 | PDF / DOCX   | [Ver PDF](./FD04-EPIS-Informe%Arquitectura%de%Software.pdf) / [Ver DOCX](./FD04-EPIS-Informe%Arquitectura%de%Software.docx) |
| FD05       | Informe del Proyecto Final                                          | PDF / DOCX   | [Ver PDF](./FD05-EPIS-Informe%ProyectoFinal.pdf) / [Ver DOCX](./FD05-EPIS-Informe%ProyectoFinal.docx) |
| FD06       | Propuesta del Proyecto                                              | PDF / DOCX   | [Ver PDF](./FD06-EPIS-PropuestaProyecto.pdf) / [Ver DOCX](./FD06-EPIS-PropuestaProyecto.docx) |
| DATOS      | Diccionario de Datos                                                | MD / DOCX    | [Ver MD](./DICCIONARIO%DE%DATOS.md) / [Ver DOCX](./DICCIONARIO%DE%DATOS.docx) |
| PPT        | Presentación del Proyecto                                           | MD           | [Ver](./Presentacion.md) |
| DASHBOARD  | Dashboard Power BI                                                  | PBIX / Enlace | [Ver PBIX](./Dashboard_V2.pbix) / [Ver en línea](https://app.powerbi.com/links/Cg3PgMePDE?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare) |
| ROADMAP    | Cronograma del Proyecto                                             | PNG          | [Ver](./descarga.png) |

### 📂 Base de Datos

| Archivo                 | Descripción                             | Tipo     | Enlace |
|------------------------|-----------------------------------------|----------|--------|
| egresados_upt.bak      | Respaldo completo de base de datos      | BAK      | [Descargar](./bd/egresados_upt.bak) |
| EgresadosUpt.sql       | Script de creación y carga de datos     | SQL      | [Descargar](./bd/EgresadosUpt.sql) |

> 📌 Todos los artefactos están organizados por tipo en carpetas (`media`, `infra`, `bd`, etc.) dentro del repositorio.

![Roadmap](media/bd.png)
![Roadmap](media/despliegue.png)
## RoadMap:

![Roadmap](./descarga.png)

## 🎥 Video de YouTube del Proyecto

Puedes ver la explicación completa del proyecto en el siguiente video:

[![Ver en YouTube](https://img.youtube.com/vi/jgdnzV4mYxc/0.jpg)](https://www.youtube.com/watch?v=jgdnzV4mYxc)

🔗 [https://www.youtube.com/watch?v=jgdnzV4mYxc](https://www.youtube.com/watch?v=jgdnzV4mYxc)

## 📊 Dashboard de LinkedIn - Egresados EPIS UPT

[![Ver en Power BI](https://img.shields.io/badge/Power%20BI-Dashboard-yellow?logo=powerbi)](https://app.powerbi.com/groups/me/reports/1b10890b-62a7-4863-b733-bc3c34796258?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare&bookmarkGuid=584ef72c-89d8-49be-86d4-c0489198b8f7)"
UPT-FAING-EPIS/proyecto-si889-2025-i-u3-chite-floresq-leyva-chambi,proyecto,si889-2025-i-u3-chite-floresq-leyva-chambi,True,3511,False,10,True,True,False,"![./media/media/image1.png](./media/logo-upt.png)

CURSO: PATRONES DE SOFTWARE

Integrantes:

Chambi Cori Jerson Roni (2021072619)

Flores Quispe Jaime Elias (2021070309)

Leyva Sardón Elvis Ronald (2021072614)

Brian Danilo Chite Quispe (2021070015)

# 🚀 Proyecto: Desarrollo de un Sistema de Conversión y Organización de Documentos Técnicos en Markdown con Estructuración Automática y Control de Versiones para los estudiantes en la facultad de Ingeniería de Sistemas

Este proyecto permite la conversión automática de documentos en diversos formatos (Word, PDF, HTML, TXT) al formato **Markdown** y la organización de estos documentos en un sistema estructurado con control de versiones. El proyecto está diseñado para estudiantes y docentes de la Facultad de Ingeniería de Sistemas de la Universidad Privada de Tacna.

## Tecnologías y Herramientas Principales

- **Cosine Similarity**: Integrado para la detección de plagio entre documentos, permitiendo comparar la similitud entre textos de manera eficiente.
- **Deepseek Azure AI Foundry**: Se emplea inteligencia artificial para mejorar el procesamiento y análisis de los documentos, aportando capacidades avanzadas de clasificación y organización automática.
- **FastAPI**: Framework utilizado para la creación de APIs rápidas, eficientes y fáciles de mantener, facilitando la interacción con el sistema y la integración con otros servicios.
- **Control de Versiones**: Gestión y seguimiento de los cambios realizados a los documentos, asegurando integridad y trazabilidad.
- **Terraform**: Para la gestión y despliegue de infraestructura, especialmente útil para entornos en la nube.
- **SQL Server / Azure SQL**: Base de datos centralizada para almacenamiento y consulta eficiente de los documentos y metadatos.

## Diagrama caso de uso 

![./media/media/doc1.png](./media/doc1.png)

## Paquetes de secuencia 
![./media/media/doc2.png](./media/doc2.png)
##  1. Validar formato de archivo
![./media/media/doc3.png](./media/doc3.png)


## Diagrama de arquitectura software
![./media/media/doc4.png](./media/doc4.png)
## Diagrama de arquitectura del sistema (Diagrama de componentes)
![./media/media/doc5.png](./media/doc5.png)
## Vista de Despliegue
Diagrama de infraestructura
![./media/media/doc6.png](./media/doc6.png)
Diagrama de arquitectura
![./media/media/doc7.png](./media/doc7.png)




## Requisitos del Sistema

Antes de instalar y ejecutar el proyecto, asegúrate de tener los siguientes requisitos:

- **Sistema Operativo**: Compatible con Linux, macOS y Windows
- **Python**: Versión 3.8 o superior
- **Dependencias**: Todas las dependencias necesarias se encuentran en el archivo `requirements.txt`
- **Base de Datos**: **SQL Server** (Azure SQL para bases de datos en la nube)
- **Terraform**: Para la gestión de infraestructura (si es necesario)

## Instalación

### 1. Clona el repositorio
```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-i-u1-floresq_chambi_leyva.git
```
2️⃣ Configura el entorno virtual
Para evitar conflictos con otras bibliotecas, es recomendable crear un entorno virtual.
     
```bash
python -m venv venv
```
En Windows:

```bash
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
.\venv\Scripts\Activate.ps1
```

3️⃣ Instala las dependencias
Con el entorno virtual activado, instala las dependencias necesarias:

```bash
pip install -r requirements.txt
```

4️⃣ Inicia la aplicación
Una vez todo esté configurado, ejecuta el servidor de desarrollo:

```bash
python run.py
```"
UPT-FAING-EPIS/proyecto-si784-2025-i-u3-scaeupt,proyecto,si784-2025-i-u3-scaeupt,True,7304,True,29,False,True,False,"# 🎓 SCAE-UPT - Sistema de Control de Acceso Electrónico
Sistema Integral de Control de Acceso Electrónico para la Universidad Privada de Tacna

## 📋 Descripción
SCAE-UPT es un sistema moderno y completo de control de acceso diseñado específicamente para la Universidad Privada de Tacna. El sistema moderniza el proceso de ingreso al campus universitario mediante tecnología QR, verificación facial biométrica y autenticación institucional, proporcionando una solución segura, eficiente y fácil de usar.

### 🎯 Características Principales
- 🔐 **Autenticación Segura**: Login con cuentas institucionales de Google
- 📱 **Códigos QR Dinámicos**: Generación de códigos QR únicos con expiración de 5 minutos
- 👤 **Verificación Facial Biométrica**: Reconocimiento facial con OpenCV
- 🛡️ **Detección Anti-Spoofing**: Prevención de suplantación con fotos o pantallas
- 🖥️ **Aplicación de Escritorio**: Interface para personal de seguridad con escaneo QR y captura facial
- 🌐 **Plataforma Web**: Portal estudiantil para generación de códigos de acceso
- 📊 **Reportes y Auditoría**: Historial completo de ingresos y salidas
- ⚡ **Tiempo Real**: Verificación instantánea de credenciales y rostros

## 🔍 Proceso de Verificación Dual
El sistema implementa un proceso de verificación en dos etapas para máxima seguridad:

### 1️⃣ Escaneo de Código QR
- Lectura del código QR generado por el estudiante
- Validación de vigencia (5 minutos)
- Extracción de datos del usuario

### 2️⃣ Verificación Facial Biométrica
- **Captura en Tiempo Real**: La cámara captura el rostro de la persona en la puerta
- **Comparación Neural**: El sistema compara el rostro capturado con la foto almacenada en la base de datos
- **Detección Anti-Spoofing**: Algoritmos avanzados detectan intentos de suplantación con fotos impresas o pantallas
- **Validación Final**: Solo si ambas verificaciones son exitosas, se registra el acceso

## 🏗️ Arquitectura del Sistema
El proyecto está estructurado en tres componentes principales:

### 🖥️ Aplicación de Escritorio (DesktopApp)
**Tecnologías**: C# .NET Framework 4.7.2, Windows Forms, MySQL, OpenCV

- **Propósito**: Interface para personal de vigilancia
- **Funcionalidades**:
  - Escaneo y validación de códigos QR
  - Captura de imagen facial en tiempo real
  - Verificación de identidad biométrica
  - Registro automático de ingresos/salidas
  - Gestión de visitantes
  - Generación de reportes

### 🌐 Aplicación Web (WebApp)
**Tecnologías**: ASP.NET Core 8.0, Entity Framework, MySQL, Docker

- **Propósito**: Portal para estudiantes y administración
- **Funcionalidades**:
  - Autenticación con Google OAuth
  - Generación de códigos QR personales
  - Historial de accesos
  - API REST para integración
  - JWT para seguridad
## 🚀 Inicio Rápido
### 📱 Para Estudiantes - Plataforma Web
1. Accede al sistema : https://scae-upt-app.azurewebsites.net
2. Inicia sesión con tu cuenta institucional de Google (@virtual.upt.pe)
3. Genera tu código QR con un solo clic
4. Presenta el código en el acceso a la universidad
⏰ Importante : Los códigos QR tienen una validez de 5 minutos por seguridad

### 🖥️ Para Personal de Seguridad - Aplicación de Escritorio
Credenciales de Acceso :

- Usuario : segurid
- Contraseña : 123
Descarga : Enlace de descarga del instalador

## 🛠️ Instalación y Desarrollo
### Prerrequisitos
- .NET 8.0 SDK
- .NET Framework 4.7.2
- MySQL Server 8.0+
- Python 3.9+
- Visual Studio 2022 o VS Code
- Docker (opcional)

### Configuración del Entorno
1. Clona el repositorio:
```bash
git clone https://github.com/UPT-FAING-EPIS/proyecto-si784-2025-i-u3-scaeupt.git
cd proyecto-si784-2025-i-u3-scaeupt
```
2. Configura las variables de entorno :
```
# WebApp/.env
GOOGLE_CLIENT_ID=tu_google_client_id
GOOGLE_CLIENT_SECRET=tu_google_client_secret
JWT_SECRET_KEY=tu_jwt_secret_key
MYSQL_CONNECTION_STRING=tu_connection_string
```
3. Instala dependencias del servicio Python:
```
cd PythonService
pip install -r requirements.txt
```
4. Ejecuta el servicio de verificación facial:
```
python Script_Verificador.py
```
5. Ejecuta la aplicación web :
```
cd WebApp/pyWeb_ScaeUPT
dotnet restore
dotnet run
```
6. Compila la aplicación de escritorio :
```
cd DesktopApp
nuget restore SCAE-UPT.sln
msbuild SCAE-UPT.sln /p:Configuration=Release
```
### 🐳 Usando Docker
```
cd WebApp/pyWeb_ScaeUPT
docker build -t scae-upt-web .
docker run -p 8080:8080 scae-upt-web
```
## 🧪 Testing
El proyecto incluye pruebas automatizadas con diferentes enfoques:

### Pruebas BDD (Behavior Driven Development)
```
cd WebApp/pyWeb_ScaeUPT.Tests
dotnet test
```
### Cobertura de Código
- Cobertura actual : 76.92%
- Reportes : Disponibles en TestResults/coverage.cobertura.xml
### Pruebas de Mutación
Se ejecutan automáticamente en el pipeline de CI/CD para validar la calidad de las pruebas.

## 📊 CI/CD y DevOps
El proyecto incluye pipelines automatizados de GitHub Actions:

- 🔨 Build & Release : Compilación automática de la aplicación de escritorio
- 📋 BDD Reports : Generación de reportes de pruebas de comportamiento
- 📈 Coverage Reports : Reportes de cobertura de código
- 🔒 Security Scans : Análisis de seguridad con Semgrep y Snyk
- ☁️ Terraform : Infraestructura como código para Azure
## 🏛️ Estructura del Proyecto
```
proyecto-si784-2025-i-u2-scae-upt/
├── 📱 DesktopApp/                 # Aplicación de escritorio
│   ├── pyDesktop_ScaeUPT/         # Código fuente principal
│   ├── SCAE-UPT.Installer/        # Instalador Inno Setup
│   └── SCAE-UPT.sln              # Solución Visual Studio
├── 🌐 WebApp/                     # Aplicación web
│   ├── pyWeb_ScaeUPT/            # API y frontend
│   ├── pyWeb_ScaeUPT.Tests/      # Pruebas automatizadas
│   └── ReporteBDD/               # Reportes de pruebas
├── 📚 Documentación/              # Informes técnicos
├── 🔧 .github/workflows/         # Pipelines CI/CD
└── 📄 README.md                  # Este archivo
```
## 🔒 Seguridad
- Autenticación OAuth 2.0 con Google
- JWT Tokens para sesiones seguras
- Códigos QR con expiración (5 minutos)
- Cifrado de datos sensibles
- Auditoría completa de accesos
- Análisis de seguridad automatizado
## 📖 Documentación Técnica
- 📋 Informe de Factibilidad
- 🎯 Documento de Visión
- 📝 Especificación de Requerimientos
- 🏗️ Arquitectura de Software
- 📊 Informe Final del Proyecto
## 🤝 Contribución
¡Tu ayuda es muy valiosa! Puedes contribuir de las siguientes maneras:

### 🐛 Reportar Errores
1. Ve a la sección Issues
2. Crea un nuevo issue describiendo el problema
3. Incluye pasos para reproducir el error
4. Adjunta capturas de pantalla si es necesario
### ✨ Sugerir Mejoras
1. Abre una Discussion
2. Describe tu idea o sugerencia
3. Explica cómo beneficiaría al proyecto
### 🔧 Contribuir Código
1. Fork el repositorio
2. Crea una rama para tu feature ( git checkout -b feature/nueva-funcionalidad )
3. Commit tus cambios ( git commit -m 'Añadir nueva funcionalidad' )
4. Push a la rama ( git push origin feature/nueva-funcionalidad )
5. Abre un Pull Request
## 👥 Equipo de Desarrollo
- Antayhua Mamani, Renzo Antonio (2022074258)
- Colque Ponce, Sergio Alberto (2022073503)
## 👨‍🏫 Información Académica
Docente : Mag. Patrick Cuadros Quiroga 
Curso : Calidad y Pruebas de Software 
Universidad : Universidad Privada de Tacna 
Facultad : Ingeniería - Escuela Profesional de Ingeniería de Sistemas"
UPT-FAING-EPIS/proyecto-si784-2025-i-u3-grupo_markdown2video,proyecto,si784-2025-i-u3-grupo_markdown2video,True,4271,False,5,True,False,False,"](https://classroom.github.com/a/VnqqyQD8)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19891538)
# Convertidor Automático de Markdown a Video Interactivo - Markdown2Video

## 1. Problemática  
En la actualidad, la creación de contenido audiovisual, especialmente en forma de videos educativos, promocionales o de divulgación, representa un desafío significativo para muchas personas y organizaciones. La producción de videos de calidad requiere conocimientos en edición, herramientas especializadas y tiempo considerable para desarrollar contenido atractivo.  

Las herramientas tradicionales de edición de video, como **Adobe Premiere, Final Cut Pro o DaVinci Resolve**, ofrecen un alto grado de personalización, pero requieren una curva de aprendizaje elevada y demanda de recursos computacionales considerables. Esto limita su accesibilidad a personas que no tienen experiencia en edición de video o que necesitan generar contenido de forma rápida y eficiente sin dedicar largas horas a la edición manual.  

Por otro lado, **Markdown** se ha convertido en un estándar ampliamente utilizado para la escritura estructurada de contenido en múltiples ámbitos, como documentación técnica, blogs y presentaciones. Sin embargo, actualmente no existe una solución accesible y automatizada que permita convertir estos documentos en videos interactivos sin necesidad de intervención manual.  

Este vacío en el mercado crea una barrera para creadores de contenido, docentes, empresas y profesionales que buscan transformar documentos en videos sin enfrentarse a procesos complicados de edición. En muchos casos, estas personas terminan utilizando herramientas de presentación como **PowerPoint o Google Slides con grabaciones de pantalla**, lo que puede ser un proceso tedioso y con limitaciones en cuanto a personalización y calidad.  

---

## 2. Objetivo General  
Desarrollar un sistema automatizado denominado **Markdown2Video**, capaz de convertir presentaciones escritas en formato **Markdown con Marp** en videos interactivos de manera eficiente y sin intervención manual, optimizando la generación de contenido audiovisual para diversas aplicaciones, como educación, divulgación, marketing y documentación técnica.  

---

## 3. Objetivos Específicos  
1. **Implementar un editor con soporte para Marp** que permita a los usuarios escribir sus presentaciones en Markdown con previsualización en tiempo real.  
2. **Desarrollar un módulo de conversión automática** que transforme las presentaciones en videos con transiciones predefinidas.  
3. **Optimizar el rendimiento del sistema** mediante el uso de herramientas como **FFmpeg** para la renderización eficiente de videos en formatos compatibles (MP4, WebM, AVI).  
4. **Permitir la personalización de estilos y duración de diapositivas**, ofreciendo opciones para cambiar, velocidad de presentación y efectos visuales.  
5. **Evaluar la usabilidad y accesibilidad del sistema** a través de pruebas con usuarios finales, validando su facilidad de uso y efectividad en la generación de contenido audiovisual.  

---

## 4. Justificación  
La transformación digital ha incrementado la demanda de contenido audiovisual accesible y de rápida producción. En este contexto, el desarrollo de **Markdown2Video** responde a la necesidad de **automatizar la generación de videos a partir de presentaciones Markdown**, permitiendo a usuarios sin conocimientos en edición de video convertir su contenido en material visual interactivo sin esfuerzo adicional.
### Beneficios clave:  
✅ **Automatización del proceso**: Reduce el tiempo y esfuerzo necesario para convertir presentaciones en videos.  
✅ **Accesibilidad**: Permite a cualquier usuario, sin conocimientos de edición, generar contenido visual.  
✅ **Eficiencia y optimización**: Usa tecnologías como **FFmpeg** para una conversión rápida y eficiente.  
✅ **Aplicación en múltiples sectores**: Educación, marketing digital, documentación técnica y divulgación de información.  
✅ **Innovación**: No existe actualmente una herramienta que realice esta conversión de forma completamente automatizada."
UPT-FAING-EPIS/proyecto-si784-2025-i-u3-datafiller,proyecto,si784-2025-i-u3-datafiller,True,2283,False,1,True,False,False,"](https://classroom.github.com/a/VnqqyQD8)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=19891730)
# DataFiller
**DataFiller** es una herramienta innovadora que facilita la generación de datos sintéticos realistas para pruebas y simulaciones. Su principal objetivo es ayudar a desarrolladores, testers y profesionales de bases de datos a obtener registros automáticos de alta calidad, ahorrando tiempo y garantizando la efectividad en las pruebas. Compatible con bases de datos SQL y NoSQL, DataFiller se adapta a diversas necesidades de generación de datos, ofreciendo análisis inteligente y múltiples formatos de exportación.

## Funcionalidades Principales
- **Generación Rápida de Registros:** Permite generar registros de manera instantánea, optimizando el tiempo de prueba y desarrollo al automatizar la creación de datos.
- **Datos Realistas:** Los datos generados simulan información real, lo que permite obtener resultados más precisos y representativos durante las pruebas.
- **Compatibilidad Universal:** Funciona perfectamente con bases de datos SQL y NoSQL, lo que garantiza su uso en una amplia variedad de proyectos y arquitecturas.
- **Análisis Inteligente de Estructuras:** DataFiller detecta automáticamente la estructura de las tablas, facilitando la generación de registros adaptados a las necesidades específicas de cada base de datos.
- **Exportación en Múltiples Formatos:** Ofrece diversas opciones para exportar los datos generados, incluyendo SQL y JSON, según las necesidades del proyecto.
  
- **Consultas Ilimitadas (Plan Premium):** Con el Plan Premium, se eliminan las restricciones en las consultas diarias, brindando mayor flexibilidad y rendimiento.
  
- **Datos Personalizados por Industria (Plan Premium):** DataFiller ofrece la opción de generar datos adaptados a diferentes sectores, como salud, finanzas, y comercio electrónico, garantizando la relevancia de los registros generados.
  
- **Soporte Prioritario (Plan Premium):** Los usuarios Premium tienen acceso a soporte prioritario, asegurando respuestas rápidas y soluciones efectivas para cualquier duda o inconveniente."
UPT-FAING-EPIS/proyecto-si784-2025-i-u3-docugen-ai,proyecto,si784-2025-i-u3-docugen-ai,True,9496,True,25,False,True,True,"# documentos-ia

# DocuGen AI - Analizador de Código con Inteligencia Artificial

## 📋 Entregables

| Documento/Entregable | Estado |
|---------------------|--------|
| FD01 - Informe de Factibilidad | ✅ LISTO |
| FD02 - Informe de Visión de Producto | ✅ LISTO |
| FD03 - Informe de Especificación de Requerimientos | ✅ LISTO |
| FD04 - Informe de Arquitectura | ✅ LISTO |
| FD05 - Informe de Proyecto | ✅ LISTO |
| Diccionario de Datos | ✅ LISTO |
| Video de presentación del aplicativo funcionando | ✅ LISTO |
| Enlace a la aplicación funcionando | ✅ LISTO |
| GitHub Page con reportes de pruebas | ✅ LISTO |

### 📎 Enlaces Importantes

- **Video de Presentación**: [Ver Video](https://drive.google.com/file/d/1rvuEbi5GNu5kFkgLIZNHVkrRln3y_RTw/view?usp=sharing)

- **GitHub Pages - Reportes**: [https://aakhtar004.github.io/doc_ai/](https://aakhtar004.github.io/doc_ai/)

- **GitHub Pages - Documentacion**: [FALTA](FALTA)

### 📋 Pendientes

- **Estándar de Programación**: Documento con las convenciones y estándares utilizados
- **GitHub Page con Reportes de Pruebas**: Página que contenga todos los reportes de:
  - Sonar
  - Semgrep
  - Snyk
  - Pruebas Unitarias
  - Pruebas de Integración
  - Pruebas de Mutación
  - Pruebas de Interfaz
  - Pruebas BDD
  
  *Nota: Estos reportes deben estar incluidos en el FD04*

## 📋 Descripción
DocuGen AI es una aplicación web que utiliza inteligencia artificial (Google Gemini) para analizar código fuente y generar documentación automática. La aplicación permite a los usuarios subir archivos de código, proyectos completos o documentos PDF personalizados para obtener análisis detallados y documentación SRS (Especificación de Requisitos de Software).

## ✨ Características Principales
- Análisis de Código Individual : Analiza archivos de código individuales con estadísticas detalladas
- Documentación SRS : Genera documentación completa de Especificación de Requisitos de Software
- Documento Personalizado : Completa documentos PDF personalizados basándose en el análisis del código
- Diagramas UML y Mermaid : Genera diagramas de arquitectura y flujo
- Múltiples Lenguajes : Soporte para diversos lenguajes de programación
- Sistema de Autenticación : Registro y login de usuarios
- Historial de Consultas : Guarda y gestiona el historial de análisis
- Exportación : Descarga resultados en formato TXT, PDF y Markdown
- Compartir Contenido : Funcionalidad para compartir análisis y conversaciones
## 🛠️ Tecnologías Utilizadas
### Backend
- Node.js con Express.js
- Google Gemini AI para análisis de código
- Supabase como base de datos PostgreSQL
- Multer para manejo de archivos
- PDF-Parse para procesamiento de PDFs
- Express-Session para manejo de sesiones
### Frontend
- HTML5, CSS3, JavaScript
- Bootstrap 5 para diseño responsivo
- Font Awesome para iconos
### Dependencias Principales
- @google/generative-ai : Integración con Gemini AI
- @supabase/supabase-js : Cliente de Supabase
- express : Framework web
- multer : Manejo de archivos
- pdf-parse : Procesamiento de PDFs
- dotenv : Variables de entorno
## 📦 Instalación Local
### Prerrequisitos
1. Node.js (versión 16 o superior)
   
   - Descargar desde: https://nodejs.org/
   - Verificar instalación: node --version
2. npm (incluido con Node.js)
   
   - Verificar instalación: npm --version
3. Cuenta de Google AI Studio
   
   - Crear cuenta en: https://makersuite.google.com/
   - Obtener API Keys de Gemini
4. Cuenta de Supabase
   
   - Crear cuenta en: https://supabase.com/
   - Crear un nuevo proyecto
   - Obtener URL y API Key del proyecto
### Pasos de Instalación 1. Clonar o Descargar el Proyecto
```
# Si tienes git instalado
git clone <url-del-repositorio>
cd documentos-ia

# O descargar y extraer el ZIP del 
proyecto
``` 2. Instalar Dependencias
```
npm install
``` 3. Configurar Variables de Entorno
Crear un archivo .env en la raíz del proyecto con el siguiente contenido:

```
# Puerto del servidor (opcional, por 
defecto 3000)
PORT=3000

# Clave secreta para sesiones (cambiar 
por una clave segura)
SESSION_SECRET=tu-clave-secreta-muy-segu
ra-aqui

# Configuración de Supabase
SUPABASE_URL=https://tu-proyecto.
supabase.co
SUPABASE_KEY=tu-supabase-anon-key

# API Keys de Google Gemini (puedes 
usar hasta 4 keys para mayor 
disponibilidad)
API_KEY_1=tu-primera-api-key-de-gemini
API_KEY_2=tu-segunda-api-key-de-gemini
API_KEY_3=tu-tercera-api-key-de-gemini
API_KEY_4=tu-cuarta-api-key-de-gemini
``` 4. Configurar Base de Datos en Supabase
1. Acceder al Dashboard de Supabase
   
   - Ir a https://supabase.com/dashboard
   - Seleccionar tu proyecto
2. Ejecutar el Script de Base de Datos
   
   - Ir a la sección ""SQL Editor""
   - Copiar y ejecutar el contenido del archivo BD.txt que está en la raíz del proyecto
   - Este script creará todas las tablas necesarias:
     - usuarios
     - proyectos_codigo
     - documentos_generados
     - conversaciones
     - mensajes_conversacion
     - contenido_compartido 5. Obtener API Keys de Google Gemini
1. Acceder a Google AI Studio
   
   - Ir a https://makersuite.google.com/
   - Iniciar sesión con tu cuenta de Google
2. Crear API Keys
   
   - Ir a ""Get API Key""
   - Crear una nueva API Key
   - Copiar la clave generada
   - Repetir el proceso para crear múltiples keys (recomendado para mayor disponibilidad) 6. Iniciar la Aplicación
```
# Modo desarrollo
npm run dev

# O modo producción
npm start
``` 7. Acceder a la Aplicación
- Aplicación principal : http://localhost:3000
- Página de login : http://localhost:3000/login
- Health check : http://localhost:3000/health
## 🚀 Uso de la Aplicación
### Primer Uso
1. Registrarse
   
   - Ir a http://localhost:3000/login
   - Hacer clic en ""Registrarse""
   - Completar el formulario con email, contraseña y nombre
   - Iniciar sesión con las credenciales creadas
2. Analizar Código
   
   - Análisis Individual : Subir un archivo de código para análisis detallado
   - Documentación SRS : Subir múltiples archivos o un proyecto completo
   - Documento Personalizado : Subir un PDF personalizado junto con código para completarlo
### Funcionalidades Disponibles
- Análisis de Código : Obtén análisis detallado de estructura, funcionalidad y calidad
- Generación de Diagramas : Crea diagramas UML y Mermaid automáticamente
- Exportación : Descarga resultados en múltiples formatos
- Historial : Accede a análisis anteriores
- Compartir : Comparte análisis con otros usuarios
## 🔧 Configuración Avanzada
### Variables de Entorno Opcionales
```
# Configuración de archivos
MAX_FILE_SIZE=50mb

# Configuración de sesiones
SESSION_MAX_AGE=86400000

# Configuración de logging
LOG_LEVEL=info
```
### Estructura del Proyecto
```
documentos-ia/
├── config/
│   └── supabase.js          # 
Configuración de Supabase
├── public/
│   ├── css/
│   │   └── styles.css       # Estilos 
CSS
│   ├── js/
│   │   ├── main.js          # 
JavaScript principal
│   │   ├── auth.js          # 
Funciones de autenticación
│   │   └── compartido.js    # 
Funciones de compartir
│   ├── index.html           # Página 
principal
│   ├── login.html           # Página 
de login
│   └── compartido.html      # Página 
de contenido compartido
├── routes/
│   ├── auth.js              # Rutas de 
autenticación
│   ├── proyectos.js         # Rutas de 
análisis de código
│   ├── conversaciones.js    # Rutas de 
conversaciones
│   └── compartir.js         # Rutas de 
compartir contenido
├── services/
│   ├── db.js                # 
Servicios de base de datos
│   └── gemini.js            # 
Servicios de Gemini AI
├── .env                     # 
Variables de entorno (crear)
├── .gitignore              # Archivos 
ignorados por Git
├── BD.txt                  # Script de 
base de datos
├── package.json            # 
Dependencias del proyecto
├── server.cjs              # Servidor 
principal
└── README.md               # Este 
archivo
```
## 🐛 Solución de Problemas
### Errores Comunes
1. Error de conexión a Supabase
   
   - Verificar que SUPABASE_URL y SUPABASE_KEY estén correctos
   - Verificar que el proyecto de Supabase esté activo
2. Error de API Key de Gemini
   
   - Verificar que las API Keys estén correctas
   - Verificar que las API Keys tengan cuota disponible
3. Error al subir archivos
   
   - Verificar que el archivo no exceda 50MB
   - Verificar que el formato de archivo sea compatible
4. Error de sesión
   
   - Verificar que SESSION_SECRET esté configurado
   - Limpiar cookies del navegador
### Logs del Sistema
La aplicación genera logs detallados en la consola que ayudan a identificar problemas:

```
# Iniciar con logs detallados
DEBUG=* npm start
```
## 📝 Scripts Disponibles
```
# Iniciar en modo desarrollo
npm run dev

# Iniciar en modo producción
npm start

# Ejecutar tests (si están configurados)
npm test

# Ejecutar tests de UI con Playwright
npm run test:ui
```
## 🤝 Contribución
Para contribuir al proyecto:

1. Fork el repositorio
2. Crear una rama para tu feature ( git checkout -b feature/nueva-funcionalidad )
3. Commit tus cambios ( git commit -am 'Agregar nueva funcionalidad' )
4. Push a la rama ( git push origin feature/nueva-funcionalidad )
5. Crear un Pull Request
## 📄 Licencia
Este proyecto está bajo la Licencia ISC.

## 🆘 Soporte
Si encuentras problemas o tienes preguntas:

1. Revisa la sección de solución de problemas
2. Verifica que todas las variables de entorno estén configuradas correctamente
3. Consulta los logs del servidor para más detalles sobre errores
¡Disfruta analizando tu código con DocuGen AI! 🚀"
UPT-FAING-EPIS/proyecto-si885-2025-i-u3-paja_hernadnez,proyecto,si885-2025-i-u3-paja_hernadnez,True,6492,False,16,True,True,True,"[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=18703737)
# Proyecto: Análisis del Uso de Herramientas Tecnológicas en los Proyectos de Estudiantes de Sistemas UPT

## Universidad Privada de Tacna
**Facultad de Ingeniería**  
**Escuela Profesional de Ingeniería de Sistemas**  

### Curso: Inteligencia de Negocios

**Docente:** Mag. Patrick Cuadros Quiroga

### Integrantes:
- **Hernandez Cruz, Angel Gadiel** (2021070017)  
- **Paja de la Cruz, Piero Alexander** (2020067576)  
### RoadMap:
![./media/media/Roadmap.png](./media/Roadmap.png)


## Funcionalidades Principales

-   **Automatización Completa del Proceso ETL**: El pipeline se ejecuta de forma automática, sin intervención manual, en cada cambio del código o de forma programada.
-   **Aprovisionamiento Dinámico de Infraestructura**: Utiliza Terraform para crear y configurar todos los recursos necesarios en Azure desde cero en cada ejecución, garantizando un entorno limpio y reproducible.
-   **Extracción de Datos de GitHub**: Se conecta a la API de GitHub para recopilar una amplia gama de datos: metadatos del repositorio, commits, issues, colaboradores y lenguajes de programación.
-   **Análisis de Tecnologías**: Analiza el contenido de los archivos `README.md` para detectar el uso de frameworks, librerías, bases de datos y herramientas de CI/CD.
-   **Almacenamiento Estructurado**: Carga los datos procesados en una base de datos relacional en Azure SQL, listos para ser consumidos por herramientas de BI.

## Requerimientos Funcionales

| ID | Descripción | Prioridad |
|----|-------------|-----------|
| RF01 | Extraer metadatos de repositorios Git | Crítica |
| RF02 | Clasificar lenguajes por proyecto | Alta |
| RF03 | Generar reportes de frecuencia de tecnologías | Media |

## Diagramas en Mermaid

### Diagrama de Arquitectura

```mermaid
graph TD
    A[Usuario/Desarrollador] -- Push a 'main' --> B{GitHub};
    C[Scheduler] -- Lunes 3 AM UTC --> B;
    B -- Activa --> D[Pipeline en GitHub Actions];
    D -- 1. Job: terraform-deploy --> E{Terraform};
    E -- Aprovisiona --> F[Azure Resource Group];
    F --> G[Azure SQL Server];
    G --> H[Azure SQL Database];
    H -- Credenciales --> D;
    D -- 2. Job: run-etl --> I[Script Python];
    I -- Lee schema.sql --> H;
    I -- Llama a --> J[GitHub API];
    J -- Devuelve datos --> I;
    I -- Procesa con Pandas --> I;
    I -- Carga datos --> H;
    K[Analista de BI] -- Consume datos --> L[Power BI];
    H -- Provee datos --> L;
```

### Diagrama de Casos de Uso

```mermaid
flowchart TD
    subgraph Sistema
        UC1[Consultar estadísticas]
        UC2[Exportar reportes]
        UC3[Configurar sistema]
        UC4[Autenticarse]
    end

    Estudiante --> UC1
    Administrador --> UC2
    Administrador --> UC3
    UC1 -.-> UC4
    UC2 -.-> UC4
    UC3 -.-> UC4

    style Sistema fill:#f9f9f9,stroke:#333
    linkStyle 0,1,2 stroke:#0074D9,stroke-width:2px
    linkStyle 3,4,5 stroke:#FF851B,stroke-width:2px
```

### Diagrama de Secuencia

#### RF01 - Extracción de metadatos
```mermaid
sequenceDiagram
    participant Sistema
    participant GitHubAPI
    participant BD
    
    Sistema->>GitHubAPI: GET /repos (con token)
    GitHubAPI-->>Sistema: JSON con metadatos
    Sistema->>BD: INSERT metadatos_proyecto
    BD-->>Sistema: Confirmación
    Sistema->>Sistema: Log de auditoría
```
#### RF02 - Clasificación de lenguajes 
```mermaid
sequenceDiagram
    participant Sistema
    participant Repositorio
    participant Clasificador
    
    Sistema->>Repositorio: Obtener archivos clave
    Repositorio-->>Sistema: Archivos .gitignore, manifestos
    Sistema->>Clasificador: Analizar contenido
    Clasificador-->>Sistema: Lenguaje principal + tecnologías
    Sistema->>BD: UPDATE proyecto SET tecnologías
```
#### RF03 - Generación de reportes
```mermaid
sequenceDiagram
    actor Usuario
    participant Frontend
    participant Backend
    participant BD
    
    Usuario->>Frontend: Solicitar reporte (rango fechas)
    Frontend->>Backend: GET /reportes?fechaInicio=X&fechaFin=Y
    Backend->>BD: Query agregada tecnologías
    BD-->>Backend: Dataset estadístico
    Backend->>Backend: Generar visualizaciones
    Backend-->>Frontend: JSON con datos + gráficos
    Frontend->>Usuario: Mostrar dashboard interactivo
```

## Reglas de Negocio

-   **Activación del Pipeline**: El pipeline se ejecuta con cada `push` a la rama `main` y de forma programada todos los lunes a las 3:00 AM UTC.
-   **Infraestructura Efímera**: La infraestructura en Azure (servidor y base de datos) se crea desde cero en cada ejecución del pipeline y no se destruye automáticamente. Esto garantiza un entorno limpio para cada carga, pero requiere una limpieza manual posterior si se desea controlar costos.
-   **Alcance del Análisis**: El script está configurado para analizar los primeros 50 repositorios (`scrap_pequeno.py`).
-   **Identificación de Cursos**: La asignación de un proyecto a un curso se basa en la detección de patrones como `si...` y `u...` en el nombre del repositorio. Si no se encuentra el patrón, el curso no se asigna.
-   **Detección de Tecnologías**: La identificación de frameworks, librerías, bases de datos y herramientas de CI/CD depende exclusivamente de su mención explícita en el archivo `README.md` del repositorio.

## Recomendaciones

-   **Estandarizar Nomenclatura**: Fomentar el uso de una convención de nombres estandarizada para los repositorios para mejorar la precisión en la identificación de cursos y unidades.
-   **Documentación en READMEs**: Incentivar a los estudiantes a documentar las tecnologías utilizadas en el `README.md` de sus proyectos para enriquecer los datos recopilados.
-   **Optimización de Costos**: Considerar añadir un paso de `terraform destroy` al final del pipeline o un pipeline separado para la limpieza de recursos en Azure y así evitar costos inesperados.
-   **Seguridad de Credenciales**: Las credenciales `AZURE_CREDENTIALS` y `GITHUB_TOKEN` deben ser gestionadas como secretos en GitHub y tener los permisos mínimos necesarios para operar.

## Enlace de Dashboard

*Aquí se puede colocar el enlace público al dashboard de Power BI una vez que esté disponible.*

[\[Enlace al Dashboard de Power BI\]](https://app.powerbi.com/links/eSOGnu0Qt-?ctid=b6b466ee-468d-4011-b9fc-fbdcf82ac90a&pbi_source=linkShare)"
UPT-FAING-EPIS/proyecto-si784-2025-i-u3-estudiantes-de-syntax,proyecto,si784-2025-i-u3-estudiantes-de-syntax,True,5230,True,25,True,True,True,"# 🎓 Sistema de Mentoría Académica – AMS

**AMS-UPT** es una plataforma web integral para la gestión de mentorías universitarias, creada para mejorar el rendimiento académico, automatizar procesos y fomentar el acompañamiento personalizado.

---

## 📘 Descripción General

Este sistema fue desarrollado por estudiantes de Ingeniería de Sistemas de la **Universidad Privada de Tacna**, con el propósito de:

- Reducir la deserción universitaria.
- Aumentar el rendimiento académico.
- Optimizar la carga docente.
- Conectar estudiantes con mentores de forma efectiva.

Incluye módulos para la gestión de usuarios, programación de clases, registro de asistencia, evaluación y generación de reportes académicos.

---

## 🧪 Tecnologías Utilizadas

| Categoría       | Tecnologías                           |
|------------------|----------------------------------------|
| Lenguaje         | PHP 8                                  |
| Base de Datos    | MySQL 8 (HeidiSQL)                     |
| Frontend         | HTML5, CSS3, Bootstrap 5               |
| Backend          | Apache + PHP-FPM                       |
| Local Dev        | XAMPP                                  |
| DevOps           | Git, GitHub, Terraform, Infracost      |
| Gestión Ágil     | Jira (Scrum)                           |
| UI/UX            | Figma, Balsamiq                        |

---

## ⚙️ Instalación y Ejecución Local
- Clona el repositorio:
   ```bash
   git clone https://github.com/usuario/proyecto-ams.git
    ```
- Importa la base de datos desde el archivo `ams_db.sql` a tu servidor MySQL.
- Configura el archivo `config/Conexion.php` con tus credenciales locales.
- Asegúrate de tener habilitadas las extensiones `mysqli` y `openssl` en tu `php.ini`.
- Copia el proyecto en htdocs y abre en navegador:

   http://localhost/web_asm/public/index.php

---

## 🚀 Funcionalidades Principales

### 🔐 Login y Roles
- Acceso diferenciado para administrador, estudiante y mentor.

### 📅 Gestión Académica
- Registro y programación de clases.
- Asignación de aulas, horarios y ciclos.
- Emparejamiento mentor–estudiante.

### 🎯 Seguimiento y Evaluación
- Registro de asistencia.
- Calificaciones y observaciones.
- Reportes de rendimiento.

### 📊 Administración y Reportes
- Panel de control.
- Visualización de métricas.
- Notificaciones y alertas internas.

### Integración con Discord y Google Meet
- Acceso controlado a canal privado de Discord del sistema.
- Gestión de roles y códigos de acceso automáticos para clases en Discord.
- Selección del modo de reunión por parte del mentor (Discord y/o Google Meet).
- Generación automática de enlaces de reunión según plataforma seleccionada.

### Dashboard General
- Panel centralizado con:
- Actividad reciente.
- Clases programadas.
- Estadísticas de asistencia y desempeño.
- Alertas y notificaciones internas.

---

## 📷 Capturas de Pantalla

### 🔑 Pantalla de Login
![Login](ruta/a/captura_login.png)

### 🏠 Dashboard del Mentor
![Dashboard Mentor](ruta/a/captura_dashboard_mentor.png)

### 📚 Vista de Clases Asignadas
![Clases Asignadas](ruta/a/captura_clases_asignadas.png)

### 📝 Calificación de Estudiantes
![Calificaciones](ruta/a/captura_calificaciones.png)

### 📈 Vista de Reportes de Clases
![Reportes](ruta/a/captura_reportes.png)

### 👨‍🎓 Vista del Estudiante – Clases Asignadas
![Clases Estudiante](ruta/a/captura_estudiante_clases.png)

### 📆 Programación de Mentorías
![Programación](ruta/a/captura_programacion.png)

---

## 👥 Autores

- 👨‍💻 Gregory Brandon Huanca Merma – Full Stack Developer  
- 👨‍💻 Joan Cristian Medina Quispe – Backend Developer  
- 🎨 Rodrigo Samael Adonai Lira Álvarez – UI/UX Specialist  

---

## 📜 Licencia

Proyecto académico desarrollado como parte del curso  
**Calidad y Pruebas de Software – Universidad Privada de Tacna.**  
**Uso exclusivo con fines educativos.**

---

## 🚀 Terraform: Automatización de Infraestructura

Este proyecto utiliza Terraform para desplegar una instancia EC2 en AWS como parte del sistema de mentoría académica.

### 📁 Estructura:
- `infra/main.tf`: Define la instancia EC2.
- `infra/variables.tf`: Variables sensibles (AWS).
- `terraform_apply.yml`: Workflow automático.

### 🔐 Seguridad
Las claves de acceso a AWS se manejan mediante GitHub Secrets.

## 🧪 Reportes de Cobertura y Análisis Estático

Este sistema cuenta con pruebas unitarias y generación de reportes de cobertura y análisis estático:

- ✅ Generación automática de reportes HTML y XML con PHPUnit.
- ✅ Más del 70% de cobertura alcanzada.
- ✅ Publicación en GitHub Pages (`docs/coverage`).
- ✅ Integración con SonarQube y Semgrep para análisis estático.

📁 Ruta: `/docs/coverage/index.html`  
🔗 [Ver cobertura online](https://tuusuario.github.io/PROYECTO-SI784-2025-I-U2-SYNTAX/coverage/)

## 🛣️ Roadmap del Proyecto

- ✅ Registro y autenticación de usuarios
- ✅ Gestión de clases y asignación de mentorías
- ✅ Evaluación y seguimiento académico
- ✅ Integración con Discord y Google Meet
- ✅ Dashboard centralizado
- 🔄 Implementación de análisis predictivo *(en desarrollo)*
- 🔄 Versión móvil multiplataforma *(planeado)*
- 🔄 Integración con sistemas académicos UPT *(planeado)*

---

Desarrollado con ❤️ por estudiantes de Ingeniería de Sistemas – UPT"
UPT-FAING-EPIS/si784_2025-ii-proyecto_si784_2025-ii-u1-proyecto-formatos-01,si784_2025,ii-proyecto_si784_2025-ii-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si784-2025-ii-u1-grupo-acc,proyecto,si784-2025-ii-u1-grupo-acc,True,3263,False,0,True,False,False,"](https://classroom.github.com/a/MY42XFMk)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20055762)
# proyecto-formatos-01

**Planteamiento del Problema**
En el contexto académico de un estudiante de Ingeniería de Sistemas, la fase de planificación de un proyecto de software a menudo es ineficiente. Los estudiantes suelen anotar ideas, requisitos y pasos en diferentes lugares (cuadernos, notas en el celular, documentos de texto) de forma desorganizada. Esta falta de estructura lleva a problemas comunes como:

- Olvidar pasos críticos del desarrollo.

- Realizar tareas en un orden incorrecto, generando ineficiencias o retrabajo.

- Dificultad para visualizar el panorama completo del proyecto, lo que complica la gestión del tiempo y la coordinación en equipo.

La falta de una herramienta sencilla que ayude a organizar estas ideas en un plan de acción coherente y visualmente claro es un obstáculo significativo. Esto afecta directamente la calidad del proceso de desarrollo de software, un tema central en este curso.


**Nombre del Proyecto: GraphFlow 📈**
Objetivos del Proyecto (Realistas y Centrados en la Calidad) ✅
El proyecto GraphFlow busca abordar el problema de la desorganización de ideas en proyectos estudiantiles, centrándose en la calidad y la correcta ejecución del proceso de desarrollo.

Objetivo General:
Desarrollar una herramienta sencilla que tome apuntes de texto sobre un proyecto de software y genere un grafo dirigido que muestre el flujo de trabajo más lógico y eficiente. La herramienta se enfocará en la validación de la calidad del proceso de planificación a través de un diseño intuitivo y pruebas robustas.

Objetivos Específicos:
- Procesamiento de Texto:

Crear un algoritmo simple basado en reglas que analice el texto de los apuntes. Este algoritmo identificará palabras clave y frases (crear tablas, diseño, Java, documentación SRS) para reconocer tareas y sus posibles dependencias, sin necesidad de usar inteligencia artificial compleja.

- Generación de Gráficos:

Implementar un motor que genere un grafo visualmente claro. Este grafo usará colores (ej. verde para tareas iniciales sin dependencias, rojo para tareas que dependen de otras) y formas para comunicar la información de manera intuitiva, sin ser un diagrama de Gantt complejo.

- Enfoque en la Calidad y las Pruebas:

Asegurar que el software sea confiable y preciso. Este proyecto servirá como un caso práctico para aplicar los conceptos del curso, como:

Pruebas de Unidad: Para verificar que el algoritmo de análisis de texto y la lógica de generación del grafo funcionan correctamente.

Pruebas de Integración: Para asegurar que los diferentes módulos del software se comunican sin errores.

Pruebas de Usabilidad: Para garantizar que el grafo generado es fácil de interpretar para cualquier estudiante.

- Desarrollo de una Interfaz Sencilla:

Crear una interfaz de usuario minimalista y funcional donde el estudiante pueda pegar sus apuntes y obtener el gráfico de manera instantánea. Esto priorizará la utilidad sobre funcionalidades complejas y fuera del alcance del proyecto."
UPT-FAING-EPIS/si885_2025-ii-proyecto_si885_2025-ii-u1-proyecto-formatos-01,si885_2025,ii-proyecto_si885_2025-ii-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/si889_2025-ii-proyecto_si889_2025-ii-u1-proyecto-formatos-01,si889_2025,ii-proyecto_si889_2025-ii-u1-proyecto-formatos-01,True,22,True,0,False,False,False,# proyecto-formatos-01
UPT-FAING-EPIS/proyecto-si889-2025-ii-u1-cabrera_melendez,proyecto,si889-2025-ii-u1-cabrera_melendez,True,2362,False,9,True,True,False,"](https://classroom.github.com/a/0SqZJ8VW)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20079443)
# proyecto-formatos-01

## Plataforma Móvil de Exámenes de Simulacro de Exámenes de Certificación de Inglés “Simulapp”


Integrantes:

***Cabrera Catari, Camila Fernanda           (2021069824)***

***Melendez Huarachi, Gabriel Fari            (2021070311)***

### Descripción
Simulapp es una aplicación desarrollada en Flutter que permite simular desarrollo de examenes de certificación en inglés.  
El proyecto está diseñado para funcionar en Android, aprovechando la portabilidad de Flutter.

### Características principales
- Registro y autenticación de usuarios usando Firebase.
- Integración con Google Maps para funcionalidades de geolocalización.
- Soporte multiplataforma: Android.
- Gestión de datos en tiempo real con Firestore.


### Tecnologías utilizadas
- Flutter (v3.35.1)  
- Dart (v3.9.0)  
- Firebase: Authentication, Firestore, etc.  
- Google Maps Flutter  
- GitHub Actions para CI/CD  

### Instalación y ejecución

**Pre-requisitos:**
- Flutter instalado: [Flutter Docs](https://flutter.dev/docs/get-started/install)
- Android Studio o VS Code
- Java JDK 17 (para compilación Android)

**Pasos:**
1. Clonar el repositorio:
   ```bash
   git clone https://github.com/UPT-FAING-EPIS/proyecto-si889-2025-ii-u1-cabrera_melendez.git

2. Instalar dependencias
   ```bash
   flutter pub get

3. Ejecutar la app en Android
   ```bash
   flutter run

4. Ejecutar la app en Web
   ```bash
   flutter build web

### Estructura del proyecto

```
simulapp/
├─ android/           # Proyecto Android
├─ ios/               # Proyecto iOS (si aplica)
├─ lib/               # Código fuente Flutter
│  ├─ main.dart       # Punto de entrada
│  └─ services/       # Servicios como Google Auth
├─ pubspec.yaml       # Configuración de dependencias
└─ README.md          # Documentación del proyecto

```
### Roadmap
- Integración con notificaciones push
- Mejoras en la interfaz web
- Agregar más tipos de preguntas


### Video

📎 **Video Explicativo del Proyecto (YouTube)**  
🔗 *(Se añadirá una vez grabado)*  

## Documentación

- Documentos en md [md/](md/)
- Documentos en PDF [pdf/](pdf/)"
UPT-FAING-EPIS/proyecto-si885-2025-ii-u1-animalsight-dashboard,proyecto,si885-2025-ii-u1-animalsight-dashboard,True,1550,False,6,True,True,False,"](https://classroom.github.com/a/VMb-1xPS)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20079501)

# Dashboard de Accidentes – Tacna

## Descripción
Este proyecto presenta un **dashboard interactivo de accidentes en Tacna**, consolidando información de medios locales y fuentes oficiales para facilitar la toma de decisiones basada en datos confiables. Incluye accidentes de tránsito, laborales, domésticos y otros eventos con riesgo para la población.

## Funcionalidades
- Mapas interactivos de accidentes por ubicación.
- Reportes estadísticos por tipo, fecha y lugar.
- Filtros dinámicos por variables de interés.
- Exportación de reportes a PDF y Excel.
- Interfaz responsiva para dispositivos móviles y PC.

## Tecnologías
- **Power BI** – Visualización de datos.
- **Python** – Web scraping.
- **Bases de datos** – Almacenamiento de información estructurada.
- **HTML/CSS/JS** – Frontend opcional para visualización web.

## RoadMap
1. Recolección y estructuración de datos.
2. Construcción de base de datos.
3. Implementación inicial del dashboard.
4. Filtros dinámicos y exportación de reportes.
5. Optimización y despliegue público.

## Requisitos
- Conexión a internet.
- Navegador moderno: Chrome, Firefox o Edge.
- Datos oficiales y fuentes locales actualizados para el dashboard.

## Instalación
```bash
git clone https://github.com/tuusuario/proyecto-formatos-01.git"
UPT-FAING-EPIS/proyecto-si885-2025-ii-u1-fistdev,proyecto,si885-2025-ii-u1-fistdev,True,3114,False,2,True,False,False,"](https://classroom.github.com/a/VMb-1xPS)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20085849)
# proyecto-formatos-01
# SEACE ProjectFinder

**Subtítulo:** Generador y recomendador de proyectos para Ingenieros de Sistemas del Perú a partir de SEACE

---

## Resumen ejecutivo
SEACE ProjectFinder transforma procesos y convocatorias públicas del **SEACE / OSCE** en un **catálogo** de ideas de proyectos de software y un **dashboard** interactivo (Power BI) que facilita la **identificación visual de los datos más relevantes**. La plataforma está diseñada para **Ingenieros de Sistemas del Perú**, para que profesionales puedan encontrar, priorizar y comenzar proyectos reales basados en necesidades públicas.

---

# 1. Problema
Los procesos y requerimientos publicados en SEACE contienen problemas y demandas concretas del Estado, pero:
- Están dispersos y en formato técnico (pliegos, anexos).  
- Ingenieros de Sistemas no disponen de una interfaz visual que resuma y priorice estas oportunidades.  
- Falta un mecanismo rápido para transformar esos registros en enunciados y acciones técnicas viables.

---

# 2. Objetivo general
Proveer a los Ingenieros de Sistemas del Perú una **herramienta visual** que permita identificar, priorizar y convertir procesos SEACE en resúmenes de proyecto accionables y listos para iniciar (MVP, entregables y Sprint 1).

## Objetivos específicos
- Extraer y almacenar registros públicos relevantes del SEACE (convocatorias, objetos, anexos).  
- Procesar descripciones con NLP para clasificar rubros y extraer requerimientos técnicos.  
- Generar mappings automáticos “registro SEACE → 1–3 ideas de proyecto” con entregables y Sprint 1.  
- Implementar un catálogo consultable con filtros avanzados (rubros, complejidad, anexos, monto).  
- Implementar un chatbot recomendador (RAG + embeddings) que sugiera proyectos según perfil profesional y recursos.  
- Desplegar un dashboard Power BI que muestre KPIs y facilite la priorización de oportunidades.  
- Documentar trazabilidad (id_proceso + URL) y supuestos técnicos.

---

# 3. Alcance
- **Fuente única:** SEACE / OSCE (registros públicos).  
- Cobertura: nacional (Perú), con historial (últimos 3–5 años según disponibilidad).  
- Complejidad técnica: media — incluye ETL, modelado, Power BI y prototipo de recomendador.  
- No integra sistemas internos de entidades ni datos privados.

---

# 4. Usuarios objetivo (generalizado)
- **Ingenieros de Sistemas del Perú** — profesionales que buscan oportunidades reales para desarrollar soluciones, consultorías, productos o MVPs basados en la demanda pública.  
- **Usuarios secundarios:** docentes, grupos de investigación y empresas que quieran alinear propuestas con necesidades estatales.

---

# 5. Fuente de datos
- **SEACE / OSCE:** descripciones de procesos, pliegos, anexos, adjudicaciones y documentación pública.  
- Cada registro será trazable mediante `id_proceso` y `URL` a SEACE.

---"
UPT-FAING-EPIS/proyecto-si784-2025-ii-u1-grupo-_sab_bcc_frlv,proyecto,si784-2025-ii-u1-grupo-_sab_bcc_frlv,True,4100,False,10,False,True,True,"| Integrante                         | Código     |
| ---------------------------------- | ---------- |
| Sebastián Arce Bracamonte          | 2019062986 |
| Brant Antony Chata Choque          | 2021072615 |
| Renzo Fernando Loyola Vilca Choque | 2020067577 |
# 🛡️ Sistema Híbrido en C++ y Python para Detección y Supresión Automática de Keyloggers en Windows

## 📌 Descripción del Proyecto
Este proyecto tiene como finalidad el desarrollo de un **sistema híbrido** en **C++ y Python**, apoyado en algoritmos de **Machine Learning**, para la **detección y supresión automática de keyloggers** en entornos **Windows**.  

Los **keyloggers** representan una amenaza crítica de ciberseguridad, pues capturan información sensible (contraseñas, datos bancarios, credenciales corporativas) de manera oculta y difícil de detectar, incluso para antivirus tradicionales.  

El sistema propuesto se enfoca en el **análisis de procesos, tráfico de red, registros de teclado y comportamiento de archivos**, diferenciando entre procesos legítimos y sospechosos. Además, integra un mecanismo de **respuesta automática** para finalizar procesos maliciosos y poner en cuarentena los archivos infectados.

---

## 🚨 Problema
- Los keyloggers operan ocultos, disfrazándose como procesos legítimos.  
- Antivirus tradicionales se basan en firmas conocidas, lo que limita la detección de variantes nuevas o polimórficas.  
- Existe la necesidad de un sistema **inteligente** capaz de detectar comportamientos anómalos en tiempo real y actuar automáticamente.  

---

## 🎯 Objetivos

### Objetivo Principal
Desarrollar un sistema híbrido en C++ y Python que permita la **detección en tiempo real** y **supresión automática de keyloggers** en entornos Windows, mediante técnicas de Machine Learning.

### Objetivos Específicos
1. Analizar las técnicas utilizadas por los keyloggers para capturar datos y mantenerse ocultos en Windows.  
2. Diseñar un módulo en **C++** para captura de:  
   - Procesos activos  
   - Hooks de teclado  
   - Tráfico de red  
   - Modificaciones de archivos  
3. Implementar en **Python** un modelo de Machine Learning (Random Forest, XGBoost o Isolation Forest) para clasificar procesos sospechosos.  
4. Integrar la comunicación entre **C++ y Python** mediante **Named Pipes** o **Pybind11**.  
5. Desarrollar un mecanismo de **supresión automática** que finalice procesos maliciosos y mueva archivos a cuarentena.  
6. Validar el sistema en **entornos virtuales** (VirtualBox + Cuckoo Sandbox), midiendo:  
   - Precisión  
   - Recall  
   - Tasa de falsos positivos  

---

## 🏗️ Arquitectura del Sistema

```text
+---------------------+       +----------------------+
|  Módulo en C++      | <---> |  Modelo ML en Python |
|  -----------------  |       |  ------------------  |
| - Procesos activos  |       | - Random Forest      |
| - Hooks de teclado  |       | - XGBoost / IForest  |
| - Red y archivos    |       |                      |
+---------------------+       +----------------------+
        |                                 |
        v                                 v
Supresión automática          Decisión inteligente
 (kill / quarantine)          (detección en tiempo real)
```

## 🛠️ Tecnologías Utilizadas

- Lenguajes: C++17, Python 3.10

- Machine Learning: scikit-learn, XGBoost

- Integración C++/Python: Pybind11, Named Pipes

- Entorno de pruebas: VirtualBox, Cuckoo Sandbox

- Sistema operativo objetivo: Windows 10/11

## ⚙️ Requisitos

- Sistema Operativo: Windows 10/11

- Compilador C++: MSVC o MinGW

- Python: 3.10+

**Dependencias de Python:**
```
pip install scikit-learn xgboost pandas numpy
```

**Entorno de pruebas: VirtualBox + Cuckoo Sandbox**

## 📊 Métricas de Evaluación

- Precisión (Accuracy)

- Recall (Detección efectiva de amenazas)

- Tasa de falsos positivos

## 🔒 Consideraciones de Seguridad

- El sistema debe ejecutarse con privilegios de administrador en Windows.

- El mecanismo de supresión está diseñado para usarse en entornos de prueba controlados.

- No se recomienda su ejecución en producción sin validación exhaustiva."
UPT-FAING-EPIS/proyecto-si784-2025-ii-u1-grupo-707,proyecto,si784-2025-ii-u1-grupo-707,True,301,False,0,True,False,False,"](https://classroom.github.com/a/MY42XFMk)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20090664)
# proyecto-formatos-01

HOLA MUNDO"
UPT-FAING-EPIS/proyecto-si784-2025-ii-u1-grupo-vh_,proyecto,si784-2025-ii-u1-grupo-vh_,True,1080,False,1,True,False,False,"](https://classroom.github.com/a/MY42XFMk)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20090665)
# Integrantes
- Royser Alonsso Villanueva Mamani
- Christian Dennis Hinojosa Mucho

---

# Detector de Codigo Muerto o Sin uso

Una herramienta de análisis estático diseñada para identificar y reportar elementos de código que no se utilizan dentro de un proyecto de software. Detecta clases, métodos, variables y archivos que no tienen referencias activas, lo que permite a los desarrolladores mantener su base de código limpia, optimizada y más fácil de mantener.

---

## Objetivo General

Desarrollar una herramienta de análisis estático que permita detectar y reportar de manera automática clases, métodos, variables y archivos no utilizados dentro de un proyecto de software, con el fin de optimizar la calidad del código, facilitar su mantenimiento y reducir la complejidad innecesaria en los sistemas.

---"
UPT-FAING-EPIS/proyecto-si784-2025-ii-u1-grupo-njr,proyecto,si784-2025-ii-u1-grupo-njr,True,1362,False,2,True,False,False,"](https://classroom.github.com/a/MY42XFMk)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20090668)
# proyecto-formatos-01
# 📄 Manipulador de PDFs en Java Web (Maven)

Este proyecto es una **aplicación web** para manipular archivos PDF de manera sencilla y avanzada usando **Java + Maven**.  
Permite crear, editar, convertir, extraer y analizar PDFs directamente desde el navegador.

## 🚀 Tecnologías utilizadas
- **Java 21**  
- **Apache Maven**  
- **Apache PDFBox** (manipulación de PDFs)  
- **Servlets y JSP** (interfaz web)  
- **Tomcat 10** (servidor web)  
- **ZipOutputStream** (para generar archivos ZIP)

## ⚙️ Funcionalidades
- Crear un PDF desde cero con texto e imágenes.  
- Unir varios PDFs en uno solo.  
- Dividir un PDF en páginas separadas.  
- Añadir marca de agua a un documento.  
- Proteger PDF con contraseña.  
- Conversión PDF → Imagen (PNG/JPG).  
- Conversión Imagen → PDF (subir varias imágenes y generar un PDF).  
- Extracción de imágenes desde un PDF y empaquetarlas en un archivo ZIP para descargar.  
- Estadísticas del documento PDF:  
  - Número de páginas  
  - Número de palabras  
  - Número de imágenes  
  - Metadatos (autor, título, fecha de creación)"
UPT-FAING-EPIS/proyecto-si784-2025-ii-u1-devsters,proyecto,si784-2025-ii-u1-devsters,True,289,False,0,True,False,False,"](https://classroom.github.com/a/MY42XFMk)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20090697)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si885-2025-ii-u1-camac_rosas,proyecto,si885-2025-ii-u1-camac_rosas,True,4100,True,12,False,False,False,"# 📊 Proyecto de Inteligencia de Negocios

## Análisis de Uso de Redes Sociales en de Grupos de Telegram

---

## 🎓 Universidad Privada de Tacna

**Facultad de Ingeniería**
**Escuela Profesional de Ingeniería de Sistemas**

**Curso:** Inteligencia de Negocios

**Docente:** Mag. Patrick Cuadros Quiroga

---

## 👥 Integrantes del Equipo

* **César Nikolas Camac Meléndez**
* **Jefferson Ronaldihño Rosas Chambilla**

---

## ❗ Problemática

En la actualidad, los **grupos de Telegram** se han convertido en espacios de interacción masiva, donde los usuarios comparten información, enlaces y contenido de múltiples redes sociales.

Sin embargo, no siempre es sencillo responder a preguntas como:

* ¿Qué redes sociales se comparten con mayor frecuencia en estos grupos?
* ¿Quiénes son los usuarios más activos compartiendo enlaces?
* ¿Qué tipo de contenido genera mayor interacción fuera de Telegram?

---

## 🎯 Objetivo General

Analizar el **uso de redes sociales a partir de los enlaces compartidos en grupos de Telegram**, identificando patrones de comportamiento, usuarios más activos y el impacto de los enlaces en las distintas plataformas.

---

## ✅ Objetivos Específicos

* Identificar todos los enlaces compartidos en un grupo de Telegram en un periodo de tiempo.
* Clasificar los enlaces según la red social de destino (Facebook, Instagram, TikTok, Twitter/X, YouTube, etc.).
* Obtener datos de cada enlace (ej. métricas de interacción, fecha de publicación).
* Analizar a los usuarios que comparten más contenido y su nivel de participación.
* Visualizar las métricas de uso de redes sociales a través de dashboards interactivos.

---

## 🛠️ Tecnologías Utilizadas

* **Python** 🐍 → Extracción y análisis de datos.

  * Librerías: `telethon` (API de Telegram), `pandas`, `matplotlib`, `seaborn`, `requests`.
* **APIs de Redes Sociales** → Recolección de información adicional de los enlaces compartidos.
* **PostgreSQL** 🐘 → Almacenamiento estructurado de datos extraídos.
* **Power BI** 📊 → Dashboard interactivo para visualización de resultados.

---

## 📡 Metodología

1. **Conexión al grupo de Telegram**

   * Uso de `telethon` para obtener el historial de mensajes y filtrar solo los que contienen enlaces.

2. **Extracción de datos de enlaces**

   * Detección de la red social a partir de la URL.
   * Enriquecimiento de datos utilizando APIs públicas o scrapers (likes, comentarios, fecha de publicación).

3. **Procesamiento y limpieza**

   * Normalización de datos de diferentes redes sociales.
   * Identificación de usuarios más activos y frecuencia de publicaciones.

4. **Análisis de patrones**

   * Gráficas de distribución de enlaces por red social.
   * Análisis de tendencias temporales (por día, semana, mes).

5. **Visualización**

   * Creación de dashboard en Power BI mostrando:

     * Redes sociales más compartidas.
     * Top usuarios que publican enlaces.
     * Tendencias de actividad en el tiempo.

---

## 📊 Ejemplo de Visualizaciones

* **Gráfico de barras** con la cantidad de enlaces por red social.
* **Gráfico de líneas** mostrando la evolución de la cantidad de enlaces compartidos a lo largo del tiempo.
* **Ranking de usuarios más activos** compartiendo contenido.
* **Mapa de calor** de actividad por hora del día.

---

## 🚀 Resultados Esperados

* Identificación de qué redes sociales son más populares en los grupos de Telegram analizados.
* Perfil de los usuarios más influyentes (mayor cantidad de enlaces compartidos).
* Detección de patrones de uso y horarios de mayor actividad.
* Dashboard interactivo que permita realizar análisis exploratorio de los datos.

---

## 📎 Enlace al Dashboard

🔗 [Acceder al Dashboard en Power BI](https://app.powerbi.com/) *(se añadirá el link final una vez publicado)*

---

## 📌 Roadmap Futuro

* Ampliar el análisis a múltiples grupos de Telegram simultáneamente.
* Clasificar el tipo de contenido (videos, imágenes, artículos).
* Realizar análisis de sentimiento de los comentarios de las publicaciones compartidas.
* Implementar un sistema automatizado que recolecte y actualice datos en tiempo real."
UPT-FAING-EPIS/proyecto-si889-2025-ii-u1-fistdev2,proyecto,si889-2025-ii-u1-fistdev2,True,289,False,0,True,False,False,"](https://classroom.github.com/a/0SqZJ8VW)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20105605)
# proyecto-formatos-01"
UPT-FAING-EPIS/proyecto-si889-2025-ii-u1-huaman_ancco_rivera,proyecto,si889-2025-ii-u1-huaman_ancco_rivera,True,3970,True,11,False,True,False,"# SIRESA - Sistema de Inspección y Registro de Establecimientos de Salud y Alimentación

## Descripción

SIRESA es una aplicación web para la gestión, inspección y auditoría de establecimientos de comida y bebidas. Permite a administradores, inspectores y ciudadanos consultar información, realizar inspecciones, visualizar mapas y generar reportes detallados sobre el estado y cambios de los establecimientos.

## Equipo de desarrollo:
   - Bruno Ancco Suaña
   - Roberto Huaman Rivera
   - Augusto Rivera Muñoz
 
## Estructura del Proyecto

```
PROYECTO_SIRESA/
├── build.xml                  # Script de construcción (Ant)
├── build/                     # Archivos generados
├── nbproject/                 # Configuración NetBeans
├── src/
│   ├── java/
│   │   ├── controlador/       # Servlets principales (ControladorEstablecimiento, ControladorReporte, ControladorInspeccion, ControladorAuditoria)
│   │   ├── modelo/            # Entidades (Establecimiento, Inspeccion, Usuario, HistorialCambioEstado, etc.)
│   │   ├── modeloDAO/         # DAOs para acceso a datos
│   │   ├── interfaces/        # Interfaces CRUD
│   │   └── util/              # Utilidades (GeneradorActa, GeneradorNotificaciones, EmailService)
│   └── ...
├── web/
│   ├── index.html             # Página de inicio (placeholder)
│   ├── *.jsp                  # Vistas JSP (dashboard, reportes, formularios, mapas, historial, etc.)
│   └── media/                 # Recursos estáticos (imágenes)
├── docs/                      # Documentación técnica y funcional
├── docs_md/                   # Documentación en Markdown
├── README.md                  # Este archivo
```

## Principales Funcionalidades

- **Gestión de Establecimientos:** Registro, edición, consulta y eliminación lógica.
- **Inspecciones:** Registro y seguimiento de inspecciones, generación de actas y notificaciones.
- **Reportes:** Gráficos y tablas por estado, periodo y resultados de inspección.
- **Historial de Cambios:** Auditoría de cambios de estado por establecimiento y global.
- **Mapa Interactivo:** Visualización geográfica de establecimientos según estado.
- **Roles de Usuario:** Administrador, Inspector y Ciudadano, con permisos diferenciados.

## Roadmap

### Fase 1: MVP y Estabilización
- CRUD de establecimientos y usuarios
- Registro y consulta de inspecciones
- Visualización de estado y historial de cambios
- Reportes básicos y gráficos

### Fase 2: Mejoras de Usabilidad y Seguridad
- Validaciones avanzadas en formularios
- Mejorar feedback de errores y mensajes al usuario
- Implementar control de sesiones y expiración segura
- Auditar y reforzar roles y permisos

### Fase 3: Integraciones y Automatización
- Integrar notificaciones por correo electrónico
- Exportar reportes a PDF/Excel
- API REST para consulta externa
- Automatización de backups y logs

### Fase 4: Escalabilidad y Nuevas Funcionalidades
- Soporte para múltiples municipios/regiones
- Dashboard analítico avanzado
- Integración con sistemas externos (RENIEC, SUNAT, etc.)
- Mobile-friendly y PWA


## Instalación y Ejecución

1. **Requisitos:**
   - Java 8+
   - Servidor de aplicaciones compatible con Jakarta EE (Tomcat, GlassFish)
   - Base de datos configurada (ver documentación en `docs/`)
   - NetBeans (opcional, para desarrollo)

2. **Compilación:**
   - Ejecuta `ant build` o usa NetBeans para compilar el proyecto.

3. **Despliegue:**
   - Copia el contenido de `build/web/` al directorio webapps de tu servidor.
   - Configura la base de datos en los archivos de conexión (`config/Conexion.java`).

4. **Acceso:**
   - Ingresa a la aplicación vía navegador en la URL configurada (ejemplo: `http://localhost:8080/PROYECTO_SIRESA/web/index.html`).

## Documentación

- Manual de usuario y técnico en [docs/](docs/)
- Diccionario de datos, estándares y microservicios en [docs/](docs/)
- Diagramas y especificaciones funcionales en [docs_md/](docs_md/)
- Documentación y estándares: Ver archivos en [docs/](docs/)"
UPT-FAING-EPIS/proyecto-si885-2025-ii-u1-easybeca-dashboard,proyecto,si885-2025-ii-u1-easybeca-dashboard,True,5196,False,15,True,False,True,"](https://classroom.github.com/a/VMb-1xPS)
[![Open in Codespaces](https://classroom.github.com/assets/launch-codespace-2972f46106e565e64193e422d61a12cf1da4916b45550586e14ef0a7c637dd04.svg)](https://classroom.github.com/open-in-codespaces?assignment_repo_id=20268708)
# 🎓 Proyecto de Inteligencia de Negocios  
**Análisis de Requisitos y Nivel de Dificultad en Becas Universitarias del Perú**  

📍 **Universidad Privada de Tacna**  
**Facultad de Ingeniería – Escuela Profesional de Ingeniería de Sistemas**  

---

## 👥 Integrantes del Equipo  
- Calizaya Ladera, Andy Michael
- Vargas Gutierrez, Angel Jose
- Colque Ponce, Sergio Alberto
- Castillo Mamani, Diego Fernadinho

---

## ❗ Problemática  
Las becas universitarias en el Perú representan una oportunidad crucial para jóvenes con talento académico y limitaciones económicas. Sin embargo, la información sobre **requisitos, procesos de postulación y beneficios** suele estar dispersa en múltiples documentos (PDFs, convocatorias web, APIs de PRONABEC), lo que dificulta evaluar:  

- ¿Qué beca es más accesible según el perfil del estudiante?  
- ¿Qué nivel de dificultad implica postular a cada una?  
- ¿Cuáles son las principales variables (académicas, socioeconómicas, cobertura) que influyen en la obtención de la beca?  

---

## 🎯 Objetivo General  
Analizar y medir el **nivel de dificultad de postulación (IDB)** en becas universitarias del Perú, integrando requisitos académicos, socioeconómicos y cobertura, mediante un enfoque de Inteligencia de Negocios.  

---

## ✅ Objetivos Específicos  
- Recolectar información real de becas (ej. **Beca BCP, PRONABEC, Beca Presidente de la República**).  
- Clasificar los requisitos en dimensiones (académicos, socioeconómicos, documentos, idioma, etc.).  
- Calcular un **Índice de Dificultad de Beca (IDB)** basado en KPIs predefinidos.  
- Diseñar dashboards interactivos que permitan comparar becas según nivel de dificultad, cobertura y beneficios.  
- Proveer un sistema de apoyo para que los estudiantes identifiquen qué becas son más accesibles a su perfil.  

---

## 🛠️ Tecnologías Utilizadas  
- **Lakehouse (Delta Lake / Databricks / Apache Iceberg)** → Integración de datos crudos (PDFs, CSV, APIs) y estructurados.  
- **Python 🐍** → Procesamiento y análisis de datos (pandas, numpy, PyPDF, requests).  
- **PostgreSQL 🐘** → Almacenamiento estructurado de la información de becas.  
- **Power BI 📊** → Dashboards interactivos para visualización de métricas.  

---

## 📡 Metodología  

### 1. Extracción de datos  
- Recolección de convocatorias en **PDFs y sitios web** oficiales.  
- Obtención de datos de **APIs de PRONABEC y universidades**.  

### 2. Procesamiento y limpieza  
- Conversión de requisitos a tablas normalizadas.  
- Clasificación en categorías:  
  - Requisitos académicos  
  - Socioeconómicos  
  - Documentos obligatorios  
  - Idiomas  
  - Beneficios y cobertura  

### 3. Cálculo de KPIs  
- **Promedio mínimo exigido**  
- **Condición socioeconómica**  
- **Documentación requerida**  
- **Cobertura de beneficios**  
- **Duración y etapas del proceso**  

### 4. Índice de Dificultad de Beca (IDB)  
Se construye a partir de ponderaciones de cada KPI.  
Ejemplo:  
IDB = (0.3 * Académicos) + (0.3 * Socioeconómicos) + (0.2 * Documentos) + (0.2 * Otros)

### 5. Visualización en Power BI  
- Comparación entre becas (IDB).  
- Ranking de becas según accesibilidad.  
- Mapas de cobertura geográfica.  
- Evolución histórica de convocatorias.  

---

## 📊 Ejemplo de Visualizaciones  
- 📈 **Gráfico comparativo**: Becas ordenadas por índice de dificultad (IDB).  
- 📊 **Radar chart**: Requisitos académicos vs. socioeconómicos por beca.  
- 🗺️ **Mapa**: Cobertura de manutención por región.  
- 📋 **Tabla dinámica**: Fechas de convocatoria y duración del proceso.  

---

## 🚀 Resultados Esperados  
- Identificación de **qué becas son más accesibles** según perfil del estudiante.  
- Cálculo del **índice de dificultad estandarizado (IDB)**.  
- Dashboards que permiten explorar y comparar becas en tiempo real.  
- Herramienta de apoyo para la toma de decisiones de estudiantes, familias y orientadores académicos.  

---

## 📦 Inventario de Artefactos del Proyecto  
| Código | Nombre del Documento | Tipo | Enlace |  
|--------|----------------------|------|--------|  
| FD01   | Informe de Factibilidad | PDF / DOCX | Ver |  
| FD02   | Informe de Visión | PDF / DOCX | Ver |  
| FD03   | Especificación de Requerimientos | PDF / DOCX | Ver |  
| FD04   | Arquitectura de Software | PDF / DOCX | Ver |  
| FD05   | Proyecto Final | PDF / DOCX | Ver |  
| DASHBOARD | Dashboard Power BI | PBIX / Enlace | Ver |  
| DATA  | Diccionario de Datos | MD / DOCX | Ver |  

---

## 📌 Roadmap Futuro  
- Integrar más convocatorias y becas en la base de datos.  
- Automatizar el cálculo del índice de dificultad con **actualización en tiempo real**.  
- Incluir análisis predictivo: **probabilidad de éxito de postulación**.  
- Ampliar el sistema a becas internacionales.  

---

📎 **Video Explicativo del Proyecto (YouTube)**  
🔗 *(Se añadirá una vez grabado)*  

📊 **Dashboard en Power BI**  
🔗 *(Se añadirá el enlace cuando esté publicado)*"
